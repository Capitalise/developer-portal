openapi: 3.0.0
info:
  title: platfi-api-platform
  version: 2.6.1
  description: Capitalise Public API
  contact: {}
paths:
  /metrics:
    get:
      x-controller-name: MetricsController
      x-operation-name: metrics
      tags:
        - MetricsController
      responses:
        "200":
          description: Prometheus metrics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanySearchDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: MetricsController.metrics
  /v1/api-key:
    post:
      x-controller-name: APIKeyController
      x-operation-name: createApiKey
      tags:
        - APIKeyController
      description: Generate an API Key
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            example:
              name: My first API key
              partnerApiKey: 62c0f140c7e12998c9d4110ba3025ce8e1e5b3f5e8b958815fc7a058fcc7da05
              scopes:
                - sign_up
                - profile:multiples
                - profile:read
                - profile:write
                - questionnaire:read
                - questionnaire:write
                - funding:read
                - funding:write
                - insights:read
                - scoring:read
                - companies:read
                - offline_access
              expiresAt: "2025-01-27T14:00:42.273Z"
            schema:
              $ref: "#/components/schemas/ApiKeyRequestDto"
        required: true
      operationId: APIKeyController.createApiKey
  /v1/auth/authorize/api-key:
    post:
      x-controller-name: OldHashAuthController
      x-operation-name: authorizeApiKey
      tags:
        - OldHashAuthController
      description: Please use "/v1/authorize/callback-url" instead
      summary: Start authorization for a third party integration
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            example:
              apiKey: 132413hgkj4h234jk5h2g3423452g3j45h2k3j4hg
              callback: http://callback-url
            schema:
              $ref: "#/components/schemas/APIKeyAuthorizeRequestDto"
        required: true
      operationId: OldHashAuthController.authorizeApiKey
  /v1/auth/authorize/callback-url:
    post:
      x-controller-name: OldHashAuthController
      x-operation-name: authorizeCallbackUrl
      tags:
        - OldHashAuthController
      description: Start authorization for a third party integration
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            example:
              apiKey: 132413hgkj4h234jk5h2g3423452g3j45h2k3j4hg
              callback: http://callback-url
            schema:
              $ref: "#/components/schemas/APIKeyAuthorizeRequestDto"
        required: true
      operationId: OldHashAuthController.authorizeCallbackUrl
  /v1/auth/authorize:
    post:
      x-controller-name: HashAuthController
      x-operation-name: signIn
      tags:
        - HashAuthController
      description: Sign in user into platform
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizeThirdPartyResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: hash
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            example:
              email: user@email.com
              password: p4S5w0rd
            schema:
              $ref: "#/components/schemas/UserAuthorizeRequestDto"
        required: true
      operationId: HashAuthController.signIn
  /v1/auth/desmasquerade:
    post:
      x-controller-name: AuthController
      x-operation-name: demasquerade
      tags:
        - AuthController
      description: Desmasquerade an user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DesmasqueradeResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: AuthController.demasquerade
  /v1/auth/invite/sign-up:
    post:
      x-controller-name: HashAuthController
      x-operation-name: inviteToSignup
      tags:
        - HashAuthController
      description: Create an url to invite an user to signup
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            example:
              type: CAPITAL_REPORT
              entity: 2
            schema:
              $ref: "#/components/schemas/SignUpInviteRequestDto"
        required: true
      operationId: HashAuthController.inviteToSignup
  /v1/auth/login:
    post:
      x-controller-name: AuthController
      x-operation-name: login
      tags:
        - AuthController
      description: OAuth2 login
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuth2AuthorizedTokenDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInRequestDto"
        required: true
      operationId: AuthController.login
  /v1/auth/masquerade:
    post:
      x-controller-name: AuthController
      x-operation-name: masquerade
      tags:
        - AuthController
      description: Masquerade as user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuth2AuthorizedTokenDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MasqueradeLoginDto"
        required: true
      operationId: AuthController.masquerade
  /v1/auth/refresh-token:
    post:
      x-controller-name: CapitaliseTokenAuthController
      x-operation-name: refreshToken
      tags:
        - CapitaliseTokenAuthController
      description: Refresh Capitalise OAuth2 access token
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuth2AuthorizedTokenDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenRequestDto"
        required: true
      operationId: CapitaliseTokenAuthController.refreshToken
  /v1/auth/sign-up/check-email/{email}:
    get:
      x-controller-name: AuthController
      x-operation-name: checkEmail
      tags:
        - AuthController
      description: Check if an email is already taken
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: email
          in: path
          schema:
            type: string
          required: true
      operationId: AuthController.checkEmail
  /v1/auth/sign-up/hash/{hash}/details:
    get:
      x-controller-name: HashAuthController
      x-operation-name: getInviteDetails
      tags:
        - HashAuthController
      description: Get hash invite details
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignUpInviterDetailsDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: hash
          in: path
          schema:
            type: string
          required: true
      operationId: HashAuthController.getInviteDetails
  /v1/auth/sign-up/initiate:
    post:
      x-controller-name: AuthController
      x-operation-name: initiateSignup
      tags:
        - AuthController
      description: Initiate a signup into the platform platform
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuth2AuthorizedTokenDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpInitiatedDto"
        required: true
      operationId: AuthController.initiateSignup
  /v1/auth/sign-up/{hash}:
    post:
      x-controller-name: HashAuthController
      x-operation-name: signUp
      tags:
        - HashAuthController
      description: Sign up user into platform using a hash code
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizeThirdPartyResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: hash
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpRequestDto"
        required: true
      operationId: HashAuthController.signUp
  /v1/auth/sign-up:
    post:
      x-controller-name: AuthController
      x-operation-name: signUp
      tags:
        - AuthController
      description: Sign up user into platform
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuth2AuthorizedResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpRequestDto"
        required: true
      operationId: AuthController.signUp
  /v1/auth/social/sign-up:
    post:
      x-controller-name: AuthController
      x-operation-name: socialSignUp
      tags:
        - AuthController
      description: Sign up user via social login
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SocialSignUpResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SocialSignUpRequestDto"
        required: true
      operationId: AuthController.socialSignUp
  /v1/auth/token/code/{code}:
    get:
      x-controller-name: HashAuthController
      x-operation-name: exchangeAccessTokenForJwt
      tags:
        - HashAuthController
      description: Get platform access token from a given authorization code
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessTokenResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: code
          in: path
          schema:
            type: string
          required: true
      operationId: HashAuthController.exchangeAccessTokenForJwt
  /v1/auth/token:
    post:
      x-controller-name: CapitaliseTokenAuthController
      x-operation-name: apiKeyLogin
      tags:
        - CapitaliseTokenAuthController
      description: Capitalise OAuth2 API key login
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuth2AuthorizedTokenDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: x-api-key
          in: header
          schema:
            type: string
          required: true
        - name: capitalise-tenant-id
          in: header
          schema:
            type: string
      operationId: CapitaliseTokenAuthController.apiKeyLogin
  /v1/cases/count:
    get:
      x-controller-name: CasesController
      x-operation-name: countCases
      tags:
        - cases
      description: Count cases
      summary: Count cases
      responses:
        "200":
          description: Open API Spec v3.0.0 and UI schema
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: state
          in: query
          schema:
            type: string
        - name: product
          in: query
          schema:
            type: string
        - name: historyMonths
          in: query
          schema:
            type: number
      operationId: CasesController.countCases
  /v1/cases/dashboard/actions:
    get:
      x-controller-name: CasesDashboardController
      x-operation-name: getActions
      tags:
        - cases
      description: Get cases dashboard actions
      summary: Get cases dashboard actions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DashboardActionDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: CasesDashboardController.getActions
  /v1/cases/latest:
    get:
      x-controller-name: CasesController
      x-operation-name: getLatestCases
      tags:
        - cases
      description: Get the latest cases
      summary: Get the latest cases
      responses:
        "200":
          description: Open API Spec v3.0.0 and UI schema
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: CasesController.getLatestCases
  /v1/cases/summary:
    get:
      x-controller-name: CasesController
      x-operation-name: getCasesDashboardSummary
      tags:
        - cases
      description: Get cases summary by creator id
      summary: Get cases summary by creator id
      responses:
        "200":
          description: Open API Spec v3.0.0 and UI schema
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: CasesController.getCasesDashboardSummary
  /v1/cases/{id}/activities:
    get:
      x-controller-name: CasesController
      x-operation-name: getCasesActivitiesById
      tags:
        - cases
      description: Get case activities by id
      summary: Get case activities by id
      responses:
        "200":
          description: Open API Spec v3.0.0 and UI schema
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: CasesController.getCasesActivitiesById
  /v1/cases/{id}/cancel:
    post:
      x-controller-name: CasesController
      x-operation-name: cancelCase
      tags:
        - cases
      description: Cancel a case activities by id
      summary: Cancel a case activities by id
      responses:
        "200":
          description: Open API Spec v3.0.0 and UI schema
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: CasesController.cancelCase
  /v1/cases/{id}/delete:
    delete:
      x-controller-name: CasesController
      x-operation-name: deleteCase
      tags:
        - cases
      description: Delete a case by id
      summary: Delete a case by id
      responses:
        "200":
          description: Open API Spec v3.0.0 and UI schema
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: CasesController.deleteCase
  /v1/cases/{id}:
    get:
      x-controller-name: CasesController
      x-operation-name: getCasesById
      tags:
        - cases
      description: Get cases by id
      summary: Get cases by id
      responses:
        "200":
          description: Open API Spec v3.0.0 and UI schema
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: CasesController.getCasesById
  /v1/cases:
    get:
      x-controller-name: CasesController
      x-operation-name: getCases
      tags:
        - cases
      description: Get cases for requesting user
      summary: Get cases for requesting user
      responses:
        "200":
          description: Open API Spec v3.0.0 and UI schema
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: CasesController.getCases
  /v1/companies/search/variant/{companyInfo}:
    get:
      x-controller-name: CompanySearchController
      x-operation-name: searchVariant
      tags:
        - CompanySearchController
      responses:
        "200":
          description: Search companies by name or code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanySearchDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: companyInfo
          in: path
          schema:
            type: string
          required: true
        - name: countryCode
          in: query
          schema:
            type: string
          required: false
        - name: limit
          in: query
          schema:
            type: string
          required: false
      operationId: CompanySearchController.searchVariant
  /v1/companies/search/{companyInfo}:
    get:
      x-controller-name: CompanySearchController
      x-operation-name: search
      tags:
        - CompanySearchController
      responses:
        "200":
          description: Search companies by name or code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanySearchDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: companyInfo
          in: path
          schema:
            type: string
          required: true
        - name: countryCode
          in: query
          schema:
            type: string
          required: false
        - name: limit
          in: query
          schema:
            type: string
          required: false
      operationId: CompanySearchController.search
  /v1/credit-reports/{registrationNumber}/creditsafe:
    get:
      x-controller-name: CreditReportsController
      x-operation-name: getCreditSafeCreditReport
      tags:
        - CreditReportsController
      responses:
        "200":
          description: Retrieved CreditSafe credit report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreditReportDto"
            application/pdf:
              schema:
                type: string
                format: binary
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: registrationNumber
          in: path
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          schema:
            type: string
      operationId: CreditReportsController.getCreditSafeCreditReport
  /v1/criteria/{id}/disable:
    patch:
      x-controller-name: CriteriaController
      x-operation-name: disable
      tags:
        - criteria
      description: Disable criteria by ID
      summary: Disable criteria by ID
      responses:
        "204":
          description: Patch active field to false on a criteria
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: CriteriaController.disable
  /v1/criteria/{id}/enable:
    patch:
      x-controller-name: CriteriaController
      x-operation-name: enable
      tags:
        - criteria
      description: Enable criteria by ID
      summary: Enable criteria by ID
      responses:
        "204":
          description: Patch active field to true on a criteria
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: CriteriaController.enable
  /v1/criteria/{id}/json-schema:
    get:
      x-controller-name: CriteriaController
      x-operation-name: getJSONSchemaById
      tags:
        - criteria
      description: Get update criteria JSON schema
      summary: Get update criteria JSON schema
      responses:
        "200":
          description: Open API Spec
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: CriteriaController.getJSONSchemaById
  /v1/criteria/{id}:
    put:
      x-controller-name: CriteriaController
      x-operation-name: update
      tags:
        - criteria
      description: Update existing criteria by ID
      summary: Update existing criteria by ID
      responses:
        "204":
          description: Update a criteria
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCriteriaDto"
        required: true
        x-parameter-index: 1
      operationId: CriteriaController.update
    get:
      x-controller-name: CriteriaController
      x-operation-name: getById
      tags:
        - criteria
      description: Get criteria by ID
      summary: Get criteria by ID
      responses:
        "200":
          description: Get criteria by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CriteriaDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: CriteriaController.getById
    delete:
      x-controller-name: CriteriaController
      x-operation-name: delete
      tags:
        - criteria
      description: Soft delete criteria by ID
      summary: Delete criteria by ID
      responses:
        "204":
          description: Delete a criteria
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: CriteriaController.delete
  /v1/criteria:
    post:
      x-controller-name: CriteriaController
      x-operation-name: create
      tags:
        - criteria
      description: Create a new criteria
      summary: Create a new criteria
      responses:
        "200":
          description: Create a new criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CriteriaDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCriteriaDto"
        required: true
      operationId: CriteriaController.create
    get:
      x-controller-name: CriteriaController
      x-operation-name: getAll
      tags:
        - criteria
      description: Get all criteria
      summary: Get all criteria
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: {}
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: CriteriaController.getAll
  /v1/entities/bulk:
    post:
      x-controller-name: EntityController
      x-operation-name: saveBulkEntities
      tags:
        - EntityController
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BulkEntityCreatedResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/EntityRequestDto"
      operationId: EntityController.saveBulkEntities
  /v1/entities/funding/enquiries/activities:
    get:
      x-controller-name: EnquiryEntityController
      x-operation-name: getAllActivities
      tags:
        - EnquiryEntityController
      responses:
        "200":
          description: Get all activities timeline events by entity id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivitiesTimelineListDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: limit
          in: query
          schema:
            type: number
      operationId: EnquiryEntityController.getAllActivities
  /v1/entities/funding/enquiries/{id}/activities/read:
    patch:
      x-controller-name: EnquiryEntityController
      x-operation-name: patchActivitiesAsReadUnread
      tags:
        - EnquiryEntityController
      responses:
        "204":
          description: Mark the activities of enquiry read by entity and enquiry ids
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivitiesTimelineReadDto"
        required: true
        x-parameter-index: 1
      operationId: EnquiryEntityController.patchActivitiesAsReadUnread
  /v1/entities/funding/enquiries/{id}/statuses:
    patch:
      x-controller-name: EnquiryEntityController
      x-operation-name: patchStatusById
      tags:
        - EnquiryEntityController
      responses:
        "200":
          description: Patch enquiry status by id and entity id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingEnquiryResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FundingEnquiryStatusDto"
        required: true
        x-parameter-index: 1
      operationId: EnquiryEntityController.patchStatusById
  /v1/entities/funding/enquiries/{id}:
    patch:
      x-controller-name: EnquiryEntityController
      x-operation-name: patchById
      tags:
        - EnquiryEntityController
      responses:
        "200":
          description: Patch enquiry by entity and enquiry ids
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingEnquiryResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FundingEnquiryPatchRequestDto"
        required: true
        x-parameter-index: 1
      operationId: EnquiryEntityController.patchById
    get:
      x-controller-name: EnquiryEntityController
      x-operation-name: getByEnquiryId
      tags:
        - EnquiryEntityController
      responses:
        "200":
          description: Get enquiry by entity and enquiry ids
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingEnquiryResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: EnquiryEntityController.getByEnquiryId
    delete:
      x-controller-name: EnquiryEntityController
      x-operation-name: deleteById
      tags:
        - EnquiryEntityController
      responses:
        "204":
          description: Delete enquiry by entity and enquiry ids
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: EnquiryEntityController.deleteById
  /v1/entities/funding/enquiries:
    get:
      x-controller-name: EnquiryEntityController
      x-operation-name: getAll
      tags:
        - EnquiryEntityController
      responses:
        "200":
          description: Get all enquiries of entity id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingEnquiryResponseHateoasDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: offset
          in: query
          schema:
            type: number
        - name: limit
          in: query
          schema:
            type: number
      operationId: EnquiryEntityController.getAll
  /v1/entities/lenders/active:
    get:
      x-controller-name: LenderController
      x-operation-name: getActiveLenders
      tags:
        - LenderController
      responses:
        "200":
          description: Retrieved lenders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LenderResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: LenderController.getActiveLenders
  /v1/entities/manager/bulk:
    patch:
      x-controller-name: EntityController
      x-operation-name: updateManagerBulk
      tags:
        - EntityController
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateManagerBulkDto"
      operationId: EntityController.updateManagerBulk
  /v1/entities/{entityId}/all:
    delete:
      x-controller-name: EntityDataDeletionController
      x-operation-name: deleteEntity
      tags:
        - EntityDataDeletionController
      responses:
        "204":
          description: Entity deleted
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: entityId
          in: path
          schema:
            type: string
          required: true
      operationId: EntityDataDeletionController.deleteEntity
  /v1/entities/{entityId}:
    patch:
      x-controller-name: EntityController
      x-operation-name: updateEntity
      tags:
        - EntityController
      responses:
        "204":
          description: Update entity by id
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: entityId
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityPatchRequestDto"
        x-parameter-index: 1
      operationId: EntityController.updateEntity
    get:
      x-controller-name: EntityController
      x-operation-name: getEntity
      tags:
        - EntityController
      responses:
        "200":
          description: Retrieved entity by id
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/EntityDto"
                  - $ref: "#/components/schemas/BusinessDto"
                  - $ref: "#/components/schemas/IntroducerDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: entityId
          in: path
          schema:
            type: number
          required: true
      operationId: EntityController.getEntity
    delete:
      x-controller-name: EntityController
      x-operation-name: deleteEntity
      tags:
        - EntityController
      responses:
        "204":
          description: delete entity by id
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: entityId
          in: path
          schema:
            type: number
          required: true
      operationId: EntityController.deleteEntity
  /v1/entities:
    post:
      x-controller-name: EntityController
      x-operation-name: saveEntity
      tags:
        - EntityController
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityRequestDto"
        required: true
      operationId: EntityController.saveEntity
    get:
      x-controller-name: EntityController
      x-operation-name: getEntities
      tags:
        - EntityController
      responses:
        "200":
          description: Retrieved entities
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityResponsePageableDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: type
          in: query
          schema:
            type: string
        - name: registrationNumber
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: size
          in: query
          schema:
            type: string
      operationId: EntityController.getEntities
  /v1/events/access:
    get:
      x-controller-name: EventsController
      x-operation-name: getAccessToken
      tags:
        - EventsController
      responses:
        "200":
          description: Get temporary access token for Server-sent event stream
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventStreamAccessTokenDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: EventsController.getAccessToken
  /v1/events:
    get:
      x-controller-name: EventsController
      x-operation-name: fetchEvents
      tags:
        - EventsController
      responses:
        "200":
          description: Fetch events
          content:
            text/event-stream:
              schema:
                type: string
      parameters:
        - name: token
          in: query
          schema:
            type: string
      operationId: EventsController.fetchEvents
  /v1/expirable/tokens/{tokenId}/partner:
    get:
      x-controller-name: ExpirableTokenController
      x-operation-name: getPartnersInfoByHash
      tags:
        - TokensManager
      description: Get information about a partner from a given token
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartnerEntitySummaryDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: tokenId
          in: path
          schema:
            type: string
          required: true
      operationId: ExpirableTokenController.getPartnersInfoByHash
  /v1/facilities/serviceability/score:
    post:
      x-controller-name: FacilitiesController
      x-operation-name: calculateServiceabilityScore
      tags:
        - FacilitiesController
      responses:
        "200":
          description: Calculate serviceability score
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceabilityScoreDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceabilityScoreRequestDto"
      operationId: FacilitiesController.calculateServiceabilityScore
  /v1/funding/applications/{id}/acknowledgement:
    post:
      x-controller-name: ApplicationController
      x-operation-name: applicationAcknowledgement
      tags:
        - ApplicationController
      responses:
        "200":
          description: Acknowledge receipt of an Application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingApplicationDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcknowledgementDto"
        x-parameter-index: 1
      operationId: ApplicationController.applicationAcknowledgement
  /v1/funding/applications/{id}/offer/accept:
    post:
      x-controller-name: ApplicationOfferController
      x-operation-name: applicationOfferAcceptance
      tags:
        - ApplicationOfferController
      responses:
        "200":
          description: Accept an Application Offer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingApplicationDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: ApplicationOfferController.applicationOfferAcceptance
  /v1/funding/applications/{id}/offer:
    post:
      x-controller-name: ApplicationOfferController
      x-operation-name: createOffer
      tags:
        - ApplicationOfferController
      responses:
        "200":
          description: Create an offer for an application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OfferResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationOfferRequestDto"
        required: true
        x-parameter-index: 1
      operationId: ApplicationOfferController.createOffer
  /v1/funding/applications/{id}/rejection:
    post:
      x-controller-name: ApplicationController
      x-operation-name: applicationRejection
      tags:
        - ApplicationController
      responses:
        "200":
          description: Reject an Application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingApplicationDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectionDto"
        x-parameter-index: 1
      operationId: ApplicationController.applicationRejection
  /v1/funding/applications/{id}:
    post:
      x-controller-name: ApplicationController
      x-operation-name: createApplication
      tags:
        - ApplicationController
      responses:
        "200":
          description: Create application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingApplicationDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: ApplicationController.createApplication
    get:
      x-controller-name: ApplicationController
      x-operation-name: getApplication
      tags:
        - ApplicationController
      responses:
        "200":
          description: Get Application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingApplicationDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: ApplicationController.getApplication
  /v1/funding/applications:
    get:
      x-controller-name: ApplicationController
      x-operation-name: getApplications
      tags:
        - ApplicationController
      responses:
        "200":
          description: Get applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FundingApplicationDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: reference
          in: query
          schema:
            type: string
      operationId: ApplicationController.getApplications
  /v1/funding/calculator/max-borrow-amount:
    post:
      x-controller-name: FundingController
      x-operation-name: calculateMaxBorrowAmount
      tags:
        - FundingController
      responses:
        "200":
          description: Calculate how much can be lent for a given rate, repayment budget and term (in months)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MaxBorrowAmountCalculationResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/MaxBorrowAmountCalculationRequestDto"
        required: true
      operationId: FundingController.calculateMaxBorrowAmount
  /v1/funding/calculator/repayments:
    post:
      x-controller-name: FundingController
      x-operation-name: calculateRepayments
      tags:
        - FundingController
      responses:
        "200":
          description: Calculate loan repayments
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepaymentCalculationResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepaymentCalculationRequestDto"
        required: true
      operationId: FundingController.calculateRepayments
  /v1/funding/enquiries/questions:
    get:
      x-controller-name: EnquiryController
      x-operation-name: getQuestions
      tags:
        - EnquiryController
      responses:
        "200":
          description: Get enquiry questions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuestionDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: EnquiryController.getQuestions
  /v1/funding/enquiries:
    post:
      x-controller-name: EnquiryController
      x-operation-name: save
      tags:
        - EnquiryController
      responses:
        "201":
          description: Create enquiry
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingEnquiryResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FundingEnquiryRequestDto"
      operationId: EnquiryController.save
  /v1/funding/matches/{id}/offers/documents:
    post:
      x-controller-name: MatchOfferController
      x-operation-name: uploadOfferDocuments
      tags:
        - MatchOfferController
      responses:
        "200":
          description: Upload offer documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FundingMatchDocumentUploadDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          multipart/form-data:
            x-parser: stream
            schema:
              type: object
        description: multipart/form-data value.
        required: true
        x-parameter-index: 1
      operationId: MatchOfferController.uploadOfferDocuments
  /v1/funding/matches/{id}/offers/history:
    get:
      x-controller-name: MatchOfferController
      x-operation-name: getOfferHistory
      tags:
        - MatchOfferController
      responses:
        "200":
          description: Get all offers by match ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OfferResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: MatchOfferController.getOfferHistory
  /v1/funding/matches/{id}/offers:
    get:
      x-controller-name: MatchOfferController
      x-operation-name: getOffer
      tags:
        - MatchOfferController
      responses:
        "200":
          description: Get latest offer by match ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OfferResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: MatchOfferController.getOffer
  /v1/funding/matches/{id}:
    patch:
      x-controller-name: MatchController
      x-operation-name: patch
      tags:
        - MatchController
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingMatchResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FundingMatchPatchDto"
      operationId: MatchController.patch
    get:
      x-controller-name: MatchController
      x-operation-name: getById
      tags:
        - MatchController
      responses:
        "200":
          description: Get match by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingMatchResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: MatchController.getById
  /v1/funding/searches/{id}/cancel:
    post:
      x-controller-name: SearchController
      x-operation-name: cancelCase
      tags:
        - SearchController
      description: Cancel a case activities by id
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: SearchController.cancelCase
  /v1/funding/searches/{id}/document/{documentId}:
    get:
      x-controller-name: SearchController
      x-operation-name: getDocument
      tags:
        - SearchController
      responses:
        "200":
          description: Get application document
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingMatchDocumentDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: documentId
          in: path
          schema:
            type: string
          required: true
      operationId: SearchController.getDocument
  /v1/funding/searches/{fundingSearchId}/follower/{userId}/toggle:
    patch:
      x-controller-name: SearchController
      x-operation-name: toggleFollower
      tags:
        - SearchController
      responses:
        "200":
          description: Toggle follower
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: fundingSearchId
          in: path
          schema:
            type: string
          required: true
        - name: userId
          in: path
          schema:
            type: string
          required: true
      operationId: SearchController.toggleFollower
  /v1/funding/searches/{id}/followers:
    get:
      x-controller-name: SearchController
      x-operation-name: getFollowers
      tags:
        - SearchController
      responses:
        "200":
          description: Get followers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: SearchController.getFollowers
  /v1/funding/searches/{fundingSearchId}/managers/{userId}:
    patch:
      x-controller-name: SearchController
      x-operation-name: modifyCaseManager
      tags:
        - SearchController
      responses:
        "200":
          description: New manager set in funding search
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: fundingSearchId
          in: path
          schema:
            type: string
          required: true
        - name: userId
          in: path
          schema:
            type: string
          required: true
      operationId: SearchController.modifyCaseManager
  /v1/funding/searches/{id}/matches/{matchId}/offers/schema:
    get:
      x-controller-name: SearchOfferController
      x-operation-name: getSchema
      tags:
        - SearchOfferController
      responses:
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: matchId
          in: path
          schema:
            type: number
          required: true
      operationId: SearchOfferController.getSchema
  /v1/funding/searches/{id}/matches:
    get:
      x-controller-name: SearchController
      x-operation-name: getMatchesByFundingSearchId
      tags:
        - SearchController
      responses:
        "200":
          description: Get funding searches matches by search ID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FundingMatchResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: SearchController.getMatchesByFundingSearchId
  /v1/funding/searches/{id}/price-estimates:
    get:
      x-controller-name: SearchController
      x-operation-name: getPriceEstimates
      tags:
        - SearchController
      responses:
        "200":
          description: Get price estimates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvgPriceEstimatesDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: SearchController.getPriceEstimates
  /v1/funding/searches/{id}/privacy:
    patch:
      x-controller-name: SearchController
      x-operation-name: togglePrivacy
      tags:
        - SearchController
      description: Toggle a case privacy by id
      summary: Toggle a case privacy by id
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CasePrivacyDto"
        required: true
        x-parameter-index: 1
      operationId: SearchController.togglePrivacy
  /v1/funding/searches/{id}:
    get:
      x-controller-name: SearchController
      x-operation-name: getById
      tags:
        - SearchController
      responses:
        "200":
          description: Get Funding Search by ID
        "404":
          description: Funding search with provided ID not found
        "500":
          description: Internal server error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
        - name: includeNotify
          in: query
          schema:
            type: boolean
        - name: includeRules
          in: query
          schema:
            type: boolean
      operationId: SearchController.getById
  /v1/leads/{type}:
    get:
      x-controller-name: LeadController
      x-operation-name: getLeadByType
      tags:
        - LeadController
      responses:
        "200":
          description: Get leads by type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LeadDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: type
          in: path
          schema:
            type: string
          required: true
      operationId: LeadController.getLeadByType
  /v1/me:
    get:
      x-controller-name: MeController
      x-operation-name: getSelf
      tags:
        - MeController
      responses:
        "200":
          description: Retrieve self user data.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: MeController.getSelf
  /v1/networks/register/learn:
    post:
      x-controller-name: NetworkController
      x-operation-name: registerNetwork
      tags:
        - NetworkController
      responses:
        "200":
          description: Use the network to register for learn program
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LearnRegisterResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: slug
          in: query
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LearnRegisterDto"
        required: true
        x-parameter-index: 1
      operationId: NetworkController.registerNetwork
  /v1/networks:
    get:
      x-controller-name: NetworkController
      x-operation-name: getNetworkBySlug
      tags:
        - NetworkController
      responses:
        "200":
          description: Search networks by network slug.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: slug
          in: query
          schema:
            type: string
          required: true
      operationId: NetworkController.getNetworkBySlug
  /v1/permissions/{scope}:
    post:
      x-controller-name: PermissionsController
      x-operation-name: handlePermissionGeneration
      tags:
        - PermissionsController
      description: Generate an API Key
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: scope
          in: path
          schema:
            type: string
          required: true
      operationId: PermissionsController.handlePermissionGeneration
  /v1/profiles/accountant-details/json-schema:
    get:
      x-controller-name: ProfileAccountantDetailsController
      x-operation-name: getJsonSchema
      tags:
        - profiles
        - profiles-section
      description: Get profile accountant details section.
      summary: Get profile accountant details section.
      responses:
        "200":
          description: Open API Spec
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: ProfileAccountantDetailsController.getJsonSchema
  /v1/profiles/asset-for-security/json-schema:
    get:
      x-controller-name: ProfileAssetForSecurityController
      x-operation-name: getJsonSchema
      tags:
        - profiles
        - profiles-section
      description: Get profile asset for security section.
      summary: Get profile asset for security section.
      responses:
        "200":
          description: Open API Spec
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: ProfileAssetForSecurityController.getJsonSchema
  /v1/profiles/asset-to-finance/json-schema:
    get:
      x-controller-name: ProfileAssetToFinanceController
      x-operation-name: getJsonSchema
      tags:
        - profiles
        - profiles-section
      description: Get profile asset to finance section.
      summary: Get profile asset to finance section.
      responses:
        "200":
          description: Open API Spec
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: ProfileAssetToFinanceController.getJsonSchema
  /v1/profiles/background-and-purpose/json-schema:
    get:
      x-controller-name: ProfileBackgroundPurposeController
      x-operation-name: getJsonSchema
      tags:
        - profiles
        - profiles-section
      description: Get profile background and purpose section.
      summary: Get profile background and purpose section.
      responses:
        "200":
          description: Open API Spec
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: ProfileBackgroundPurposeController.getJsonSchema
  /v1/profiles/company-credit-profile/json-schema:
    get:
      x-controller-name: ProfileCompanyCreditController
      x-operation-name: getJsonSchema
      tags:
        - profiles
        - profiles-section
      description: Get profile company credit profile section.
      summary: Get profile company credit profile section.
      responses:
        "200":
          description: Open API Spec
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: ProfileCompanyCreditController.getJsonSchema
  /v1/profiles/company-details/json-schema:
    get:
      x-controller-name: ProfileCompanyDetailsController
      x-operation-name: getJsonSchema
      tags:
        - profiles
        - profiles-section
      description: Get profile company details section.
      summary: Get profile company details section.
      responses:
        "200":
          description: Open API Spec
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: ProfileCompanyDetailsController.getJsonSchema
  /v1/profiles/credit-card-information/json-schema:
    get:
      x-controller-name: ProfileCreditCardInformationController
      x-operation-name: getJsonSchema
      tags:
        - profiles
        - profiles-section
      description: Get profile credit card information section.
      summary: Get profile credit card information section.
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: ProfileCreditCardInformationController.getJsonSchema
  /v1/profiles/director-details/json-schema:
    get:
      x-controller-name: ProfileDirectorDetailsController
      x-operation-name: getJsonSchema
      tags:
        - profiles
        - profiles-section
      description: Get profile director details section.
      summary: Get profile director details section.
      responses:
        "200":
          description: Open API Spec
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: ProfileDirectorDetailsController.getJsonSchema
  /v1/profiles/entity/{entityId}/funding-affordability:
    post:
      x-controller-name: ProfileFundingAffordabilityController
      x-operation-name: createFundingAffordability
      tags:
        - profiles
      description: Create a funding affordability profile for entity
      summary: Create a funding affordability profile for entity
      responses:
        "201":
          description: Profile successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicProfileRequestDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: entityId
          in: path
          schema:
            type: number
          required: true
      operationId: ProfileFundingAffordabilityController.createFundingAffordability
    get:
      x-controller-name: ProfileFundingAffordabilityController
      x-operation-name: getLatestForFundingAffordabilityByEntityId
      tags:
        - profiles
      description: This endpoint allows you to retrieve the full funding affordability profile object given an entityId
      summary: Get funding affordability profile.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicProfileResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: entityId
          in: path
          schema:
            type: number
          required: true
      operationId: ProfileFundingAffordabilityController.getLatestForFundingAffordabilityByEntityId
  /v1/profiles/entity/{entityId}:
    get:
      x-controller-name: ProfileController
      x-operation-name: getByEntityId
      tags:
        - profiles
      description: This endpoint allows you to retrieve your full profile object by entity ID.
      summary: Get profile.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicProfileResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: entityId
          in: path
          schema:
            type: number
          required: true
      operationId: ProfileController.getByEntityId
  /v1/profiles/funding-search/{fundingSearchId}:
    get:
      x-controller-name: ProfileController
      x-operation-name: getProfileByFundingSearchId
      tags:
        - profiles
      description: Get a profile
      summary: Get a profile
      responses:
        "200":
          description: Profile
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: fundingSearchId
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileController.getProfileByFundingSearchId
  /v1/profiles/invoice-finance/json-schema:
    get:
      x-controller-name: ProfileInvoiceFinanceController
      x-operation-name: getJsonSchema
      tags:
        - profiles
        - profiles-section
      description: Get profile invoice finance schema.
      summary: Get profile invoice finance schema.
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: ProfileInvoiceFinanceController.getJsonSchema
  /v1/profiles/property-finance/json-schema:
    get:
      x-controller-name: ProfilePropertyFinanceController
      x-operation-name: getJsonSchema
      tags:
        - profiles
        - profiles-section
      description: Get profile property finance section.
      summary: Get profile property finance section.
      responses:
        "200":
          description: Open API Spec
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: ProfilePropertyFinanceController.getJsonSchema
  /v1/profiles/trade-finance/json-schema:
    get:
      x-controller-name: ProfileTradeFinanceController
      x-operation-name: getJsonSchema
      tags:
        - profiles
        - profiles-section
      description: Get profile trade finance section.
      summary: Get profile trade finance section.
      responses:
        "200":
          description: Open API Spec
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: ProfileTradeFinanceController.getJsonSchema
  /v1/profiles/trading-history/json-schema:
    get:
      x-controller-name: ProfileTradingHistoryController
      x-operation-name: getJsonSchema
      tags:
        - profiles
        - profiles-section
      description: Get profile trading history section.
      summary: Get profile trading history section.
      responses:
        "200":
          description: Open API Spec
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: ProfileTradingHistoryController.getJsonSchema
  /v1/profiles/{uuid}/accountant-details:
    put:
      x-controller-name: ProfileAccountantDetailsController
      x-operation-name: put
      tags:
        - profiles
        - profiles-section
      description: Put profile accountant details section.
      summary: Put profile accountant details section.
      responses:
        "204":
          description: Profile accountant details section updated.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileAccountantDetailsDto"
        required: true
        x-parameter-index: 1
      operationId: ProfileAccountantDetailsController.put
    get:
      x-controller-name: ProfileAccountantDetailsController
      x-operation-name: getById
      tags:
        - profiles
        - profiles-section
      description: Get profile accountant details section.
      summary: Get profile accountant details section.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileAccountantDetailsDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileAccountantDetailsController.getById
  /v1/profiles/{uuid}/applications:
    post:
      x-controller-name: ProfileController
      x-operation-name: submitLendersForApplication
      tags:
        - profiles
      description: This endpoint allows you to retrieve a list of lenders for application.
      summary: Get list of lenders for application.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicProfileResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items: {}
        x-parameter-index: 1
      operationId: ProfileController.submitLendersForApplication
    get:
      x-controller-name: ProfileController
      x-operation-name: getLendersForApplication
      tags:
        - profiles
      description: This endpoint allows you to retrieve a list of lenders for application.
      summary: Get list of lenders for application.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicProfileResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileController.getLendersForApplication
  /v1/profiles/{uuid}/asset-for-security:
    put:
      x-controller-name: ProfileAssetForSecurityController
      x-operation-name: put
      tags:
        - profiles
        - profiles-section
      description: Put profile asset for security section.
      summary: Put profile asset for security section.
      responses:
        "204":
          description: Profile asset for security section updated.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProfileAssetForSecurityDto"
              minItems: 1
        required: true
        x-parameter-index: 1
      operationId: ProfileAssetForSecurityController.put
    get:
      x-controller-name: ProfileAssetForSecurityController
      x-operation-name: getById
      tags:
        - profiles
        - profiles-section
      description: Get profile asset for security section.
      summary: Get profile asset for security section.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProfileAssetForSecurityDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileAssetForSecurityController.getById
  /v1/profiles/{uuid}/asset-to-finance:
    put:
      x-controller-name: ProfileAssetToFinanceController
      x-operation-name: put
      tags:
        - profiles
        - profiles-section
      description: Put profile asset to finance section.
      summary: Put profile asset to finance section.
      responses:
        "204":
          description: Profile asset to finance section updated.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProfileAssetToFinanceDto"
              minItems: 1
        required: true
        x-parameter-index: 1
      operationId: ProfileAssetToFinanceController.put
    get:
      x-controller-name: ProfileAssetToFinanceController
      x-operation-name: getById
      tags:
        - profiles
        - profiles-section
      description: Get profile asset to finance section.
      summary: Get profile asset to finance section.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileAssetToFinanceDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileAssetToFinanceController.getById
  /v1/profiles/{uuid}/background-and-purpose:
    put:
      x-controller-name: ProfileBackgroundPurposeController
      x-operation-name: put
      tags:
        - profiles
        - profiles-section
      description: Put profile background and purpose section.
      summary: Put profile background and purpose section.
      responses:
        "204":
          description: Profile background and purpose section updated.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileBackgroundPurposeDto"
        required: true
        x-parameter-index: 1
      operationId: ProfileBackgroundPurposeController.put
    get:
      x-controller-name: ProfileBackgroundPurposeController
      x-operation-name: getById
      tags:
        - profiles
        - profiles-section
      description: Get profile background and purpose section.
      summary: Get profile background and purpose section.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileBackgroundPurposeDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileBackgroundPurposeController.getById
  /v1/profiles/{uuid}/company-credit-profile:
    put:
      x-controller-name: ProfileCompanyCreditController
      x-operation-name: put
      tags:
        - profiles
        - profiles-section
      description: Put profile company credit profile section.
      summary: Put profile company credit profile section.
      responses:
        "204":
          description: Profile company credit profile section updated.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileOverDraftUsageDto"
        required: true
        x-parameter-index: 1
      operationId: ProfileCompanyCreditController.put
    get:
      x-controller-name: ProfileCompanyCreditController
      x-operation-name: getById
      tags:
        - profiles
        - profiles-section
      description: Get profile company credit profile section.
      summary: Get profile company credit profile section.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileOverDraftUsageDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileCompanyCreditController.getById
  /v1/profiles/{uuid}/company-details:
    put:
      x-controller-name: ProfileCompanyDetailsController
      x-operation-name: put
      tags:
        - profiles
        - profiles-section
      description: Put profile company details section.
      summary: Put profile company details section.
      responses:
        "204":
          description: Profile company details section updated.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileCompanyDetailsDto"
        required: true
        x-parameter-index: 1
      operationId: ProfileCompanyDetailsController.put
    get:
      x-controller-name: ProfileCompanyDetailsController
      x-operation-name: getById
      tags:
        - profiles
        - profiles-section
      description: Get profile company details section.
      summary: Get profile company details section.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileCompanyDetailsDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileCompanyDetailsController.getById
  /v1/profiles/{uuid}/credit-card-information:
    put:
      x-controller-name: ProfileCreditCardInformationController
      x-operation-name: put
      tags:
        - profiles
        - profiles-section
      description: Put profile credit card information section.
      summary: Put profile credit card information section.
      responses:
        "204":
          description: Profile credit card information updated.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileCreditCardInformationDto"
        required: true
        x-parameter-index: 1
      operationId: ProfileCreditCardInformationController.put
    get:
      x-controller-name: ProfileCreditCardInformationController
      x-operation-name: getById
      tags:
        - profiles
        - profiles-section
      description: Get profile credit card information section.
      summary: Get profile credit card information section.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileCreditCardInformationDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileCreditCardInformationController.getById
  /v1/profiles/{uuid}/director-details/{directorId}:
    put:
      x-controller-name: ProfileDirectorDetailsController
      x-operation-name: put
      tags:
        - profiles
        - profiles-section
      description: Patch profile director detail entry.
      summary: Patch profile director detail entry.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileDirectorDetailsResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
        - name: directorId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileDirectorDetailsRequestDto"
        required: true
        x-parameter-index: 2
      operationId: ProfileDirectorDetailsController.put
    delete:
      x-controller-name: ProfileDirectorDetailsController
      x-operation-name: del
      tags:
        - profiles
        - profiles-section
      description: Delete profile director detail entry.
      summary: Delete profile director detail entry.
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
        - name: directorId
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileDirectorDetailsController.del
  /v1/profiles/{uuid}/director-details:
    post:
      x-controller-name: ProfileDirectorDetailsController
      x-operation-name: post
      tags:
        - profiles
        - profiles-section
      description: Create a new profile director.
      summary: Create a new profile director.
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileDirectorDetailsResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileDirectorDetailsRequestDto"
        required: true
        x-parameter-index: 1
      operationId: ProfileDirectorDetailsController.post
    get:
      x-controller-name: ProfileDirectorDetailsController
      x-operation-name: getById
      tags:
        - profiles
        - profiles-section
      description: Get profile director details section.
      summary: Get profile director details section.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProfileDirectorDetailsResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileDirectorDetailsController.getById
  /v1/profiles/{uuid}/documents/types/{type}/download:
    get:
      x-controller-name: ProfileDocumentsController
      x-operation-name: downloadAllDocuments
      tags:
        - profiles
        - profiles-document
      description: Get all documents by type as zip archive
      summary: Get all documents by type as zip archive
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
        - name: type
          in: path
          schema:
            enum:
              - for-application
              - for-credit-review
            type: string
          required: true
        - name: redirect
          in: query
          schema:
            type: string
          required: false
      operationId: ProfileDocumentsController.downloadAllDocuments
  /v1/profiles/{uuid}/documents/types/{type}/set-complete:
    patch:
      x-controller-name: ProfileDocumentsController
      x-operation-name: setDocumentsCompleted
      tags:
        - profiles
        - profiles-document
      description: Set all profile documents as complete
      summary: Set all profile documents as complete
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
        - name: type
          in: path
          schema:
            enum:
              - for-application
              - for-credit-review
            type: string
          required: true
      operationId: ProfileDocumentsController.setDocumentsCompleted
  /v1/profiles/{uuid}/documents/types/{type}/to-upload:
    get:
      x-controller-name: ProfileDocumentsController
      x-operation-name: getListOfDocumentToUpload
      tags:
        - profiles
        - profiles-document
      description: Get list of documents to upload by type
      summary: Get list of documents to upload by type
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProfileDocumentToUploadDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
        - name: type
          in: path
          schema:
            enum:
              - for-application
              - for-credit-review
            type: string
          required: true
      operationId: ProfileDocumentsController.getListOfDocumentToUpload
  /v1/profiles/{uuid}/documents/types/{type}/{group}:
    post:
      x-controller-name: ProfileDocumentsController
      x-operation-name: uploadDocumentForTypeAndGroup
      tags:
        - profiles
        - profiles-document
      description: Upload documents to profile by type and group
      summary: Upload documents to profile by type and group
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
        - name: type
          in: path
          schema:
            enum:
              - for-application
              - for-credit-review
            type: string
          required: true
        - name: group
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data:
            x-parser: stream
            schema:
              type: object
        description: multipart/form-data
        required: true
        x-parameter-index: 3
      operationId: ProfileDocumentsController.uploadDocumentForTypeAndGroup
  /v1/profiles/{uuid}/documents/types/{type}:
    post:
      x-controller-name: ProfileDocumentsController
      x-operation-name: uploadDocumentForType
      tags:
        - profiles
        - profiles-document
      description: Upload documents to profile by type
      summary: Upload documents to profile by type
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
        - name: type
          in: path
          schema:
            enum:
              - for-application
              - for-credit-review
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data:
            x-parser: stream
            schema:
              type: object
        description: multipart/form-data
        required: true
        x-parameter-index: 2
      operationId: ProfileDocumentsController.uploadDocumentForType
    get:
      x-controller-name: ProfileDocumentsController
      x-operation-name: getUploadedDocumentsByType
      tags:
        - profiles
        - profiles-document
      description: Get list of uploaded documents by type
      summary: Get list of uploaded documents by type
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProfileDocumentDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
        - name: type
          in: path
          schema:
            enum:
              - for-application
              - for-credit-review
            type: string
          required: true
      operationId: ProfileDocumentsController.getUploadedDocumentsByType
  /v1/profiles/{uuid}/documents/{documentId}/download:
    get:
      x-controller-name: ProfileDocumentsController
      x-operation-name: downloadDocumentById
      tags:
        - profiles
        - profiles-document
      description: Download profile document by ID
      summary: Download profile document by ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProfileDocumentDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
        - name: documentId
          in: path
          schema:
            type: string
          required: true
        - name: redirect
          in: query
          schema:
            type: string
          required: false
      operationId: ProfileDocumentsController.downloadDocumentById
  /v1/profiles/{uuid}/documents/{documentId}:
    get:
      x-controller-name: ProfileDocumentsController
      x-operation-name: getById
      tags:
        - profiles
        - profiles-document
      description: Get profile document by ID
      summary: Get profile document by ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProfileDocumentDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
        - name: documentId
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileDocumentsController.getById
    delete:
      x-controller-name: ProfileDocumentsController
      x-operation-name: deleteDocumentById
      tags:
        - profiles
        - profiles-document
      description: Delete document
      summary: Delete document
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
        - name: documentId
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileDocumentsController.deleteDocumentById
  /v1/profiles/{uuid}/documents:
    get:
      x-controller-name: ProfileDocumentsController
      x-operation-name: getUploadedDocuments
      tags:
        - profiles
        - profiles-document
      description: Get list of uploaded documents
      summary: Get list of uploaded documents
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProfileDocumentDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileDocumentsController.getUploadedDocuments
  /v1/profiles/{uuid}/export:
    get:
      x-controller-name: ProfileController
      x-operation-name: exportByUUID
      tags:
        - profiles
      description: This endpoint allows you to export your full profile object.
      summary: Export profile.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileController.exportByUUID
  /v1/profiles/{uuid}/funding/results/average:
    get:
      x-controller-name: ProfileMatchController
      x-operation-name: getMatchesResultsAverage
      tags:
        - profiles
      description: Retrieves the average of the funding results for a given profile
      summary: Get average funding results
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MatchesResultsAverageDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileMatchController.getMatchesResultsAverage
  /v1/profiles/{uuid}/funding-affordability:
    patch:
      x-controller-name: ProfileFundingAffordabilityController
      x-operation-name: patch
      tags:
        - profiles
      description: Patch a funding affordability profile by UUID
      summary: Patch a funding affordability profile by UUID
      responses:
        "201":
          description: Profile successfully patched
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicProfileRequestDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileFundingAffordabilityPatchDto"
        required: true
        x-parameter-index: 1
      operationId: ProfileFundingAffordabilityController.patch
  /v1/profiles/{uuid}/invoice-finance:
    put:
      x-controller-name: ProfileInvoiceFinanceController
      x-operation-name: put
      tags:
        - profiles
        - profiles-section
      description: Put profile invoice finance section.
      summary: Put profile invoice finance section.
      responses:
        "204":
          description: Profile invoice finance updated.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileInvoiceFinanceDto"
        required: true
        x-parameter-index: 1
      operationId: ProfileInvoiceFinanceController.put
    get:
      x-controller-name: ProfileInvoiceFinanceController
      x-operation-name: getById
      tags:
        - profiles
        - profiles-section
      description: Get profile invoice finance section.
      summary: Get profile invoice finance section.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileInvoiceFinanceDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileInvoiceFinanceController.getById
  /v1/profiles/{uuid}/property-finance:
    put:
      x-controller-name: ProfilePropertyFinanceController
      x-operation-name: put
      tags:
        - profiles
        - profiles-section
      description: Put profile property finance section.
      summary: Put profile property finance section.
      responses:
        "204":
          description: Profile property finance section updated.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProfilePropertyFinanceDto"
              minItems: 1
        required: true
        x-parameter-index: 1
      operationId: ProfilePropertyFinanceController.put
    get:
      x-controller-name: ProfilePropertyFinanceController
      x-operation-name: getId
      tags:
        - profiles
        - profiles-section
      description: Get profile property finance section.
      summary: Get profile property finance section.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProfilePropertyFinanceDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfilePropertyFinanceController.getId
  /v1/profiles/{uuid}/questionnaires/{questionnaireId}/snapshots:
    patch:
      x-controller-name: ProfileSnapshotController
      x-operation-name: patchQuestionnaireWithSnapshot
      tags:
        - profiles
        - questionnaires
        - questionnaires-submissions
        - submissions
      description: Patch a questionnaire with snapshot data and return UI schema.
      summary: Patch a questionnaire with snapshot data and return UI schema.
      responses:
        "200":
          description: Open API Spec v3.0.0 and UI schema
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
        - name: questionnaireId
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileSnapshotController.patchQuestionnaireWithSnapshot
  /v1/profiles/{uuid}/snapshots/available:
    get:
      x-controller-name: ProfileSnapshotController
      x-operation-name: pollSnapshot
      tags:
        - profiles
        - questionnaires
        - questionnaires-submissions
        - submissions
      description: Check if a profile has available snapshots.
      summary: Check if a profile has available snapshots.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SnapshotAvailableDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: MKTAPI-Authorization
          in: header
          schema:
            type: string
          required: true
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileSnapshotController.pollSnapshot
  /v1/profiles/{uuid}/trade-finance:
    put:
      x-controller-name: ProfileTradeFinanceController
      x-operation-name: put
      tags:
        - profiles
        - profiles-section
      description: Put profile trade finance section.
      summary: Put profile trade finance section.
      responses:
        "204":
          description: Profile trade finance section updated.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileTradeFinanceDto"
        required: true
        x-parameter-index: 1
      operationId: ProfileTradeFinanceController.put
    get:
      x-controller-name: ProfileTradeFinanceController
      x-operation-name: getById
      tags:
        - profiles
        - profiles-section
      description: Get profile trade finance section.
      summary: Get profile trade finance section.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileTradeFinanceDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileTradeFinanceController.getById
  /v1/profiles/{uuid}/trading-history:
    put:
      x-controller-name: ProfileTradingHistoryController
      x-operation-name: put
      tags:
        - profiles
        - profiles-section
      description: Put profile trading history section.
      summary: Put profile trading history section.
      responses:
        "204":
          description: Profile trading history section updated.
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProfileTradingHistoryDto"
              minItems: 1
        required: true
        x-parameter-index: 1
      operationId: ProfileTradingHistoryController.put
    get:
      x-controller-name: ProfileTradingHistoryController
      x-operation-name: getById
      tags:
        - profiles
        - profiles-section
      description: Get profile trading history section.
      summary: Get profile trading history section.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProfileTradingHistoryDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileTradingHistoryController.getById
  /v1/profiles/{uuid}:
    patch:
      x-controller-name: ProfileController
      x-operation-name: patch
      tags:
        - profiles
      description: Patch a profile
      summary: Patch a profile
      responses:
        "204":
          description: Profile successfully patched
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublicProfileRequestDto"
        required: true
        x-parameter-index: 1
      operationId: ProfileController.patch
    get:
      x-controller-name: ProfileController
      x-operation-name: getByUUID
      tags:
        - profiles
      description: This endpoint allows you to retrieve your full profile object.
      summary: Get profile.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicProfileResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileController.getByUUID
    delete:
      x-controller-name: ProfileController
      x-operation-name: deleteProfile
      tags:
        - profiles
      description: Delete a profile
      summary: Delete a profile
      responses:
        "204":
          description: Profile
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
      operationId: ProfileController.deleteProfile
  /v1/profiles:
    post:
      x-controller-name: ProfileController
      x-operation-name: create
      tags:
        - profiles
      description: Create a profile
      summary: Create a profile
      responses:
        "201":
          description: Profile successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PrivateProfileResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublicProfileRequestDto"
        required: true
      operationId: ProfileController.create
  /v1/questionnaires/{questionnaireId}/eligibility/{entityId}:
    get:
      x-controller-name: QuestionnaireController
      x-operation-name: verifyEligibility
      tags:
        - profiles
      description: Verify eligibility to answer questionnaire
      summary: Verify eligibility to answer questionnaire
      responses:
        "200":
          description: Open API Spec v3.0.0 and UI schema
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: questionnaireId
          in: path
          schema:
            type: string
          required: true
        - name: entityId
          in: path
          schema:
            type: string
          required: true
      operationId: QuestionnaireController.verifyEligibility
  /v1/questionnaires/{questionnaireId}/profiles/{uuid}/filters-schema:
    get:
      x-controller-name: QuestionnaireController
      x-operation-name: getFilterSchema
      tags:
        - profiles
      description: Get questionnaire submission filters schema
      summary: Get questionnaire submission filters schema
      responses:
        "200":
          description: Open API Spec v3.0.0 and UI schema
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
        - name: questionnaireId
          in: path
          schema:
            type: string
          required: true
      operationId: QuestionnaireController.getFilterSchema
  /v1/questionnaires/{questionnaireId}/profiles/{uuid}/ui-schema:
    get:
      x-controller-name: QuestionnaireController
      x-operation-name: getUISchema
      tags:
        - profiles
      description: Get questionnaire submission UI schema
      summary: Get questionnaire submission UI schema
      responses:
        "200":
          description: Open API Spec v3.0.0 and UI schema
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
          required: true
        - name: questionnaireId
          in: path
          schema:
            type: string
          required: true
      operationId: QuestionnaireController.getUISchema
  /v1/teams/{id}:
    patch:
      x-controller-name: TeamController
      x-operation-name: updateTeam
      tags:
        - TeamController
      responses:
        "204":
          description: Team updated successfully
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditTeamRequestDto"
        required: true
        x-parameter-index: 1
      operationId: TeamController.updateTeam
    delete:
      x-controller-name: TeamController
      x-operation-name: deleteTeam
      tags:
        - TeamController
      responses:
        "204":
          description: Team deleted successfully
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: number
          required: true
      operationId: TeamController.deleteTeam
  /v1/teams:
    post:
      x-controller-name: TeamController
      x-operation-name: createTeam
      tags:
        - TeamController
      responses:
        "200":
          description: Created a team
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PartialTeamResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamRequestDto"
        required: true
      operationId: TeamController.createTeam
    get:
      x-controller-name: TeamController
      x-operation-name: getTeams
      tags:
        - TeamController
      responses:
        "200":
          description: Get All Teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FullTeamResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: includeDeactivatedUsers
          in: query
          schema:
            type: boolean
        - name: offset
          in: query
          schema:
            type: number
        - name: limit
          in: query
          schema:
            type: number
      operationId: TeamController.getTeams
  /v1/tenants/{id}:
    patch:
      x-controller-name: TenantController
      x-operation-name: patch
      tags:
        - TenantController
      description: Patch tenant
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: TenantController.patch
    delete:
      x-controller-name: TenantController
      x-operation-name: delete
      tags:
        - TenantController
      description: Delete tenant
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: TenantController.delete
  /v1/tenants:
    post:
      x-controller-name: TenantController
      x-operation-name: create
      tags:
        - TenantController
      description: Create a new tenant
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: TenantController.create
    get:
      x-controller-name: TenantController
      x-operation-name: getAll
      tags:
        - TenantController
      description: Get tenants
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: offset
          in: query
          schema:
            type: string
          required: false
        - name: limit
          in: query
          schema:
            type: string
          required: false
      operationId: TenantController.getAll
  /v1/users/funding/enquiries/activities:
    get:
      x-controller-name: EnquiryUserController
      x-operation-name: getAllActivities
      tags:
        - EnquiryUserController
      responses:
        "200":
          description: Get all activities timeline events by user id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ActivitiesTimelineListDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: limit
          in: query
          schema:
            type: number
      operationId: EnquiryUserController.getAllActivities
  /v1/users/funding/enquiries/{id}/activities/read:
    patch:
      x-controller-name: EnquiryUserController
      x-operation-name: patchActivitiesAsReadUnread
      tags:
        - EnquiryUserController
      responses:
        "204":
          description: Mark the activities of enquiry read by user and enquiry ids
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivitiesTimelineReadDto"
        required: true
        x-parameter-index: 1
      operationId: EnquiryUserController.patchActivitiesAsReadUnread
  /v1/users/funding/enquiries/{id}/statuses:
    patch:
      x-controller-name: EnquiryUserController
      x-operation-name: patchStatusById
      tags:
        - EnquiryUserController
      responses:
        "200":
          description: Patch enquiry status by id and user id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingEnquiryResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FundingEnquiryStatusDto"
        required: true
        x-parameter-index: 1
      operationId: EnquiryUserController.patchStatusById
  /v1/users/funding/enquiries/{id}:
    patch:
      x-controller-name: EnquiryUserController
      x-operation-name: patchById
      tags:
        - EnquiryUserController
      responses:
        "200":
          description: Patch enquiry by user and enquiry ids
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingEnquiryResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FundingEnquiryPatchRequestDto"
        required: true
        x-parameter-index: 1
      operationId: EnquiryUserController.patchById
    get:
      x-controller-name: EnquiryUserController
      x-operation-name: getByEnquiryId
      tags:
        - EnquiryUserController
      responses:
        "200":
          description: Get enquiry by user and enquiry ids
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingEnquiryResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: EnquiryUserController.getByEnquiryId
    delete:
      x-controller-name: EnquiryUserController
      x-operation-name: deleteById
      tags:
        - EnquiryUserController
      responses:
        "204":
          description: Delete enquiry by user and enquiry ids
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      operationId: EnquiryUserController.deleteById
  /v1/users/funding/enquiries:
    get:
      x-controller-name: EnquiryUserController
      x-operation-name: getAll
      tags:
        - EnquiryUserController
      responses:
        "200":
          description: Get all enquiries of user id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingEnquiryResponseHateoasDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: offset
          in: query
          schema:
            type: number
        - name: limit
          in: query
          schema:
            type: number
      operationId: EnquiryUserController.getAll
  /v1/users/me:
    patch:
      x-controller-name: UserController
      x-operation-name: updateUser
      tags:
        - UserController
      responses:
        "200":
          description: Updated user details data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDetailsDto"
        required: true
      operationId: UserController.updateUser
  /v1/users/profile/preferences:
    patch:
      x-controller-name: UserProfileController
      x-operation-name: patchProfilePreferences
      tags:
        - users
        - users-profile
        - profile
      description: Update user profile preferences
      responses:
        "200":
          description: Updated user profile preferences
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPreferencesUpdateRequestDto"
        required: true
      operationId: UserProfileController.patchProfilePreferences
    get:
      x-controller-name: UserProfileController
      x-operation-name: getProfilePreferences
      tags:
        - users
        - users-profile
        - profile
      description: Get user profile preferences
      responses:
        "200":
          description: User profile preferences
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: UserProfileController.getProfilePreferences
  /v1/users/profile:
    get:
      x-controller-name: UserProfileController
      x-operation-name: getProfile
      tags:
        - users
        - users-profile
        - profile
      description: Get user profile
      responses:
        "200":
          description: User profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      operationId: UserProfileController.getProfile
  /v1/users:
    get:
      x-controller-name: UserController
      x-operation-name: getUsers
      tags:
        - UserController
      responses:
        "200":
          description: Retrieved users by query param
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: entityId
          in: query
          schema:
            type: number
      operationId: UserController.getUsers
  /v1/vehicles/search:
    get:
      x-controller-name: VehiclesSearchController
      x-operation-name: search
      tags:
        - VehiclesSearchController
      responses:
        "200":
          description: Search vehicles by registration code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VehicleSearchResultDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: registrationNumber
          in: query
          schema:
            type: string
          required: true
      operationId: VehiclesSearchController.search
  /v1/{type}/criteria/json-schema:
    get:
      x-controller-name: CriteriaTypeController
      x-operation-name: getJSONSchemaByProductType
      tags:
        - criteria
      description: Get create criteria JSON schema
      summary: Get create criteria JSON schema
      responses:
        "200":
          description: Open API Spec
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: type
          in: path
          schema:
            enum:
              - product-types
              - required-documents
              - profile-rules
            type: string
          required: true
        - name: productType
          in: query
          schema:
            enum:
              - TERM_LOAN
              - FIXED_LOAN_TERMS
              - ASSET_BACKED_FINANCE
              - MERCHANT_CASH_ADVANCE
              - INVOICE_FINANCE
              - E_COMMERCE_FUNDING
              - TRADE_FINANCE
              - COMMERCIAL_PROPERTY
            type: string
          required: true
      operationId: CriteriaTypeController.getJSONSchemaByProductType
  /v1/{type}/criteria/summary:
    get:
      x-controller-name: CriteriaTypeController
      x-operation-name: getSummary
      tags:
        - criteria
      description: Get criteria summary
      summary: Get criteria summary
      responses:
        "200":
          description: Get summary of criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CriteriaDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: type
          in: path
          schema:
            enum:
              - product-types
              - required-documents
              - profile-rules
            type: string
          required: true
        - name: productType
          in: query
          schema:
            enum:
              - TERM_LOAN
              - FIXED_LOAN_TERMS
              - ASSET_BACKED_FINANCE
              - MERCHANT_CASH_ADVANCE
              - INVOICE_FINANCE
              - E_COMMERCE_FUNDING
              - TRADE_FINANCE
              - COMMERCIAL_PROPERTY
            type: string
          required: false
      operationId: CriteriaTypeController.getSummary
  /v1/{type}/criteria:
    get:
      x-controller-name: CriteriaTypeController
      x-operation-name: getAll
      tags:
        - criteria
      description: Get all criteria answers
      summary: Get all criteria answers
      responses:
        "200":
          description: Get all criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CriteriaDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      parameters:
        - name: type
          in: path
          schema:
            enum:
              - product-types
              - required-documents
              - profile-rules
            type: string
          required: true
        - name: productType
          in: query
          schema:
            enum:
              - TERM_LOAN
              - FIXED_LOAN_TERMS
              - ASSET_BACKED_FINANCE
              - MERCHANT_CASH_ADVANCE
              - INVOICE_FINANCE
              - E_COMMERCE_FUNDING
              - TRADE_FINANCE
              - COMMERCIAL_PROPERTY
            type: string
          required: false
      operationId: CriteriaTypeController.getAll
  /v2/auth/sign-up:
    post:
      x-controller-name: AuthController
      x-operation-name: signUpV2
      tags:
        - AuthController
      description: Sign up user into platform
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuth2AuthorizedResponseDto"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpRequestDtoV2"
        required: true
      operationId: AuthController.signUpV2
servers:
  - url: /
components:
  schemas:
    OAuth2AuthorizedTokenDto:
      title: OAuth2AuthorizedTokenDto
      type: object
      description: "(tsType: OAuth2AuthorizedTokenDto, schemaOptions: { exclude: undefined })"
      properties:
        access_token:
          type: string
        expires_in:
          type: number
        refresh_token:
          type: string
        scope:
          type: string
        token_type:
          type: string
      additionalProperties: false
      x-typescript-type: OAuth2AuthorizedTokenDto
    SignInRequestDto:
      title: SignInRequestDto
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
      additionalProperties: false
    OAuth2AuthorizedResponseDto:
      title: OAuth2AuthorizedResponseDto
      type: object
      description: "(tsType: OAuth2AuthorizedResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        access_token:
          type: string
        expires_in:
          type: number
        refresh_token:
          type: string
        scope:
          type: string
        token_type:
          type: string
        metadata:
          type: object
      additionalProperties: false
      x-typescript-type: OAuth2AuthorizedResponseDto
    SignUpCompanyDto:
      title: SignUpCompanyDto
      type: object
      properties:
        name:
          type: string
        registrationNumber:
          type: string
        sector:
          type: string
          enum:
            - AGRICULTURE
            - AUTOMOTIVE
            - BUSINESS_SERVICES
            - CONSTRUCTION
            - COURIER
            - DISTRIBUTION
            - FINANCIAL_SERVICES
            - HAULAGE
            - HEALTHCARE_CARE
            - HOTELS_HOUSE
            - IMPORT_EXPORT
            - IT_RELATED
            - MANUFACTURING
            - PRINT_PUBLISHING
            - PROFESSIONAL_SERVICES
            - PROPERTY
            - RECRUITMENT
            - RETAIL
            - SECURITY_SERVICES
            - TRADE
            - TRANSPORTATION
            - WHOLESALE
            - OTHER
            - EDUCATION
            - CHARITIES
            - MEDIA_AND_ENTERTAINMENT
        type:
          type: string
          enum:
            - SOLE_TRADER
            - LIMITED_LIABILITY_PARTNERSHIP
            - LIMITED_COMPANY
            - STARTUP
      required:
        - name
      additionalProperties: false
    SignUpIntroducerDto:
      title: SignUpIntroducerDto
      type: object
      properties:
        type:
          type: string
          enum:
            - ACCOUNTANT
            - COMMERCIAL_BROKER
            - PROFESSIONAL_ADVISER
            - TRADE_ASSOCIATION
            - API_PARTNER
            - BOOK_KEEPER
            - IN_HOUSE_ACCOUNTANT
      required:
        - type
      additionalProperties: false
    SignUpRequestDto:
      title: SignUpRequestDto
      type: object
      properties:
        signupType:
          type: string
          enum:
            - BUSINESS
            - INTRODUCER
            - LENDER
        type:
          type: string
          enum:
            - BUSINESS
            - INTRODUCER
            - LENDER
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        company:
          $ref: "#/components/schemas/SignUpCompanyDto"
        password:
          type: string
        phone:
          type: string
        introducer:
          $ref: "#/components/schemas/SignUpIntroducerDto"
        referredBy:
          type: string
        terms:
          type: boolean
        newsletter:
          type: boolean
        countryCode:
          type: string
          enum:
            - ZA
            - GB
        network:
          type: string
        referralCode:
          type: string
        partnerReferral:
          type: string
          enum:
            - REVENUE_SHARE
            - DISCOUNT
        clickId:
          type: string
        clickIdSource:
          type: string
        utmSource:
          type: string
        utmMedium:
          type: string
        utmCampaign:
          type: string
        utmTerm:
          type: string
        utmContent:
          type: string
        utmId:
          type: string
      required:
        - firstName
        - lastName
        - email
        - password
        - terms
      additionalProperties: false
    SignUpRequestDtoV2:
      title: SignUpRequestDtoV2
      type: object
      properties:
        type:
          type: string
          enum:
            - BUSINESS
            - INTRODUCER
            - LENDER
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        company:
          $ref: "#/components/schemas/SignUpCompanyDto"
        password:
          type: string
        phone:
          type: string
        introducer:
          $ref: "#/components/schemas/SignUpIntroducerDto"
        referredBy:
          type: string
        terms:
          type: boolean
        newsletter:
          type: boolean
        countryCode:
          type: string
          enum:
            - ZA
            - GB
        network:
          type: string
        referralCode:
          type: string
        partnerReferral:
          type: string
          enum:
            - REVENUE_SHARE
            - DISCOUNT
        clickId:
          type: string
        clickIdSource:
          type: string
        utmSource:
          type: string
        utmMedium:
          type: string
        utmCampaign:
          type: string
        utmTerm:
          type: string
        utmContent:
          type: string
        utmId:
          type: string
      required:
        - type
        - firstName
        - lastName
        - email
        - password
        - terms
        - countryCode
      additionalProperties: false
    SocialSignUpResponseDto:
      title: SocialSignUpResponseDto
      type: object
      description: "(tsType: SocialSignUpResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        entityId:
          type: number
        pLtv:
          type: number
      additionalProperties: false
      x-typescript-type: SocialSignUpResponseDto
    SocialSignUpRequestDto:
      title: SocialSignUpRequestDto
      type: object
      properties:
        type:
          type: string
          enum:
            - BUSINESS
            - INTRODUCER
            - LENDER
        auth0Token:
          type: string
          description: Auth0 JWT token
          minimum: 1
        company:
          $ref: "#/components/schemas/SignUpCompanyDto"
        phone:
          type: string
        introducer:
          $ref: "#/components/schemas/SignUpIntroducerDto"
        referredBy:
          type: string
        terms:
          type: boolean
        newsletter:
          type: boolean
        countryCode:
          type: string
          enum:
            - ZA
            - GB
        network:
          type: string
        referralCode:
          type: string
        partnerReferral:
          type: string
          enum:
            - REVENUE_SHARE
            - DISCOUNT
        clickId:
          type: string
        clickIdSource:
          type: string
        utmSource:
          type: string
        utmMedium:
          type: string
        utmCampaign:
          type: string
        utmTerm:
          type: string
        utmContent:
          type: string
      required:
        - type
        - auth0Token
        - terms
        - countryCode
      additionalProperties: false
    MasqueradeLoginDto:
      title: MasqueradeLoginDto
      type: object
      properties:
        impersonatedEntityId:
          type: number
        scope:
          type: string
          title: Masquerade access token scope
          description: The value of the scope parameter is expressed as a list of space delimited, case-sensitive strings
      required:
        - impersonatedEntityId
      additionalProperties: false
    DesmasqueradeResponseDto:
      title: DesmasqueradeResponseDto
      type: object
      description: "(tsType: DesmasqueradeResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        access_token:
          type: string
      additionalProperties: false
      x-typescript-type: DesmasqueradeResponseDto
    UserInRequest: {}
    SignUpInitiatedDto:
      title: SignUpInitiatedDto
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        countryCode:
          type: string
      required:
        - firstName
        - lastName
        - email
      additionalProperties: false
    SignUpInviteOptionsDto:
      title: SignUpInviteOptionsDto
      type: object
      properties:
        viewOnly:
          type: boolean
        startApplications:
          type: boolean
        viewCapitalReport:
          type: boolean
        suggestedPlan:
          type: string
        applicationId:
          type: string
        questionnaireId:
          type: string
        partnerReferral:
          type: string
          enum:
            - REVENUE_SHARE
            - DISCOUNT
        emailCustomMessage:
          type: string
      additionalProperties: false
    SignUpInviteRequestDto:
      title: SignUpInviteRequestDto
      type: object
      properties:
        type:
          type: string
          enum:
            - CAPITAL_REPORT
            - MARKETPLACE_PARTNERSHIP
            - WIDGET
            - XERO_MARKETPLACE
            - INTRODUCER_TEAM
            - ANONYMOUS_QUESTIONNAIRE
            - FUNDING_APPLICATION
            - ONBOARD_CLIENT
            - BUSINESS_TEAM
        apiKey:
          type: string
        entity:
          type: number
        emails:
          type: array
          items:
            type: string
        team:
          type: number
        callback:
          type: string
        options:
          $ref: "#/components/schemas/SignUpInviteOptionsDto"
      additionalProperties: false
    AuthorizeThirdPartyResponseDto:
      title: AuthorizeThirdPartyResponseDto
      type: object
      description: "(tsType: AuthorizeThirdPartyResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        url:
          type: string
      additionalProperties: false
      x-typescript-type: AuthorizeThirdPartyResponseDto
    UserAuthorizeRequestDto:
      title: UserAuthorizeRequestDto
      type: object
      properties:
        email:
          type: string
          description: The user email to authenticate
        password:
          type: string
          description: The user password
      required:
        - email
        - password
      additionalProperties: false
    AccessTokenResponseDto:
      title: AccessTokenResponseDto
      type: object
      description: "(tsType: AccessTokenResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        jwt:
          type: string
          description: Platform API OAuth2 Token (JWT)
      additionalProperties: false
      x-typescript-type: AccessTokenResponseDto
    SignUpInviterDetailsDto:
      title: SignUpInviterDetailsDto
      type: object
      description: "(tsType: SignUpInviterDetailsDto, schemaOptions: { exclude: undefined })"
      properties:
        businessCompanyName:
          type: string
        companyName:
          type: string
        customFields:
          type: object
        email:
          type: string
        entityId:
          type: number
        logo:
          type: string
        name:
          type: string
      additionalProperties: false
      x-typescript-type: SignUpInviterDetailsDto
    APIKeyAuthorizeRequestDto:
      title: APIKeyAuthorizeRequestDto
      type: object
      properties:
        apiKey:
          type: string
          description: The partner API key
          minLength: 1
        callback:
          type: string
          description: Callback to redirect to after partner client login succeeds
          minLength: 1
      required:
        - apiKey
        - callback
      additionalProperties: false
    ApiKeyResponseDto:
      title: ApiKeyResponseDto
      type: object
      description: "(tsType: ApiKeyResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        key:
          type: string
          description: Capitalise API key
        partnerApiKey:
          type: string
          description: Capitalise API key
      additionalProperties: false
      x-typescript-type: ApiKeyResponseDto
    ApiKeyRequestDto:
      title: ApiKeyRequestDto
      type: object
      properties:
        name:
          type: string
          description: A name for the API key
        partnerApiKey:
          type: string
          description: The API key of the Capitalise partner
        scopes:
          type: array
          items:
            type: string
            description: The allowed scopes for the API key
            enum:
              - sign_up
              - profile:multiples
              - profile:read
              - profile:write
              - questionnaire:read
              - questionnaire:write
              - funding:read
              - funding:write
              - insights:read
              - scoring:read
              - companies:read
              - offline_access
        expiresAt:
          type: string
          format: date-time
          description: The date your API key will expire. Empty value will generate a permanent token
      required:
        - name
        - scopes
      additionalProperties: false
    RefreshTokenRequestDto: {}
    ContactDto:
      title: ContactDto
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      additionalProperties: false
    BusinessResponseDto:
      title: BusinessResponseDto
      type: object
      description: "(tsType: BusinessResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        type:
          type: string
          enum:
            - SOLE_TRADER
            - LIMITED_LIABILITY_PARTNERSHIP
            - LIMITED_COMPANY
            - STARTUP
        managedByEntityId:
          type: number
        managedByEntityName:
          type: string
        managerUserId:
          type: number
        partnerReferral:
          type: string
          enum:
            - DISCOUNT
            - REVENUE_SHARE
        referralPercentage:
          type: number
        contact:
          $ref: "#/components/schemas/ContactDto"
      additionalProperties: false
      x-typescript-type: BusinessResponseDto
    IntroducerResponseDto:
      title: IntroducerResponseDto
      type: object
      description: "(tsType: IntroducerResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        type:
          type: string
          enum:
            - ACCOUNTANT
            - COMMERCIAL_BROKER
            - PROFESSIONAL_ADVISER
            - TRADE_ASSOCIATION
            - TYPE_API_PARTNER
            - TYPE_BOOKKEEPER
            - IN_HOUSE_ACCOUNTANT
        regulatoryBody:
          type: string
          enum:
            - ACCA
            - ICAEW
            - FCA
            - Non Regulated
        logoUrl:
          type: string
      additionalProperties: false
      x-typescript-type: IntroducerResponseDto
    ApiProviderDto:
      title: ApiProviderDto
      type: object
      properties:
        url:
          type: string
        updateUrl:
          type: string
        authorizationToken:
          type: string
        instantApplication:
          type: boolean
        instantOffer:
          type: boolean
        canUpdate:
          type: boolean
        submitOnRelease:
          type: boolean
      additionalProperties: false
    FeesResponseDto:
      title: FeesResponseDto
      type: object
      description: "(tsType: FeesResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        earlyRepaymentFees:
          type: number
        exitFees:
          type: number
        productType:
          type: string
          enum:
            - TERM_LOAN
            - FIXED_LOAN_TERMS
            - ASSET_BACKED_FINANCE
            - MERCHANT_CASH_ADVANCE
            - INVOICE_FINANCE
            - E_COMMERCE_FUNDING
            - TRADE_FINANCE
            - COMMERCIAL_PROPERTY
      additionalProperties: false
      x-typescript-type: FeesResponseDto
    LenderResponseDto:
      title: LenderResponseDto
      type: object
      properties:
        id:
          type: number
        type:
          type: string
          enum:
            - ALTERNATIVE
            - BANK
            - INDEPENDENT
        description:
          type: string
        companyName:
          type: string
        canManageCriteria:
          type: boolean
        logoUrl:
          type: string
        iconUrl:
          type: string
        otherInformation:
          type: string
        smallPrint:
          type: string
        preRequestDetails:
          type: string
        apiProvider:
          $ref: "#/components/schemas/ApiProviderDto"
        fees:
          type: array
          items:
            $ref: "#/components/schemas/FeesResponseDto"
      additionalProperties: false
    NoteDto:
      title: NoteDto
      type: object
      properties:
        value:
          type: string
        updatedBy:
          type: string
        updatedAt:
          type: string
      additionalProperties: false
    EntityResponseDto:
      title: EntityResponseDto
      type: object
      description: "(tsType: EntityResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        name:
          type: string
        registrationNumber:
          type: string
        type:
          type: string
          enum:
            - BUSINESS
            - INTRODUCER
            - LENDER
        business:
          $ref: "#/components/schemas/BusinessResponseDto"
        introducer:
          $ref: "#/components/schemas/IntroducerResponseDto"
        lender:
          $ref: "#/components/schemas/LenderResponseDto"
        note:
          $ref: "#/components/schemas/NoteDto"
        directorAuthorization:
          type: string
          enum:
            - NOT_AUTHORIZED
            - AUTHORIZED
            - FAILED_AUTHORIZATION
        primaryUserId:
          type: number
        countryCode:
          type: string
          enum:
            - ZA
            - GB
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
        mfaEnabled:
          type: boolean
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - DRAFT
      required:
        - createdAt
        - updatedAt
        - mfaEnabled
        - status
      additionalProperties: false
      x-typescript-type: EntityResponseDto
    EntityResponsePageableDto:
      title: EntityResponsePageableDto
      type: object
      description: "(tsType: EntityResponsePageableDto, schemaOptions: { exclude: undefined })"
      properties:
        page:
          type: number
        pageSize:
          type: number
        content:
          type: array
          items:
            $ref: "#/components/schemas/EntityResponseDto"
      additionalProperties: false
      x-typescript-type: EntityResponsePageableDto
    EntityDto:
      title: EntityDto
      type: object
      properties:
        id:
          type: number
        entityType:
          type: string
          enum:
            - BUSINESS
            - INTRODUCER
            - LENDER
        note:
          $ref: "#/components/schemas/NoteDto"
        countryCode:
          type: string
          enum:
            - ZA
            - GB
      additionalProperties: true
    ManagerDto:
      title: ManagerDto
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        userId:
          type: string
      additionalProperties: false
    AddressDto:
      title: AddressDto
      type: object
      properties:
        simpleValue:
          type: string
          description: Address in UK format
        street:
          type: string
          title: Address line 1
          description: Street
        houseNumber:
          type: string
          title: Address line 2
          description: House number
        city:
          type: string
          title: Town
          description: City
        province:
          type: string
          title: Region
          description: Province
        postalCode:
          type: string
          title: Post code
          description: Postal code
      additionalProperties: false
    BusinessDto:
      title: BusinessDto
      type: object
      properties:
        id:
          type: number
        entityType:
          type: string
          enum:
            - BUSINESS
            - INTRODUCER
            - LENDER
        note:
          $ref: "#/components/schemas/NoteDto"
        countryCode:
          type: string
          enum:
            - ZA
            - GB
        manager:
          $ref: "#/components/schemas/ManagerDto"
        companyName:
          type: string
        companyNumber:
          type: string
        companyType:
          type: string
          enum:
            - SOLE_TRADER
            - LIMITED_LIABILITY_PARTNERSHIP
            - LIMITED_COMPANY
            - STARTUP
        companyAddress:
          $ref: "#/components/schemas/AddressDto"
        contactPhone:
          type: string
        managedByEntityId:
          type: number
      additionalProperties: true
    IntroducerDto:
      title: IntroducerDto
      type: object
      properties:
        id:
          type: number
        entityType:
          type: string
          enum:
            - BUSINESS
            - INTRODUCER
            - LENDER
        note:
          $ref: "#/components/schemas/NoteDto"
        countryCode:
          type: string
          enum:
            - ZA
            - GB
        companyName:
          type: string
        regulatoryBody:
          type: string
          enum:
            - ACCA
            - ICAEW
            - FCA
            - Non Regulated
      additionalProperties: true
    BusinessRequestDto:
      title: BusinessRequestDto
      type: object
      properties:
        type:
          type: string
          enum:
            - SOLE_TRADER
            - LIMITED_LIABILITY_PARTNERSHIP
            - LIMITED_COMPANY
            - STARTUP
        managedByEntityId:
          type: number
        managerUserId:
          type: number
        partnerReferral:
          type: string
          enum:
            - DISCOUNT
            - REVENUE_SHARE
        contact:
          $ref: "#/components/schemas/ContactDto"
      additionalProperties: false
    IntroducerRequestDto:
      title: IntroducerRequestDto
      type: object
      properties:
        type:
          type: string
          enum:
            - ACCOUNTANT
            - COMMERCIAL_BROKER
            - PROFESSIONAL_ADVISER
            - TRADE_ASSOCIATION
            - TYPE_API_PARTNER
            - TYPE_BOOKKEEPER
            - IN_HOUSE_ACCOUNTANT
        regulatoryBody:
          type: string
          enum:
            - ACCA
            - ICAEW
            - FCA
            - Non Regulated
        logoUrl:
          type: string
      additionalProperties: false
    LenderRequestDto:
      title: LenderRequestDto
      type: object
      properties:
        type:
          type: string
          enum:
            - ALTERNATIVE
            - BANK
            - INDEPENDENT
        description:
          type: string
        canManageCriteria:
          type: boolean
        logoUrl:
          type: string
        iconUrl:
          type: string
        otherInformation:
          type: string
        smallPrint:
          type: string
        preRequestDetails:
          type: string
        apiProvider:
          $ref: "#/components/schemas/ApiProviderDto"
      additionalProperties: false
    EntityRequestDto:
      title: EntityRequestDto
      type: object
      properties:
        name:
          type: string
        registrationNumber:
          type: string
        type:
          type: string
          enum:
            - BUSINESS
            - INTRODUCER
            - LENDER
        business:
          $ref: "#/components/schemas/BusinessRequestDto"
        introducer:
          $ref: "#/components/schemas/IntroducerRequestDto"
        lender:
          $ref: "#/components/schemas/LenderRequestDto"
        note:
          $ref: "#/components/schemas/NoteDto"
        directorAuthorization:
          type: string
          enum:
            - NOT_AUTHORIZED
            - AUTHORIZED
            - FAILED_AUTHORIZATION
        countryCode:
          type: string
          enum:
            - ZA
            - GB
      additionalProperties: false
    BulkEntityCreatedResponseDto:
      title: BulkEntityCreatedResponseDto
      type: object
      properties:
        resultStatus:
          type: string
          enum:
            - CREATED
            - NOT_CREATED
        response:
          type: object
      additionalProperties: false
    BusinessPatchRequestDto:
      title: BusinessPatchRequestDto
      type: object
      properties:
        type:
          type: string
          enum:
            - SOLE_TRADER
            - LIMITED_LIABILITY_PARTNERSHIP
            - LIMITED_COMPANY
            - STARTUP
        managedByEntityId:
          type: integer
          nullable: true
        managerUserId:
          type: integer
          nullable: true
        partnerReferral:
          type: string
          enum:
            - DISCOUNT
            - REVENUE_SHARE
        contact:
          $ref: "#/components/schemas/ContactDto"
      additionalProperties: false
    IntroducerPatchRequestDto:
      title: IntroducerPatchRequestDto
      type: object
      properties:
        type:
          type: string
          enum:
            - ACCOUNTANT
            - COMMERCIAL_BROKER
            - PROFESSIONAL_ADVISER
            - TRADE_ASSOCIATION
            - TYPE_API_PARTNER
            - TYPE_BOOKKEEPER
            - IN_HOUSE_ACCOUNTANT
        regulatoryBody:
          type: string
          enum:
            - ACCA
            - ICAEW
            - FCA
            - Non Regulated
        logoUrl:
          type: string
      additionalProperties: false
    LenderPatchRequestDto:
      title: LenderPatchRequestDto
      type: object
      properties:
        type:
          type: string
          enum:
            - ALTERNATIVE
            - BANK
            - INDEPENDENT
        description:
          type: string
        canManageCriteria:
          type: boolean
        logoUrl:
          type: string
        iconUrl:
          type: string
        otherInformation:
          type: string
        smallPrint:
          type: string
        preRequestDetails:
          type: string
        apiProvider:
          $ref: "#/components/schemas/ApiProviderDto"
      additionalProperties: false
    EntityPatchRequestDto:
      title: EntityPatchRequestDto
      type: object
      properties:
        name:
          type: string
        registrationNumber:
          type: string
        type:
          type: string
          enum:
            - BUSINESS
            - INTRODUCER
            - LENDER
        business:
          $ref: "#/components/schemas/BusinessPatchRequestDto"
        introducer:
          $ref: "#/components/schemas/IntroducerPatchRequestDto"
        lender:
          $ref: "#/components/schemas/LenderPatchRequestDto"
        note:
          $ref: "#/components/schemas/NoteDto"
        directorAuthorization:
          type: string
          enum:
            - NOT_AUTHORIZED
            - AUTHORIZED
            - FAILED_AUTHORIZATION
        countryCode:
          type: string
          enum:
            - ZA
            - GB
        primaryUserId:
          type: number
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - DRAFT
      additionalProperties: false
    UpdateManagerBulkDto:
      title: UpdateManagerBulkDto
      type: object
      properties:
        entityIds:
          type: array
          items:
            type: string
        business:
          $ref: "#/components/schemas/BusinessPatchRequestDto"
      required:
        - entityIds
        - business
      additionalProperties: false
    EventStreamAccessTokenDto:
      title: EventStreamAccessTokenDto
      type: object
      description: "(tsType: EventStreamAccessTokenDto, schemaOptions: { exclude: undefined })"
      properties:
        expiresIn:
          type: number
        value:
          type: string
        createdAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
      additionalProperties: false
      x-typescript-type: EventStreamAccessTokenDto
    FundingSearchOverviewDto:
      title: FundingSearchOverviewDto
      type: object
      description: "(tsType: FundingSearchOverviewDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        amount:
          type: number
        period:
          type: number
        statusLabel:
          type: string
        status:
          type: number
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
        author:
          $ref: "#/components/schemas/UserSummaryDto"
        manager:
          $ref: "#/components/schemas/UserSummaryDto"
        useOfFunds:
          type: string
        urgency:
          type: string
      additionalProperties: false
      x-typescript-type: FundingSearchOverviewDto
    FundingMatchSummaryDto:
      title: FundingMatchSummaryDto
      type: object
      description: "(tsType: FundingMatchSummaryDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        offer:
          $ref: "#/components/schemas/FundingMatchOfferDto"
        products:
          type: array
          items:
            type: number
        productNames:
          type: array
          items:
            type: string
        statusReason:
          type: string
        statusComment:
          type: string
        canUseInstantOffer:
          type: boolean
        canUseInstantApplication:
          type: boolean
        lender:
          $ref: "#/components/schemas/EntitySummaryDto"
        status:
          type: number
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 8
            - 9
            - 11
            - 12
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
      required:
        - status
      additionalProperties: false
      x-typescript-type: FundingMatchSummaryDto
    ProfileVersionDto:
      title: ProfileVersionDto
      type: object
      description: "(tsType: ProfileVersionDto, schemaOptions: { exclude: undefined })"
      properties:
        accountantDetails:
          $ref: "#/components/schemas/ProfileAccountDetailsDto"
        assetsToFinance:
          type: array
          items:
            $ref: "#/components/schemas/ProfileAssetsToFinanceDto"
        basicCompanyDetails:
          $ref: "#/components/schemas/ProfileBasicCompanyDetailsDto"
        companyCredit:
          $ref: "#/components/schemas/ProfileCompanyCreditDto"
        contactDetails:
          $ref: "#/components/schemas/ProfileContactDetailsDto"
        directorOrSecretaryDetails:
          type: array
          items:
            $ref: "#/components/schemas/ProfileDirectorOrSecretaryDetailsDto"
        eposTerminalInfo:
          $ref: "#/components/schemas/ProfileEposTerminalInfoDto"
        guarantorAssetsForSecurity:
          $ref: "#/components/schemas/ProfileGuarantorAssetsForSecurityDto"
        invoiceFinancing:
          $ref: "#/components/schemas/ProfileInvoiceFinancingDto"
        tradeFinanceProfile:
          $ref: "#/components/schemas/ProfileTradeFinanceProfileDto"
        tradeHistory:
          type: array
          items:
            $ref: "#/components/schemas/ProfileTradeHistoryDto"
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/ProfileAttachmentDto"
      additionalProperties: false
      x-typescript-type: ProfileVersionDto
    FundingApplicationDto:
      title: FundingApplicationDto
      type: object
      description: "(tsType: FundingApplicationDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        reference:
          type: string
        status:
          type: string
          enum:
            - Sent
            - In Review
            - Passed
            - Paid Out
            - Lender Declined
            - N/A
            - Incomplete
            - Contact Made
            - Indicative Offer
            - In Underwriting
            - Cancelled
            - Underwritten Offer
            - Client Accepted
            - Client Declined
            - Closed, no contact
            - Lost
            - Awaiting Client Decision
            - On Hold
            - Failed
            - Awaiting Client Contact
        responseReason:
          type: string
        comment:
          type: string
        fundingSearch:
          $ref: "#/components/schemas/FundingSearchOverviewDto"
        fundingMatch:
          $ref: "#/components/schemas/FundingMatchSummaryDto"
        profile:
          $ref: "#/components/schemas/ProfileVersionDto"
        acceptedAt:
          type: string
          format: date-time
        invalidatedAt:
          type: string
          format: date-time
        offerAcceptedAt:
          type: string
          format: date-time
      additionalProperties: false
      x-typescript-type: FundingApplicationDto
    EntitySummaryDto:
      title: EntitySummaryDto
      type: object
      description: "(tsType: EntitySummaryDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        entityId:
          type: number
        companyName:
          type: string
        logo:
          type: string
        icon:
          type: string
      additionalProperties: false
      x-typescript-type: EntitySummaryDto
    UserSummaryDto:
      title: UserSummaryDto
      type: object
      description: "(tsType: UserSummaryDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        entity:
          $ref: "#/components/schemas/EntitySummaryDto"
        userType:
          type: string
        name:
          type: string
        email:
          type: string
      additionalProperties: false
      x-typescript-type: UserSummaryDto
    FundingMatchOfferDto:
      title: FundingMatchOfferDto
      type: object
      description: "(tsType: FundingMatchOfferDto, schemaOptions: { exclude: undefined })"
      properties:
        ids:
          type: array
          items:
            type: string
        latest:
          type: string
      additionalProperties: false
      x-typescript-type: FundingMatchOfferDto
    ProfileAccountDetailsDto:
      title: ProfileAccountDetailsDto
      type: object
      description: "(tsType: ProfileAccountDetailsDto, schemaOptions: { exclude: undefined })"
      properties:
        name:
          type: string
        address:
          type: string
        town:
          type: string
        contactName:
          type: string
        telephone:
          type: string
        email:
          type: string
      additionalProperties: false
      x-typescript-type: ProfileAccountDetailsDto
    ProfileAssetsToFinanceDto:
      title: ProfileAssetsToFinanceDto
      type: object
      description: "(tsType: ProfileAssetsToFinanceDto, schemaOptions: { exclude: undefined })"
      properties:
        assetCost:
          type: number
        assetSerialNumber:
          type: string
        depositAvailable:
          type: number
        assetType:
          type: number
        assetTypeName:
          type: string
      additionalProperties: false
      x-typescript-type: ProfileAssetsToFinanceDto
    ProfileBasicCompanyDetailsDto:
      title: ProfileBasicCompanyDetailsDto
      type: object
      description: "(tsType: ProfileBasicCompanyDetailsDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: string
        contactName:
          type: string
        contactEmail:
          type: string
        contactPhone:
          type: string
        companyName:
          type: string
        companyTradingName:
          type: string
        companyNumber:
          type: string
        companyType:
          type: string
        vatRegistered:
          type: boolean
        address:
          type: string
        city:
          type: string
        postalCode:
          type: string
        tradingFrom:
          type: number
        tradingPeriod:
          type: string
        creditScore:
          type: string
        numberOfEmployees:
          type: number
        percentageOfSalesOnline:
          type: number
        companyWebsite:
          type: string
        sectorName:
          type: string
      additionalProperties: false
      x-typescript-type: ProfileBasicCompanyDetailsDto
    ProfileCompanyCreditDto:
      title: ProfileCompanyCreditDto
      type: object
      description: "(tsType: ProfileCompanyCreditDto, schemaOptions: { exclude: undefined })"
      properties:
        unpaidItems:
          type: number
        behindOnTaxPayments:
          type: number
        officialsDeclaredBankrupt:
          type: number
        officialsFailedBusiness:
          type: number
        exceededAgreedOverdraft:
          type: number
        overdraftWorstMonth:
          type: number
        daysOverdrawn:
          type: number
        debtRepayments:
          type: number
        expectedTurnover:
          type: number
        expectedNetProfit:
          type: number
      additionalProperties: false
      x-typescript-type: ProfileCompanyCreditDto
    ProfileContactDetailsDto:
      title: ProfileContactDetailsDto
      type: object
      description: "(tsType: ProfileContactDetailsDto, schemaOptions: { exclude: undefined })"
      properties:
        contactName:
          type: string
        contactEmail:
          type: string
        contactPhone:
          type: string
      additionalProperties: false
      x-typescript-type: ProfileContactDetailsDto
    ProfileDirectorOrSecretaryDetailsDto:
      title: ProfileDirectorOrSecretaryDetailsDto
      type: object
      description: "(tsType: ProfileDirectorOrSecretaryDetailsDto, schemaOptions: { exclude: undefined })"
      properties:
        title:
          type: string
        fullName:
          type: string
        email:
          type: string
        phone:
          type: string
        dateOfBirth:
          type: string
        position:
          type: string
        addressResidential:
          type: string
        ownershipPercentage:
          type: number
        residentialStatus:
          type: string
        creditCheckConsent:
          type: string
        monthlyRentOrMortgage:
          type: number
        mortgageValue:
          type: number
        monthlyBusinessIncome:
          type: number
        monthlyNonBusinessIncome:
          type: number
        monthlyOtherHouseholdIncome:
          type: number
        personalCreditLimit:
          type: number
        ccjsValue:
          type: number
        personalDefaultsValue:
          type: number
        dependants:
          type: number
        oldestCreditAccountAge:
          type: number
        missedPaymentsBusiness:
          type: number
        missedPaymentsPersonal:
          type: number
        personalDefaults:
          type: number
      additionalProperties: false
      x-typescript-type: ProfileDirectorOrSecretaryDetailsDto
    ProfileEposTerminalInfoDto:
      title: ProfileEposTerminalInfoDto
      type: object
      description: "(tsType: ProfileEposTerminalInfoDto, schemaOptions: { exclude: undefined })"
      properties:
        transactionsPerMonthAvg:
          type: number
        monthsUsingCCProcessing:
          type: number
        monthsRemainingOnBusinessLease:
          type: number
        terminalId:
          type: string
        terminalProvider:
          type: string
      additionalProperties: false
      x-typescript-type: ProfileEposTerminalInfoDto
    ProfileGuarantorAssetDto:
      title: ProfileGuarantorAssetDto
      type: object
      description: "(tsType: ProfileGuarantorAssetDto, schemaOptions: { exclude: undefined })"
      properties:
        owner:
          type: string
        estimatedValue:
          type: number
        totalDebt:
          type: number
        address:
          type: string
      additionalProperties: false
      x-typescript-type: ProfileGuarantorAssetDto
    ProfileGuarantorAssetsForSecurityDto:
      title: ProfileGuarantorAssetsForSecurityDto
      type: object
      description: "(tsType: ProfileGuarantorAssetsForSecurityDto, schemaOptions: { exclude: undefined })"
      properties:
        hasUkHomeownerDirector:
          type: boolean
        estimatedSecurity:
          type: number
        guarantorAssets:
          type: array
          items:
            $ref: "#/components/schemas/ProfileGuarantorAssetDto"
      additionalProperties: false
      x-typescript-type: ProfileGuarantorAssetsForSecurityDto
    ProfileInvoiceFinancingDto:
      title: ProfileInvoiceFinancingDto
      type: object
      description: "(tsType: ProfileInvoiceFinancingDto, schemaOptions: { exclude: undefined })"
      properties:
        debtorsValue:
          type: number
        debtorDays:
          type: number
        invoicesNumber:
          type: number
        creditNotesGrossValue:
          type: number
        creditNotesNumber:
          type: number
        customersNumber:
          type: number
      additionalProperties: false
      x-typescript-type: ProfileInvoiceFinancingDto
    ProfileTradeFinanceProfileDto:
      title: ProfileTradeFinanceProfileDto
      type: object
      description: "(tsType: ProfileTradeFinanceProfileDto, schemaOptions: { exclude: undefined })"
      properties:
        currentValueOfDebtors:
          type: number
        approxNoOfCustomers:
          type: number
        currentValueOfConfirmedOrders:
          type: number
        approxGrossMargin:
          type: number
        madeADozenWebsiteSales:
          type: number
      additionalProperties: false
      x-typescript-type: ProfileTradeFinanceProfileDto
    ProfileTradeHistoryDto:
      title: ProfileTradeHistoryDto
      type: object
      description: "(tsType: ProfileTradeHistoryDto, schemaOptions: { exclude: undefined })"
      properties:
        year:
          type: string
        yearEndTimestamp:
          type: number
        revenue:
          type: string
        profitNet:
          type: string
        debtorsOutstanding:
          type: number
        debtorsInvoicesDue:
          type: number
        fixedAssets:
          type: string
      additionalProperties: false
      x-typescript-type: ProfileTradeHistoryDto
    ProfileAttachmentDto:
      title: ProfileAttachmentDto
      type: object
      description: "(tsType: ProfileAttachmentDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        filename:
          type: string
        documentTypeId:
          type: number
        documentType:
          type: string
        url:
          type: string
          description: Direct public link to the document, valid for 10 minutes
      additionalProperties: false
      x-typescript-type: ProfileAttachmentDto
    AcknowledgementDto:
      title: AcknowledgementDto
      type: object
      properties:
        reference:
          type: string
        comment:
          type: string
        status:
          type: string
          enum:
            - Sent
            - In Review
            - Passed
            - Paid Out
            - Lender Declined
            - N/A
            - Incomplete
            - Contact Made
            - Indicative Offer
            - In Underwriting
            - Cancelled
            - Underwritten Offer
            - Client Accepted
            - Client Declined
            - Closed, no contact
            - Lost
            - Awaiting Client Decision
            - On Hold
            - Failed
            - Awaiting Client Contact
      additionalProperties: false
    RejectionDto:
      title: RejectionDto
      type: object
      properties:
        reference:
          type: string
        reason:
          type: string
        comment:
          type: string
        status:
          type: string
          enum:
            - Sent
            - In Review
            - Passed
            - Paid Out
            - Lender Declined
            - N/A
            - Incomplete
            - Contact Made
            - Indicative Offer
            - In Underwriting
            - Cancelled
            - Underwritten Offer
            - Client Accepted
            - Client Declined
            - Closed, no contact
            - Lost
            - Awaiting Client Decision
            - On Hold
            - Failed
            - Awaiting Client Contact
      additionalProperties: false
    AssetFinanceDto:
      title: AssetFinanceDto
      type: object
      description: "(tsType: AssetFinanceDto, schemaOptions: { exclude: undefined })"
      properties:
        ownsAssets:
          type: boolean
      additionalProperties: false
      x-typescript-type: AssetFinanceDto
    InvoiceFinanceDto:
      title: InvoiceFinanceDto
      type: object
      description: "(tsType: InvoiceFinanceDto, schemaOptions: { exclude: undefined })"
      properties:
        raisesInvoices:
          type: boolean
        customerType:
          type: number
      additionalProperties: false
      x-typescript-type: InvoiceFinanceDto
    MerchantCashAdvanceDto:
      title: MerchantCashAdvanceDto
      type: object
      description: "(tsType: MerchantCashAdvanceDto, schemaOptions: { exclude: undefined })"
      properties:
        commissionAmount:
          type: number
        fundingAmount:
          type: number
        sweep:
          type: number
        totalRepayment:
          type: number
        totalFees:
          type: number
        ratio:
          type: number
        promotion:
          type: string
        likelihoodOfRate:
          type: number
        likelihoodOfAcceptance:
          type: number
      additionalProperties: false
      x-typescript-type: MerchantCashAdvanceDto
    TermLoanDto:
      title: TermLoanDto
      type: object
      description: "(tsType: TermLoanDto, schemaOptions: { exclude: undefined })"
      properties:
        hasTermLoan:
          type: boolean
        preferredCreditFacility:
          type: array
          items:
            type: string
      additionalProperties: false
      x-typescript-type: TermLoanDto
    TradeFinanceDto:
      title: TradeFinanceDto
      type: object
      description: "(tsType: TradeFinanceDto, schemaOptions: { exclude: undefined })"
      properties:
        hasPurchaseOrders:
          type: boolean
      additionalProperties: false
      x-typescript-type: TradeFinanceDto
    CommercialPropertyDto:
      title: CommercialPropertyDto
      type: object
      description: "(tsType: CommercialPropertyDto, schemaOptions: { exclude: undefined })"
      properties:
        refinancing:
          type: boolean
        portfolioSize:
          type: string
        repaymentMethod:
          type: string
        annualIncome:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        productPropertyType:
          type: string
        depositOrEquity:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        outstandingDebt:
          $ref: "#/components/schemas/AnswerCurrencyDto"
      additionalProperties: false
      x-typescript-type: CommercialPropertyDto
    FundingMatchDocumentUploadDto:
      title: FundingMatchDocumentUploadDto
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
      additionalProperties: false
    UserTimezoneDto:
      title: UserTimezoneDto
      type: object
      properties:
        tzDatabaseName:
          type: string
        utcOffset:
          type: number
          description: UTC offset in minutes
      additionalProperties: false
    UserLocaleDto:
      title: UserLocaleDto
      type: object
      properties:
        countryCode:
          type: string
          enum:
            - ZA
            - GB
        currencyCode:
          type: string
          enum:
            - GBP
            - EUR
            - ZAR
        timezone:
          $ref: "#/components/schemas/UserTimezoneDto"
      required:
        - currencyCode
      additionalProperties: false
    UserCompanyDto:
      title: UserCompanyDto
      type: object
      description: "(tsType: UserCompanyDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        name:
          type: string
        registrationNumber:
          type: string
        directorAuthorization:
          type: string
        entityStatus:
          type: string
        managedByEntityName:
          type: string
      additionalProperties: false
      x-typescript-type: UserCompanyDto
    UserDto:
      title: UserDto
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        locale:
          $ref: "#/components/schemas/UserLocaleDto"
        company:
          $ref: "#/components/schemas/UserCompanyDto"
        entity:
          $ref: "#/components/schemas/EntitySummaryDto"
        userType:
          type: string
        email:
          type: string
        regulatoryBody:
          type: string
          enum:
            - ACCA
            - ICAEW
            - FCA
            - Non Regulated
        roles:
          type: array
          items:
            type: string
      additionalProperties: false
    OfferResponseDto:
      title: OfferResponseDto
      type: object
      description: "(tsType: OfferResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - INSTANT_OFFER
            - MANUAL_OFFER
        status:
          type: string
          enum:
            - DRAFT
            - INDICATIVE
            - FINAL
        productType:
          type: number
          enum:
            - 1
            - 2
            - 4
            - 8
            - 16
            - 32
            - 64
            - 128
        reference:
          type: string
        profileUuid:
          type: string
          minLength: 1
        publicComment:
          type: string
          minLength: 1
        privateComment:
          type: string
          minLength: 1
        expiryDate:
          type: string
          format: date-time
        assetFinance:
          $ref: "#/components/schemas/AssetFinanceDto"
        invoiceFinance:
          $ref: "#/components/schemas/InvoiceFinanceDto"
        merchantCashAdvance:
          $ref: "#/components/schemas/MerchantCashAdvanceDto"
        termLoan:
          $ref: "#/components/schemas/TermLoanDto"
        tradeFinance:
          $ref: "#/components/schemas/TradeFinanceDto"
        commercialProperty:
          $ref: "#/components/schemas/CommercialPropertyDto"
        createdAt:
          type: string
          format: date-time
        applicationUrl:
          type: string
        documents:
          type: array
          items:
            $ref: "#/components/schemas/FundingMatchDocumentUploadDto"
        fromEntityId:
          $ref: "#/components/schemas/EntitySummaryDto"
        toEntityId:
          $ref: "#/components/schemas/EntitySummaryDto"
        user:
          $ref: "#/components/schemas/UserDto"
      required:
        - type
        - status
        - reference
      additionalProperties: false
      x-typescript-type: OfferResponseDto
    ApplicationAssetFinanceDto:
      title: ApplicationAssetFinanceDto
      type: object
      properties:
        advanceAmount:
          type: number
          minimum: 1
        term:
          type: number
          minimum: 1
          maximum: 240
        deposit:
          type: number
          minimum: 1
        productOption:
          type: string
          enum:
            - HIRE_PURCHASE
            - FINANCE_LEASE
        vat:
          type: number
          minimum: 1
        cost:
          type: number
          minimum: 1
        totalPrice:
          type: number
          minimum: 1
        description:
          type: string
          minLength: 1
        promotion:
          type: string
          minLength: 1
        monthlyRepayment:
          type: number
          minimum: 1
        additionalFees:
          type: string
          minLength: 1
        optionToPurchaseFee:
          type: number
          minimum: 1
        likelihoodOfRate:
          type: number
          minimum: 0
          maximum: 100
        likelihoodOfAcceptance:
          type: number
          minimum: 0
          maximum: 100
        representativeAPR:
          type: number
          minimum: 0
          maximum: 100
      required:
        - advanceAmount
        - term
        - deposit
      additionalProperties: false
    ApplicationInvoiceFinanceDto:
      title: ApplicationInvoiceFinanceDto
      type: object
      properties:
        maximumCreditLine:
          type: number
          minimum: 1
        minimumCreditLine:
          type: number
          minimum: 1
        serviceFee:
          type: number
          minimum: 0
          maximum: 100
        discountFee:
          type: number
          minimum: 0
          maximum: 100
        advanceRate:
          type: number
          minimum: 0
          maximum: 100
        facility:
          type: string
          enum:
            - DISCOUNTING
            - FACTORING
        contractLength:
          type: number
          minimum: 1
          maximum: 240
        additionalFees:
          type: string
          minLength: 1
        minimumMonthlyFee:
          type: number
          minimum: 1
        concentrationLimit:
          type: number
          minimum: 0
          maximum: 100
        creditInsurance:
          type: number
          minimum: 0
          maximum: 100
        creditInsuranceRequired:
          type: boolean
        selective:
          type: boolean
        confidential:
          type: boolean
        promotion:
          type: string
          minLength: 1
        likelihoodOfRate:
          type: number
          minimum: 0
          maximum: 100
        likelihoodOfAcceptance:
          type: number
          minimum: 0
          maximum: 100
      required:
        - maximumCreditLine
        - serviceFee
        - discountFee
        - advanceRate
        - facility
        - contractLength
      additionalProperties: false
    ApplicationMerchantCashAdvanceDto:
      title: ApplicationMerchantCashAdvanceDto
      type: object
      properties:
        fundingAmount:
          type: number
          minimum: 1
        sweep:
          type: number
          minimum: 0
          maximum: 100
        totalRepayment:
          type: number
          minimum: 1
        ratio:
          type: number
          minimum: 0
          maximum: 100
        promotion:
          type: string
          minLength: 1
        likelihoodOfRate:
          type: number
          minimum: 0
          maximum: 100
        likelihoodOfAcceptance:
          type: number
          minimum: 0
          maximum: 100
      required:
        - fundingAmount
        - sweep
        - totalRepayment
      additionalProperties: false
    ApplicationTermLoanDto:
      title: ApplicationTermLoanDto
      type: object
      properties:
        maximumAmount:
          type: number
          minimum: 1
        minimumAmount:
          type: number
          minimum: 1
        interestRate:
          type: number
          minimum: 0
          maximum: 100
        representativeAPR:
          type: number
          minimum: 0
          maximum: 100
        term:
          type: number
          minimum: 1
          maximum: 240
        monthlyRepayment:
          type: number
          minimum: 1
        totalRepayment:
          type: number
          minimum: 1
        arrangementFee:
          type: number
          minimum: 0
        promotion:
          type: string
          minLength: 1
        likelihoodOfRate:
          type: number
          minimum: 0
          maximum: 100
        likelihoodOfAcceptance:
          type: number
          minimum: 0
          maximum: 100
      required:
        - maximumAmount
        - interestRate
        - term
      additionalProperties: false
    ApplicationTradeFinanceDto:
      title: ApplicationTradeFinanceDto
      type: object
      properties:
        maximumCreditLine:
          type: number
          minimum: 1
        minimumCreditLine:
          type: number
          minimum: 1
        serviceFee:
          type: number
          minimum: 0
          maximum: 100
        discountFee:
          type: number
          minimum: 0
          maximum: 100
        additionalFees:
          type: string
          minLength: 1
        advanceRate:
          type: number
          minimum: 0
          maximum: 100
        contractLength:
          type: number
          minimum: 1
          maximum: 240
        promotion:
          type: string
          minLength: 1
        likelihoodOfRate:
          type: number
          minimum: 0
          maximum: 100
        likelihoodOfAcceptance:
          type: number
          minimum: 0
          maximum: 100
      required:
        - maximumCreditLine
        - serviceFee
        - discountFee
        - advanceRate
      additionalProperties: false
    ApplicationOfferRequestDto:
      title: ApplicationOfferRequestDto
      type: object
      properties:
        status:
          type: string
          enum:
            - DRAFT
            - INDICATIVE
            - FINAL
        reference:
          type: string
          minLength: 1
        comment:
          type: string
          minLength: 1
        applicationUrl:
          type: string
          minLength: 1
        expiryDate:
          type: string
          format: date-time
        assetFinance:
          $ref: "#/components/schemas/ApplicationAssetFinanceDto"
        invoiceFinance:
          $ref: "#/components/schemas/ApplicationInvoiceFinanceDto"
        merchantCashAdvance:
          $ref: "#/components/schemas/ApplicationMerchantCashAdvanceDto"
        termLoan:
          $ref: "#/components/schemas/ApplicationTermLoanDto"
        tradeFinance:
          $ref: "#/components/schemas/ApplicationTradeFinanceDto"
      required:
        - status
        - reference
      additionalProperties: false
    FundingEnquiryEntityDto:
      title: FundingEnquiryEntityDto
      type: object
      description: "(tsType: FundingEnquiryEntityDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        companyName:
          type: string
      additionalProperties: false
      x-typescript-type: FundingEnquiryEntityDto
    FundingEnquiryUserDto:
      title: FundingEnquiryUserDto
      type: object
      description: "(tsType: FundingEnquiryUserDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        name:
          type: string
        entity:
          $ref: "#/components/schemas/FundingEnquiryEntityDto"
      additionalProperties: false
      x-typescript-type: FundingEnquiryUserDto
    QuestionnaireSubmissionDto:
      title: QuestionnaireSubmissionDto
      type: object
      description: "(tsType: QuestionnaireSubmissionDto, schemaOptions: { exclude: undefined })"
      properties:
        submissionId:
          type: string
        questionnaireId:
          type: string
        sessionId:
          type: string
      additionalProperties: false
      x-typescript-type: QuestionnaireSubmissionDto
    FundingSearchDto:
      title: FundingSearchDto
      type: object
      description: "(tsType: FundingSearchDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        status:
          type: number
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
      additionalProperties: false
      x-typescript-type: FundingSearchDto
    FundingReportDto:
      title: FundingReportDto
      type: object
      description: "(tsType: FundingReportDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: string
      additionalProperties: false
      x-typescript-type: FundingReportDto
    AnswerClientCompanyDto:
      title: AnswerClientCompanyDto
      type: object
      description: "(tsType: AnswerClientCompanyDto, schemaOptions: { exclude: undefined })"
      properties:
        number:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
      required:
        - number
        - name
      additionalProperties: false
      x-typescript-type: AnswerClientCompanyDto
    AnswerClientContactDto:
      title: AnswerClientContactDto
      type: object
      description: "(tsType: AnswerClientContactDto, schemaOptions: { exclude: undefined })"
      properties:
        name:
          type: string
          minLength: 1
        email:
          type: string
          minLength: 1
        phone:
          type: string
        position:
          type: string
      required:
        - name
        - email
      additionalProperties: false
      x-typescript-type: AnswerClientContactDto
    AnswerClientDto:
      title: AnswerClientDto
      type: object
      description: "(tsType: AnswerClientDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        entityId:
          type: number
        company:
          $ref: "#/components/schemas/AnswerClientCompanyDto"
        contact:
          $ref: "#/components/schemas/AnswerClientContactDto"
      required:
        - id
        - entityId
        - company
        - contact
      additionalProperties: false
      x-typescript-type: AnswerClientDto
    AnswerPurposeDetailsDto:
      title: AnswerPurposeDetailsDto
      type: object
      description: "(tsType: AnswerPurposeDetailsDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        value:
          type: string
        description:
          type: string
      additionalProperties: false
      x-typescript-type: AnswerPurposeDetailsDto
    AnswerDetailsDto:
      title: AnswerDetailsDto
      type: object
      description: "(tsType: AnswerDetailsDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        value:
          type: string
      additionalProperties: false
      x-typescript-type: AnswerDetailsDto
    SecurityDto:
      title: SecurityDto
      type: object
      description: "(tsType: SecurityDto, schemaOptions: { exclude: undefined })"
      properties:
        homeowner:
          $ref: "#/components/schemas/AnswerDetailsDto"
        guarantee:
          $ref: "#/components/schemas/AnswerDetailsDto"
      additionalProperties: false
      x-typescript-type: SecurityDto
    AnswerDto:
      title: AnswerDto
      type: object
      description: "(tsType: AnswerDto, schemaOptions: { exclude: undefined })"
      properties:
        client:
          $ref: "#/components/schemas/AnswerClientDto"
        purpose:
          $ref: "#/components/schemas/AnswerPurposeDetailsDto"
        urgency:
          $ref: "#/components/schemas/AnswerDetailsDto"
        term:
          $ref: "#/components/schemas/AnswerDetailsDto"
        security:
          $ref: "#/components/schemas/SecurityDto"
        fundingAmount:
          type: number
        products:
          type: array
          items:
            type: number
            enum:
              - 1
              - 2
              - 4
              - 8
              - 16
              - 32
              - 64
              - 128
      required:
        - client
        - urgency
      additionalProperties: false
      x-typescript-type: AnswerDto
    ActionDto:
      title: ActionDto
      type: object
      description: "(tsType: ActionDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
          minLength: 1
        name:
          type: string
        description:
          type: string
      required:
        - id
      additionalProperties: false
      x-typescript-type: ActionDto
    ActivityTimelineEnquiryDto:
      title: ActivityTimelineEnquiryDto
      type: object
      description: "(tsType: ActivityTimelineEnquiryDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - DRAFT
            - SENT
            - IN_PROGRESS
            - COMPLETE_CLOSED
            - COMPLETE_SEARCH
            - CANCELLED
      additionalProperties: false
      x-typescript-type: ActivityTimelineEnquiryDto
    ActivityTimelineDto:
      title: ActivityTimelineDto
      type: object
      description: "(tsType: ActivityTimelineDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: string
        enquiry:
          $ref: "#/components/schemas/ActivityTimelineEnquiryDto"
        search:
          $ref: "#/components/schemas/FundingSearchDto"
        author:
          $ref: "#/components/schemas/FundingEnquiryUserDto"
        title:
          type: string
        authorName:
          type: string
        notes:
          type: string
        subtitle:
          type: string
        seen:
          type: boolean
        isDummy:
          type: boolean
        createdAt:
          type: string
          format: date-time
      additionalProperties: false
      x-typescript-type: ActivityTimelineDto
    FundingEnquiryResponseDto:
      title: FundingEnquiryResponseDto
      type: object
      description: "(tsType: FundingEnquiryResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/FundingEnquiryUserDto"
        questionnaire:
          $ref: "#/components/schemas/QuestionnaireSubmissionDto"
        search:
          $ref: "#/components/schemas/FundingSearchDto"
        report:
          $ref: "#/components/schemas/FundingReportDto"
        answers:
          $ref: "#/components/schemas/AnswerDto"
        actions:
          type: array
          items:
            $ref: "#/components/schemas/ActionDto"
        activitiesTimeline:
          type: array
          items:
            $ref: "#/components/schemas/ActivityTimelineDto"
        status:
          type: string
          enum:
            - DRAFT
            - SENT
            - IN_PROGRESS
            - COMPLETE_CLOSED
            - COMPLETE_SEARCH
            - CANCELLED
      required:
        - answers
      additionalProperties: false
      x-typescript-type: FundingEnquiryResponseDto
    FundingEnquiryRequestDto:
      title: FundingEnquiryRequestDto
      type: object
      properties:
        answers:
          $ref: "#/components/schemas/AnswerDto"
        actions:
          type: array
          items:
            $ref: "#/components/schemas/ActionDto"
      required:
        - answers
      additionalProperties: false
    QuestionCostTypeDto:
      title: QuestionCostTypeDto
      type: object
      description: "(tsType: QuestionCostTypeDto, schemaOptions: { exclude: undefined })"
      properties:
        label:
          type: string
        min:
          type: number
        max:
          type: number
      additionalProperties: false
      x-typescript-type: QuestionCostTypeDto
    QuestionProductMetadataDto:
      title: QuestionProductMetadataDto
      type: object
      description: "(tsType: QuestionProductMetadataDto, schemaOptions: { exclude: undefined })"
      properties:
        icon:
          type: string
        cost:
          $ref: "#/components/schemas/QuestionCostTypeDto"
        features:
          type: array
          items:
            type: string
        bestSuitedFor:
          type: array
          items:
            type: string
        documentsRequired:
          type: array
          items:
            type: string
      additionalProperties: false
      x-typescript-type: QuestionProductMetadataDto
    QuestionOptionDto:
      title: QuestionOptionDto
      type: object
      description: "(tsType: QuestionOptionDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        name:
          type: string
        value:
          type: string
        description:
          type: string
        metadata:
          $ref: "#/components/schemas/QuestionProductMetadataDto"
      additionalProperties: false
      x-typescript-type: QuestionOptionDto
    QuestionItemDto:
      title: QuestionItemDto
      type: object
      description: "(tsType: QuestionItemDto, schemaOptions: { exclude: undefined })"
      properties:
        key:
          type: string
        options:
          type: array
          items:
            $ref: "#/components/schemas/QuestionOptionDto"
      additionalProperties: false
      x-typescript-type: QuestionItemDto
    QuestionDto:
      title: QuestionDto
      type: object
      description: "(tsType: QuestionDto, schemaOptions: { exclude: undefined })"
      properties:
        questions:
          type: array
          items:
            $ref: "#/components/schemas/QuestionItemDto"
        actions:
          type: array
          items:
            $ref: "#/components/schemas/ActionDto"
      additionalProperties: false
      x-typescript-type: QuestionDto
    HateoasLinksDto:
      title: HateoasLinksDto
      type: object
      description: "(tsType: HateoasLinksDto, schemaOptions: { exclude: undefined })"
      properties:
        base:
          type: string
        self:
          type: string
        previous:
          type: string
        next:
          type: string
      required:
        - base
        - self
      additionalProperties: false
      x-typescript-type: HateoasLinksDto
    FundingEnquiryResponseHateoasDto:
      title: FundingEnquiryResponseHateoasDto
      type: object
      description: "(tsType: FundingEnquiryResponseHateoasDto, schemaOptions: { exclude: undefined })"
      properties:
        _links:
          $ref: "#/components/schemas/HateoasLinksDto"
        data:
          type: array
          items:
            $ref: "#/components/schemas/FundingEnquiryResponseDto"
        count:
          type: number
      additionalProperties: false
      x-typescript-type: FundingEnquiryResponseHateoasDto
    AnswerClientCompanyDtoOptional_answers-actions_:
      title: AnswerClientCompanyDtoOptional_answers-actions_
      type: object
      description: "(tsType: @loopback/repository-json-schema#Optional<AnswerClientCompanyDto, 'answers' | 'actions'>, schemaOptions: { optional: [ 'answers', 'actions' ] })"
      properties:
        number:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
      required:
        - number
        - name
      additionalProperties: false
      x-typescript-type: "@loopback/repository-json-schema#Optional<AnswerClientCompanyDto, 'answers' | 'actions'>"
    AnswerClientContactDtoOptional_answers-actions_:
      title: AnswerClientContactDtoOptional_answers-actions_
      type: object
      description: "(tsType: @loopback/repository-json-schema#Optional<AnswerClientContactDto, 'answers' | 'actions'>, schemaOptions: { optional: [ 'answers', 'actions' ] })"
      properties:
        name:
          type: string
          minLength: 1
        email:
          type: string
          minLength: 1
        phone:
          type: string
        position:
          type: string
      required:
        - name
        - email
      additionalProperties: false
      x-typescript-type: "@loopback/repository-json-schema#Optional<AnswerClientContactDto, 'answers' | 'actions'>"
    AnswerClientDtoOptional_answers-actions_:
      title: AnswerClientDtoOptional_answers-actions_
      type: object
      description: "(tsType: @loopback/repository-json-schema#Optional<AnswerClientDto, 'answers' | 'actions'>, schemaOptions: { optional: [ 'answers', 'actions' ] })"
      properties:
        id:
          type: number
        entityId:
          type: number
        company:
          $ref: "#/components/schemas/AnswerClientCompanyDtoOptional_answers-actions_"
        contact:
          $ref: "#/components/schemas/AnswerClientContactDtoOptional_answers-actions_"
      required:
        - id
        - entityId
        - company
        - contact
      additionalProperties: false
      x-typescript-type: "@loopback/repository-json-schema#Optional<AnswerClientDto, 'answers' | 'actions'>"
    AnswerPurposeDetailsDtoOptional_answers-actions_:
      title: AnswerPurposeDetailsDtoOptional_answers-actions_
      type: object
      description: "(tsType: @loopback/repository-json-schema#Optional<AnswerPurposeDetailsDto, 'answers' | 'actions'>, schemaOptions: { optional: [ 'answers', 'actions' ] })"
      properties:
        id:
          type: number
        value:
          type: string
        description:
          type: string
      additionalProperties: false
      x-typescript-type: "@loopback/repository-json-schema#Optional<AnswerPurposeDetailsDto, 'answers' | 'actions'>"
    AnswerDetailsDtoOptional_answers-actions_:
      title: AnswerDetailsDtoOptional_answers-actions_
      type: object
      description: "(tsType: @loopback/repository-json-schema#Optional<AnswerDetailsDto, 'answers' | 'actions'>, schemaOptions: { optional: [ 'answers', 'actions' ] })"
      properties:
        id:
          type: number
        value:
          type: string
      additionalProperties: false
      x-typescript-type: "@loopback/repository-json-schema#Optional<AnswerDetailsDto, 'answers' | 'actions'>"
    SecurityDtoOptional_answers-actions_:
      title: SecurityDtoOptional_answers-actions_
      type: object
      description: "(tsType: @loopback/repository-json-schema#Optional<SecurityDto, 'answers' | 'actions'>, schemaOptions: { optional: [ 'answers', 'actions' ] })"
      properties:
        homeowner:
          $ref: "#/components/schemas/AnswerDetailsDtoOptional_answers-actions_"
        guarantee:
          $ref: "#/components/schemas/AnswerDetailsDtoOptional_answers-actions_"
      additionalProperties: false
      x-typescript-type: "@loopback/repository-json-schema#Optional<SecurityDto, 'answers' | 'actions'>"
    AnswerDtoOptional_answers-actions_:
      title: AnswerDtoOptional_answers-actions_
      type: object
      description: "(tsType: @loopback/repository-json-schema#Optional<AnswerDto, 'answers' | 'actions'>, schemaOptions: { optional: [ 'answers', 'actions' ] })"
      properties:
        client:
          $ref: "#/components/schemas/AnswerClientDtoOptional_answers-actions_"
        purpose:
          $ref: "#/components/schemas/AnswerPurposeDetailsDtoOptional_answers-actions_"
        urgency:
          $ref: "#/components/schemas/AnswerDetailsDtoOptional_answers-actions_"
        term:
          $ref: "#/components/schemas/AnswerDetailsDtoOptional_answers-actions_"
        security:
          $ref: "#/components/schemas/SecurityDtoOptional_answers-actions_"
        fundingAmount:
          type: number
        products:
          type: array
          items:
            type: number
            enum:
              - 1
              - 2
              - 4
              - 8
              - 16
              - 32
              - 64
              - 128
      required:
        - client
        - urgency
      additionalProperties: false
      x-typescript-type: "@loopback/repository-json-schema#Optional<AnswerDto, 'answers' | 'actions'>"
    ActionDtoOptional_answers-actions_:
      title: ActionDtoOptional_answers-actions_
      type: object
      description: "(tsType: @loopback/repository-json-schema#Optional<ActionDto, 'answers' | 'actions'>, schemaOptions: { optional: [ 'answers', 'actions' ] })"
      properties:
        id:
          type: number
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
          minLength: 1
        name:
          type: string
        description:
          type: string
      required:
        - id
      additionalProperties: false
      x-typescript-type: "@loopback/repository-json-schema#Optional<ActionDto, 'answers' | 'actions'>"
    FundingEnquiryPatchRequestDto:
      title: FundingEnquiryPatchRequestDto
      type: object
      description: "(tsType: @loopback/repository-json-schema#Optional<FundingEnquiryRequestDto, 'answers' | 'actions'>, schemaOptions: { optional: [ 'answers', 'actions' ], title: 'FundingEnquiryPatchRequestDto' })"
      properties:
        answers:
          $ref: "#/components/schemas/AnswerDtoOptional_answers-actions_"
        actions:
          type: array
          items:
            $ref: "#/components/schemas/ActionDtoOptional_answers-actions_"
      additionalProperties: false
      x-typescript-type: "@loopback/repository-json-schema#Optional<FundingEnquiryRequestDto, 'answers' | 'actions'>"
    FundingEnquiryStatusDto:
      title: FundingEnquiryStatusDto
      type: object
      properties:
        status:
          type: string
          enum:
            - DRAFT
            - SENT
            - IN_PROGRESS
            - COMPLETE_CLOSED
            - COMPLETE_SEARCH
            - CANCELLED
      required:
        - status
      additionalProperties: false
    ActivitiesTimelineListDto:
      title: ActivitiesTimelineListDto
      type: object
      properties:
        client:
          $ref: "#/components/schemas/AnswerClientDto"
        activity:
          $ref: "#/components/schemas/ActivityTimelineDto"
      additionalProperties: false
    ActivitiesTimelineReadDto:
      title: ActivitiesTimelineReadDto
      type: object
      properties:
        activitiesIds:
          type: array
          items:
            type: string
        seen:
          type: boolean
      required:
        - activitiesIds
        - seen
      additionalProperties: false
    FeesDto:
      title: FeesDto
      type: object
      description: "(tsType: FeesDto, schemaOptions: { exclude: undefined })"
      properties:
        earlyRepaymentFees:
          type: number
        exitFees:
          type: number
      additionalProperties: false
      x-typescript-type: FeesDto
    LenderDto:
      title: LenderDto
      type: object
      description: "(tsType: LenderDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        entityId:
          type: number
        companyName:
          type: string
        companyNumber:
          type: string
        companyAddress:
          type: string
        entityType:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        contentAvailable:
          type: string
        logo:
          type: string
        icon:
          type: string
        type:
          type: number
          enum:
            - 1
            - 2
            - 3
        description:
          type: string
        hasInstantOffer:
          type: boolean
        hasInstantApplication:
          type: boolean
        phoneNumber:
          type: string
        smallPrint:
          type: string
        otherInformation:
          type: string
        preRequestDetails:
          type: string
        descriptionHtml:
          type: string
        canEditLendingCriteria:
          type: boolean
        updated:
          type: string
          format: date-time
        responseTime:
          type: number
        reviewScore:
          type: number
        costOfFinance:
          type: number
        logoUrl:
          type: string
        iconUrl:
          type: string
        fees:
          $ref: "#/components/schemas/FeesDto"
        documents:
          type: array
          items:
            type: string
        features:
          type: array
          items:
            type: string
      additionalProperties: false
      x-typescript-type: LenderDto
    FundingMatchResponseDto:
      title: FundingMatchResponseDto
      type: object
      properties:
        id:
          type: number
        offer:
          $ref: "#/components/schemas/OfferResponseDto"
        products:
          type: array
          items:
            type: number
        statusReason:
          type: string
        statusComment:
          type: string
        canUseInstantOffer:
          type: boolean
        canUseInstantApplication:
          type: boolean
        lender:
          $ref: "#/components/schemas/LenderDto"
        status:
          type: number
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 8
            - 9
            - 11
            - 12
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
        matchCompletion:
          type: number
        failingValidationRules:
          type: array
          items:
            type: string
      required:
        - status
      additionalProperties: false
    MatchAssetFinanceDto:
      title: MatchAssetFinanceDto
      type: object
      properties:
        advanceAmount:
          type: number
          title: Advance Amount
          minimum: 1
        arrangementFee:
          type: number
          title: Arrangement Fee
          minimum: 0
        commissionAmount:
          type: number
          title: Commission Amount (Total)
          minimum: 0
        interestCharge:
          type: string
          title: Interest Charge
          enum:
            - ANNUAL_RATE
            - MONTHLY_RATE
            - DAILY_RATE
            - FACTOR_RATE
            - FLAT_RATE
          default: ANNUAL_RATE
        rate:
          type: number
          title: Rate
          minimum: 0
          maximum: 100
        term:
          type: number
          title: Term
          minimum: 1
          maximum: 240
        deposit:
          type: number
          title: Deposit
          minimum: 1
        productOption:
          type: string
          title: Product Option
          enum:
            - HIRE_PURCHASE
            - FINANCE_LEASE
        vat:
          type: number
          title: VAT
          minimum: 1
        cost:
          type: number
          title: Cost
          minimum: 1
        totalPrice:
          type: number
          title: Total Price
          minimum: 1
        description:
          type: string
          title: Description
          minLength: 1
        monthlyRepayment:
          type: number
          title: Monthly Repayment
          minimum: 0
        additionalFees:
          type: string
          title: Additional Fees
          minLength: 1
        optionToPurchaseFee:
          type: number
          title: Option to Purchase Fee
          minimum: 1
        representativeAPR:
          type: number
          title: Representative APR
          minimum: 0
          maximum: 100
      additionalProperties: false
    MatchInvoiceFinanceDto:
      title: MatchInvoiceFinanceDto
      type: object
      properties:
        commissionAmount:
          type: number
          title: Commission Amount (Total)
          minimum: 0
        maximumCreditLine:
          type: number
          title: Maximum Credit Line
          minimum: 1
        serviceFee:
          type: number
          title: Service Fee
          minimum: 0
          maximum: 100
        discountFee:
          type: number
          title: Discount Fee
          minimum: 0
          maximum: 100
        advanceRate:
          type: number
          title: Advance Rate
          minimum: 0
          maximum: 100
        additionalFees:
          type: string
          title: Additional Fees
          minLength: 1
        facility:
          type: string
          title: Facility
          enum:
            - DISCOUNTING
            - FACTORING
        contractLength:
          type: number
          title: Contract Length
          minimum: 1
          maximum: 240
        creditInsuranceRequired:
          type: boolean
          title: Credit Insurance Required
        selective:
          type: boolean
          title: Selective
      additionalProperties: false
    MatchMerchantCashAdvanceDto:
      title: MatchMerchantCashAdvanceDto
      type: object
      properties:
        commissionAmount:
          type: number
          title: Commission Amount (Total)
          minimum: 0
        fundingAmount:
          type: number
          title: Funding Amount
          minimum: 1
        ratio:
          type: number
          title: Factor / Ratio
          minimum: 0
          maximum: 100
        sweep:
          type: number
          title: Sweep
          minimum: 0
          maximum: 100
        totalRepayment:
          type: number
          title: Total Repayment
          minimum: 1
      additionalProperties: false
    MatchTermLoanDto:
      title: MatchTermLoanDto
      type: object
      properties:
        maximumAmount:
          type: number
          title: Maximum Amount
          minimum: 1
        arrangementFee:
          type: number
          title: Arrangement Fee
          minimum: 0
        commissionAmount:
          type: number
          title: Commission Amount (Total)
          minimum: 0
        interestCharge:
          type: string
          title: Interest Charge
          enum:
            - ANNUAL_RATE
            - MONTHLY_RATE
            - DAILY_RATE
            - FACTOR_RATE
            - FLAT_RATE
          default: ANNUAL_RATE
        rate:
          type: number
          title: Rate
          minimum: 0
          maximum: 100
        term:
          type: number
          title: Term
          minimum: 1
          maximum: 240
        monthlyRepayment:
          type: number
          title: Monthly Repayment
          minimum: 0
        totalRepayment:
          type: number
          title: Total Repayment
          minimum: 1
        representativeAPR:
          type: number
          title: Representative APR
          minimum: 0
          maximum: 100
        likelihoodOfAcceptance:
          type: number
          title: Likelihood of Acceptance
          minimum: 0
          maximum: 100
      additionalProperties: false
    MatchTradeFinanceDto:
      title: MatchTradeFinanceDto
      type: object
      properties:
        commissionAmount:
          type: number
          title: Commission Amount (Total)
          minimum: 0
        maximumCreditLine:
          type: number
          title: Maximum Credit Line
          minimum: 1
        serviceFee:
          type: number
          title: Service Fee
          minimum: 0
          maximum: 100
        discountFee:
          type: number
          title: Discount Fee
          minimum: 0
          maximum: 100
        additionalFees:
          type: string
          title: Additional Fees
          minLength: 1
        advanceRate:
          type: number
          title: Advance Rate
          minimum: 0
          maximum: 100
        contractLength:
          type: number
          title: Contract Length
          minimum: 1
          maximum: 240
      additionalProperties: false
    MatchCommercialPropertyDto:
      title: MatchCommercialPropertyDto
      type: object
      properties:
        fundingAmount:
          type: number
          title: Funding Amount
          minimum: 1
        arrangementFee:
          type: number
          title: Arrangement Fee
          minimum: 0
        commissionAmount:
          type: number
          title: Commission Amount (total)
          minimum: 0
        interestCharge:
          type: string
          title: Interest Charge
          enum:
            - ANNUAL_RATE
            - MONTHLY_RATE
          default: ANNUAL_RATE
        interestRate:
          type: number
          title: Interest Rate
          minimum: 0
          maximum: 100
        productType:
          type: string
          title: Product Type
          enum:
            - BTL
            - INTEREST_ONLY
            - REPAYMENT
            - PARTIALLY_AMORTISING
        mortgageTerm:
          type: number
          title: Mortgage Term
          minimum: 1
          maximum: 240
        dealTerm:
          type: number
          title: Deal Term
          minimum: 1
          maximum: 240
        rateType:
          type: string
          title: Rate Type
          enum:
            - FIXED
            - VARIABLE
        ltv:
          type: number
          title: Loan to Value
          minimum: 0
          maximum: 100
        valuationFee:
          type: number
          title: Valuation Fee
          minimum: 0
        exitFee:
          type: number
          title: Exit Fee
          minimum: 0
        propertyChargeAddress:
          type: string
          title: Property Charge Address
          minLength: 1
      additionalProperties: false
    MatchOfferRequestDto:
      title: MatchOfferRequestDto
      type: object
      properties:
        expiryDate:
          type: string
          format: date-time
          title: Status
        assetFinance:
          $ref: "#/components/schemas/MatchAssetFinanceDto"
        invoiceFinance:
          $ref: "#/components/schemas/MatchInvoiceFinanceDto"
        merchantCashAdvance:
          $ref: "#/components/schemas/MatchMerchantCashAdvanceDto"
        termLoan:
          $ref: "#/components/schemas/MatchTermLoanDto"
        tradeFinance:
          $ref: "#/components/schemas/MatchTradeFinanceDto"
        commercialProperty:
          $ref: "#/components/schemas/MatchCommercialPropertyDto"
        applicationUrl:
          type: string
          minLength: 1
      additionalProperties: false
    FundingMatchPatchDto:
      title: FundingMatchPatchDto
      type: object
      properties:
        notify:
          type: array
          items:
            type: string
        publicComment:
          type: string
          title: Public comment
          minLength: 1
        privateComment:
          type: string
          title: Private comment
          minLength: 1
        passComment:
          type: string
          title: Pass comment
          minLength: 1
        passReason:
          type: string
          title: Pass reason
          minLength: 1
        statusReason:
          type: string
          title: Status reason
          minLength: 1
        productType:
          type: number
          title: Product
          enum:
            - 1
            - 2
            - 4
            - 8
            - 16
            - 32
            - 64
            - 128
        documents:
          type: array
          items:
            type: string
            title: Documents ID
            minItems: 1
        status:
          type: number
          title: Status
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 8
            - 9
            - 11
            - 12
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
        offer:
          $ref: "#/components/schemas/MatchOfferRequestDto"
        governmentBacked:
          type: boolean
          title: Government Backed
      required:
        - status
      additionalProperties: false
    IncomingMessage: {}
    FundingMatchDocumentDto:
      title: FundingMatchDocumentDto
      type: object
      description: "(tsType: FundingMatchDocumentDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: string
        lenderId:
          type: number
        url:
          type: string
        created:
          type: number
        documentTypeId:
          type: number
          enum:
            - 1
            - 2
            - 3
            - 4
        name:
          type: string
      additionalProperties: false
      x-typescript-type: FundingMatchDocumentDto
    AvgPriceEstimatesDto:
      title: AvgPriceEstimatesDto
      type: object
      description: "(tsType: AvgPriceEstimatesDto, schemaOptions: { exclude: undefined })"
      properties:
        min:
          type: number
        max:
          type: number
        median:
          type: number
      additionalProperties: false
      x-typescript-type: AvgPriceEstimatesDto
    CasePrivacyDto:
      title: CasePrivacyDto
      type: object
      properties:
        private:
          type: boolean
      required:
        - private
      additionalProperties: false
    LeadTotalsDto:
      title: LeadTotalsDto
      type: object
      description: "(tsType: LeadTotalsDto, schemaOptions: { exclude: undefined })"
      properties:
        all:
          type: number
        invoiceFinance:
          type: number
        tradeFinance:
          type: number
        merchantCashAdvance:
          type: number
        termLoan:
          type: number
        assetBackedFinance:
          type: number
        commercialProperty:
          type: number
        eCommerceFunding:
          type: number
        fixedLoanTerms:
          type: number
      additionalProperties: false
      x-typescript-type: LeadTotalsDto
    LeadFundingSearchDto:
      title: LeadFundingSearchDto
      type: object
      description: "(tsType: LeadFundingSearchDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        amount:
          type: number
        period:
          type: number
      additionalProperties: false
      x-typescript-type: LeadFundingSearchDto
    LeadBusinessDto:
      title: LeadBusinessDto
      type: object
      description: "(tsType: LeadBusinessDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        name:
          type: string
      additionalProperties: false
      x-typescript-type: LeadBusinessDto
    LeadCompanyDto:
      title: LeadCompanyDto
      type: object
      description: "(tsType: LeadCompanyDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        name:
          type: string
      additionalProperties: false
      x-typescript-type: LeadCompanyDto
    LeadProfileDto:
      title: LeadProfileDto
      type: object
      description: "(tsType: LeadProfileDto, schemaOptions: { exclude: undefined })"
      properties:
        completion:
          type: number
        revenue:
          type: number
        tradingPeriod:
          type: number
      additionalProperties: false
      x-typescript-type: LeadProfileDto
    LeadMatchDto:
      title: LeadMatchDto
      type: object
      description: "(tsType: LeadMatchDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        productType:
          type: number
          enum:
            - 1
            - 2
            - 4
            - 8
            - 16
            - 32
            - 64
            - 128
        createdAt:
          type: string
          format: date-time
        status:
          type: number
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 8
            - 9
            - 11
            - 12
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
        lastUpdateBy:
          $ref: "#/components/schemas/UserDto"
        lastChangeAt:
          type: string
          format: date-time
        canUseInstantApplication:
          type: boolean
        canUseInstantOffer:
          type: boolean
      additionalProperties: false
      x-typescript-type: LeadMatchDto
    LeadItemDto:
      title: LeadItemDto
      type: object
      description: "(tsType: LeadItemDto, schemaOptions: { exclude: undefined })"
      properties:
        search:
          $ref: "#/components/schemas/LeadFundingSearchDto"
        business:
          $ref: "#/components/schemas/LeadBusinessDto"
        company:
          $ref: "#/components/schemas/LeadCompanyDto"
        profile:
          $ref: "#/components/schemas/LeadProfileDto"
        matches:
          type: array
          items:
            $ref: "#/components/schemas/LeadMatchDto"
      additionalProperties: false
      x-typescript-type: LeadItemDto
    LeadDto:
      title: LeadDto
      type: object
      description: "(tsType: LeadDto, schemaOptions: { exclude: undefined })"
      properties:
        totals:
          $ref: "#/components/schemas/LeadTotalsDto"
        leads:
          type: array
          items:
            $ref: "#/components/schemas/LeadItemDto"
      additionalProperties: false
      x-typescript-type: LeadDto
    ServiceabilityScoreDto:
      title: ServiceabilityScoreDto
      type: object
      description: "(tsType: ServiceabilityScoreDto, schemaOptions: { exclude: undefined })"
      properties:
        debtServiceCoverage:
          type: number
        monthlyRepayment:
          type: number
        totalRepayment:
          type: number
        repaymentInterest:
          type: number
      additionalProperties: false
      x-typescript-type: ServiceabilityScoreDto
    ServiceabilityScoreRequestDto:
      title: ServiceabilityScoreRequestDto
      type: object
      properties:
        facilitySize:
          type: number
        ebitda:
          type: number
        dividends:
          type: number
        capitalRepayments:
          type: number
        term:
          type: number
        rate:
          type: number
      additionalProperties: false
    PartnerEntitySummaryDto:
      title: PartnerEntitySummaryDto
      type: object
      description: "(tsType: PartnerEntitySummaryDto, schemaOptions: { exclude: undefined })"
      properties:
        companyName:
          type: string
        logoUrl:
          type: string
      additionalProperties: false
      x-typescript-type: PartnerEntitySummaryDto
    CreditReportCompanyDirectorDto:
      title: CreditReportCompanyDirectorDto
      type: object
      description: "(tsType: CreditReportCompanyDirectorDto, schemaOptions: { exclude: undefined })"
      properties:
        title:
          type: string
        name:
          type: string
        address:
          type: string
        position:
          type: string
        dateOfBirth:
          type: string
      additionalProperties: false
      x-typescript-type: CreditReportCompanyDirectorDto
    CreditReportCompanyDetailsDto:
      title: CreditReportCompanyDetailsDto
      type: object
      description: "(tsType: CreditReportCompanyDetailsDto, schemaOptions: { exclude: undefined })"
      properties:
        companyName:
          type: string
          description: Company name
        companyType:
          type: string
          description: Company type
        registrationRef:
          type: string
          description: Company registration number
        dissolved:
          type: boolean
          description: Is the company dissolved?
        lastFiledAccountsDate:
          type: string
          format: date-time
          description: Last filed accounts date
        countryCode:
          type: string
          description: The value take ISO/Alpha 2 format country codes
        normalizedSector:
          type: string
          enum:
            - AGRICULTURE
            - AUTOMOTIVE
            - BUSINESS_SERVICES
            - CONSTRUCTION
            - COURIER
            - DISTRIBUTION
            - FINANCIAL_SERVICES
            - HAULAGE
            - HEALTHCARE_CARE
            - HOTELS_HOUSE
            - IMPORT_EXPORT
            - IT_RELATED
            - MANUFACTURING
            - PRINT_PUBLISHING
            - PROFESSIONAL_SERVICES
            - PROPERTY
            - RECRUITMENT
            - RETAIL
            - SECURITY_SERVICES
            - TRADE
            - TRANSPORTATION
            - WHOLESALE
            - OTHER
            - EDUCATION
            - CHARITIES
            - MEDIA_AND_ENTERTAINMENT
        normalizedSectorId:
          type: number
          description: Normalized sector id
        activitySectorCode:
          type: string
          description: Activity sector code
        activitySectorDescription:
          type: string
          description: Activity sector description
        directors:
          type: array
          items:
            $ref: "#/components/schemas/CreditReportCompanyDirectorDto"
        registrationDate:
          type: string
          format: date-time
          description: Registration date
        contactPhone:
          type: string
          description: Contact phone
        companyWebsite:
          type: string
          description: Company website
      additionalProperties: false
      x-typescript-type: CreditReportCompanyDetailsDto
    AttachmentDto:
      title: AttachmentDto
      type: object
      description: "(tsType: AttachmentDto, schemaOptions: { exclude: undefined })"
      properties:
        dataBase64:
          type: string
          description: Base 64 representation of the attachment
        type:
          type: string
          description: Type of attachment
      additionalProperties: false
      x-typescript-type: AttachmentDto
    DebentureValueDto:
      title: DebentureValueDto
      type: object
      description: "(tsType: DebentureValueDto, schemaOptions: { exclude: undefined })"
      properties:
        total:
          type: number
          description: Total debentures value
      additionalProperties: false
      x-typescript-type: DebentureValueDto
    MortgageLenderDetailDto:
      title: MortgageLenderDetailDto
      type: object
      description: "(tsType: MortgageLenderDetailDto, schemaOptions: { exclude: undefined })"
      properties:
        name:
          type: string
          description: Lender name
      additionalProperties: false
      x-typescript-type: MortgageLenderDetailDto
    MortgageDetailDto:
      title: MortgageDetailDto
      type: object
      description: "(tsType: MortgageDetailDto, schemaOptions: { exclude: undefined })"
      properties:
        registrationDate:
          type: string
          format: date-time
          description: Registration date
        totalDebenture:
          type: number
          description: Total debentures
        propertyDetails:
          type: string
          description: Property details
        amountSatisfied:
          type: number
          description: Amount satisfied
        lenderDetails:
          type: array
          items:
            $ref: "#/components/schemas/MortgageLenderDetailDto"
      additionalProperties: false
      x-typescript-type: MortgageDetailDto
    DebenturesDto:
      title: DebenturesDto
      type: object
      description: "(tsType: DebenturesDto, schemaOptions: { exclude: undefined })"
      properties:
        outstanding:
          $ref: "#/components/schemas/DebentureValueDto"
        satisfied:
          $ref: "#/components/schemas/DebentureValueDto"
        mortgageDetails:
          type: array
          items:
            $ref: "#/components/schemas/MortgageDetailDto"
      additionalProperties: false
      x-typescript-type: DebenturesDto
    DebtDto:
      title: DebtDto
      type: object
      description: "(tsType: DebtDto, schemaOptions: { exclude: undefined })"
      properties:
        debentures:
          $ref: "#/components/schemas/DebenturesDto"
      additionalProperties: false
      x-typescript-type: DebtDto
    CcjDetailDto:
      title: CcjDetailDto
      type: object
      description: "(tsType: CcjDetailDto, schemaOptions: { exclude: undefined })"
      properties:
        judgmentType:
          type: string
          description: Judgment type
        judgmentSource:
          type: string
          description: Judgment source
        judgmentDate:
          type: string
          description: Judgment date
        judgmentAmount:
          type: number
          description: Judgment amount
        judgmentAgainst:
          type: string
          description: Judgment against
        satisfactionDate:
          type: string
          format: date-time
        courtName:
          type: string
        caseNumber:
          type: string
      additionalProperties: false
      x-typescript-type: CcjDetailDto
    CcjCompanyDto:
      title: CcjCompanyDto
      type: object
      description: "(tsType: CcjCompanyDto, schemaOptions: { exclude: undefined })"
      properties:
        numberOfActive:
          type: number
          description: Number of active CCJs
        valueOfActive:
          type: number
          description: Value of active CCJs
        numberOfSatisfied:
          type: number
          description: Number of satisfied CCJs
        ccjLast12MonthsCount:
          type: number
          description: Number of CCJs during last 12 months
        ccjLast12MonthsValue:
          type: number
          description: Value of CCJs during last 12 months
        ccjDetails:
          type: array
          items:
            $ref: "#/components/schemas/CcjDetailDto"
      additionalProperties: false
      x-typescript-type: CcjCompanyDto
    CcjDirectorDto:
      title: CcjDirectorDto
      type: object
      description: "(tsType: CcjDirectorDto, schemaOptions: { exclude: undefined })"
      properties:
        ccjLast12MonthsCount:
          type: number
          description: Count of CCJs during last 12 months
        ccjLast12MonthsValue:
          type: number
          description: Value of CCJs during last 12 months
      additionalProperties: false
      x-typescript-type: CcjDirectorDto
    CcjsDto:
      title: CcjsDto
      type: object
      description: "(tsType: CcjsDto, schemaOptions: { exclude: undefined })"
      properties:
        company:
          $ref: "#/components/schemas/CcjCompanyDto"
        directors:
          type: array
          items:
            $ref: "#/components/schemas/CcjDirectorDto"
      additionalProperties: false
      x-typescript-type: CcjsDto
    CreditEnquiriesDto:
      title: CreditEnquiriesDto
      type: object
      description: "(tsType: CreditEnquiriesDto, schemaOptions: { exclude: undefined })"
      properties:
        lastMonth:
          type: number
          description: Last month enquiries
        last3Months:
          type: number
          description: Last 3 months enquiries
        last6Months:
          type: number
          description: Last 6 months enquiries
        last12Months:
          type: number
          description: Last 12 months enquiries
        monthlyAverage:
          type: number
          description: Enquiries monthly average
        lastEnquiryDate:
          type: string
          format: date-time
          description: Last enquiry date
        enquiryType:
          type: string
          description: Enquiry type
      additionalProperties: false
      x-typescript-type: CreditEnquiriesDto
    LandRegistryDto:
      title: LandRegistryDto
      type: object
      description: "(tsType: LandRegistryDto, schemaOptions: { exclude: undefined })"
      properties:
        registeredLandAndProperty:
          type: number
          description: Registered land and property
      additionalProperties: false
      x-typescript-type: LandRegistryDto
    BenchmarkCreditScoreDto:
      title: BenchmarkCreditScoreDto
      type: object
      description: "(tsType: BenchmarkCreditScoreDto, schemaOptions: { exclude: undefined })"
      properties:
        scoreAvgAll:
          type: string
          description: All average score
        scoreAvgSector:
          type: string
          description: Sector average score
        scoreAvgAge:
          type: string
          description: Age average score
        scoreAvgSize:
          type: string
          description: Size average score
        scoreMarginAll:
          type: string
          description: All margin score
        scoreMarginSector:
          type: string
          description: Sector margin score
        scoreMarginSize:
          type: string
          description: Size margin score
        scoreMarginAge:
          type: string
          description: Age margin score
      additionalProperties: false
      x-typescript-type: BenchmarkCreditScoreDto
    ProbabilityOfDefaultDto:
      title: ProbabilityOfDefaultDto
      type: object
      description: "(tsType: ProbabilityOfDefaultDto, schemaOptions: { exclude: undefined })"
      properties:
        defaultAvgAll:
          type: string
          description: All average default
        defaultAvgSector:
          type: string
          description: Sector average default
        defaultAvgAge:
          type: string
          description: Age average default
        defaultAvgSize:
          type: string
          description: Size average default
      additionalProperties: false
      x-typescript-type: ProbabilityOfDefaultDto
    BenchmarkDto:
      title: BenchmarkDto
      type: object
      description: "(tsType: BenchmarkDto, schemaOptions: { exclude: undefined })"
      properties:
        sector:
          type: string
          description: Sector
        creditScore:
          $ref: "#/components/schemas/BenchmarkCreditScoreDto"
        probabilityOfDefault:
          $ref: "#/components/schemas/ProbabilityOfDefaultDto"
      additionalProperties: false
      x-typescript-type: BenchmarkDto
    WindUpPetitionerDto:
      title: WindUpPetitionerDto
      type: object
      description: "(tsType: WindUpPetitionerDto, schemaOptions: { exclude: undefined })"
      properties:
        petitionerName:
          type: string
          description: Petitioner name
        courtName:
          type: string
          description: Court name
      additionalProperties: false
      x-typescript-type: WindUpPetitionerDto
    WindUpPetitionDto:
      title: WindUpPetitionDto
      type: object
      description: "(tsType: WindUpPetitionDto, schemaOptions: { exclude: undefined })"
      properties:
        publicationDate:
          type: string
          format: date-time
          description: Petition publication date
        petitioners:
          type: array
          items:
            $ref: "#/components/schemas/WindUpPetitionerDto"
      additionalProperties: false
      x-typescript-type: WindUpPetitionDto
    WindUpDismissalDto:
      title: WindUpDismissalDto
      type: object
      description: "(tsType: WindUpDismissalDto, schemaOptions: { exclude: undefined })"
      properties:
        dismissalDate:
          type: string
          format: date-time
          description: Dismissal date
        petitioners:
          type: array
          items:
            $ref: "#/components/schemas/WindUpPetitionerDto"
      additionalProperties: false
      x-typescript-type: WindUpDismissalDto
    WindUpResolutionDto:
      title: WindUpResolutionDto
      type: object
      description: "(tsType: WindUpResolutionDto, schemaOptions: { exclude: undefined })"
      properties:
        resolutionDate:
          type: string
          format: date-time
          description: Resolution date
        petitioners:
          type: array
          items:
            $ref: "#/components/schemas/WindUpPetitionerDto"
      additionalProperties: false
      x-typescript-type: WindUpResolutionDto
    WindUpOrderDto:
      title: WindUpOrderDto
      type: object
      description: "(tsType: WindUpOrderDto, schemaOptions: { exclude: undefined })"
      properties:
        orderDate:
          type: string
          format: date-time
          description: Order date
        petitioners:
          type: array
          items:
            $ref: "#/components/schemas/WindUpPetitionerDto"
      additionalProperties: false
      x-typescript-type: WindUpOrderDto
    WindUpDto:
      title: WindUpDto
      type: object
      description: "(tsType: WindUpDto, schemaOptions: { exclude: undefined })"
      properties:
        petitions:
          type: array
          items:
            $ref: "#/components/schemas/WindUpPetitionDto"
        dismissals:
          type: array
          items:
            $ref: "#/components/schemas/WindUpDismissalDto"
        resolutions:
          type: array
          items:
            $ref: "#/components/schemas/WindUpResolutionDto"
        orders:
          type: array
          items:
            $ref: "#/components/schemas/WindUpOrderDto"
      additionalProperties: false
      x-typescript-type: WindUpDto
    PaymentPerformanceCompanyDto:
      title: PaymentPerformanceCompanyDto
      type: object
      description: "(tsType: PaymentPerformanceCompanyDto, schemaOptions: { exclude: undefined })"
      properties:
        avgDaysBeyondTerms3Months:
          type: number
          description: 3 months average days beyond term
        avgDaysBeyondTerms6Months:
          type: number
          description: 6 months average days beyond term
        avgDaysBeyondTerms12Months:
          type: number
          description: 12 months average days beyond term
        paymentPattern:
          type: string
          description: Payment pattern
          enum:
            - CONSISTENT
            - WORSENING
            - NOTICEABLY_WORSENING
            - SIGNIFICANTLY_WORSENING
            - IMPROVING
            - SIGNIFICANTLY_IMPROVING
            - NOTICEABLY_IMPROVING
        paymentTerm:
          type: string
          description: Payment term
          enum:
            - BEYOND_TERMS
            - WITHIN_TERMS
        overTerms:
          type: number
          description: Over terms
        marginDaysBeyondTerms3Months:
          type: number
          description: 3 months margin days beyond term
      additionalProperties: false
      x-typescript-type: PaymentPerformanceCompanyDto
    PaymentPerformanceDaysBeyondTermsMonthlyDto:
      title: PaymentPerformanceDaysBeyondTermsMonthlyDto
      type: object
      description: "(tsType: PaymentPerformanceDaysBeyondTermsMonthlyDto, schemaOptions: { exclude: undefined })"
      properties:
        daysBeyondTermsMonth:
          type: string
          format: date-time
          description: Days beyond term month
        daysBeyondTermsForPaymentExperiences:
          type: number
          description: Days beyond term for payment experiences
        numberOfExperiencesForDaysBeyondTerms:
          type: number
          description: Number of experiences for days beyond terms
      additionalProperties: false
      x-typescript-type: PaymentPerformanceDaysBeyondTermsMonthlyDto
    IndustryDaysBeyondTermsMonthDto:
      title: IndustryDaysBeyondTermsMonthDto
      type: object
      description: "(tsType: IndustryDaysBeyondTermsMonthDto, schemaOptions: { exclude: undefined })"
      properties:
        industryExperienceMonth:
          type: string
          format: date-time
          description: Industry experience month
        industryDaysBeyondTerms:
          type: number
          description: Industry days beyond term
      additionalProperties: false
      x-typescript-type: IndustryDaysBeyondTermsMonthDto
    PaymentPerformanceIndustryDto:
      title: PaymentPerformanceIndustryDto
      type: object
      description: "(tsType: PaymentPerformanceIndustryDto, schemaOptions: { exclude: undefined })"
      properties:
        industryAvgDaysBeyondTerms3Months:
          type: number
          description: 3 months industry average days beyond term
        industryAvgDaysBeyondTerms6Months:
          type: number
          description: 6 months industry average days beyond term
        industryAvgDaysBeyondTerms12Months:
          type: number
          description: 12 months industry average days beyond term
        industryPaymentPattern:
          type: string
          description: Industry payment pattern
          enum:
            - CONSISTENT_WITH_INDUSTRY_AVG
            - SLOWER_THAN_INDUSTRY_AVG
            - FASTER_THAN_INDUSTRY_AVG
        industryOverTerms:
          type: number
          description: Industry over terms
        industryDaysBeyondTermsMonths:
          type: array
          items:
            $ref: "#/components/schemas/IndustryDaysBeyondTermsMonthDto"
      additionalProperties: false
      x-typescript-type: PaymentPerformanceIndustryDto
    PaymentPerformanceDto:
      title: PaymentPerformanceDto
      type: object
      description: "(tsType: PaymentPerformanceDto, schemaOptions: { exclude: undefined })"
      properties:
        company:
          $ref: "#/components/schemas/PaymentPerformanceCompanyDto"
        daysBeyondTermsMonths:
          type: array
          items:
            $ref: "#/components/schemas/PaymentPerformanceDaysBeyondTermsMonthlyDto"
        industry:
          $ref: "#/components/schemas/PaymentPerformanceIndustryDto"
      additionalProperties: false
      x-typescript-type: PaymentPerformanceDto
    AccountsRefDateDto:
      title: AccountsRefDateDto
      type: object
      description: "(tsType: AccountsRefDateDto, schemaOptions: { exclude: undefined })"
      properties:
        day:
          type: string
          description: Day
        month:
          type: string
          description: Month
      additionalProperties: false
      x-typescript-type: AccountsRefDateDto
    FilingHistoryDto:
      title: FilingHistoryDto
      type: object
      description: "(tsType: FilingHistoryDto, schemaOptions: { exclude: undefined })"
      properties:
        accountsFilingDate:
          type: string
          format: date-time
          description: Accounts filing date
        returnsFilingDate:
          type: string
          format: date-time
          description: Returns filing date
        accountsLastFiledDate:
          type: string
          format: date-time
          description: Accounts last filed date
        returnsLastFiledDate:
          type: string
          format: date-time
          description: Returns last filed date
        accountsRefDate:
          $ref: "#/components/schemas/AccountsRefDateDto"
      additionalProperties: false
      x-typescript-type: FilingHistoryDto
    CreditRiskImpactWeightCount:
      title: CreditRiskImpactWeightCount
      type: object
      description: "(tsType: CreditRiskImpactWeightCount, schemaOptions: { exclude: undefined })"
      properties:
        count:
          type: number
        weight:
          type: string
          enum:
            - POSITIVE
            - NEGATIVE
            - NEUTRAL
      additionalProperties: false
      x-typescript-type: CreditRiskImpactWeightCount
    CreditRiskImpact:
      title: CreditRiskImpact
      type: object
      description: "(tsType: CreditRiskImpact, schemaOptions: { exclude: undefined })"
      properties:
        avgWeight:
          type: string
          enum:
            - POSITIVE
            - NEGATIVE
            - NEUTRAL
        counters:
          type: array
          items:
            $ref: "#/components/schemas/CreditRiskImpactWeightCount"
      additionalProperties: false
      x-typescript-type: CreditRiskImpact
    CreditRiskSubCategorySummary:
      title: CreditRiskSubCategorySummary
      type: object
      description: "(tsType: CreditRiskSubCategorySummary, schemaOptions: { exclude: undefined })"
      properties:
        name:
          type: string
          enum:
            - ACCOUNTS_FILING
            - PROFITABILITY_OF_BUSINESS
            - WELL_CAPITALISED
            - FINANCIAL_STABILITY
            - COMPANY_SECRETARIAL
            - INCORPORATION_DATE
            - REGISTERED_ADDRESS
            - INDUSTRY_AND_SECTOR
            - APPOINTED_DIRECTORS
            - DIRECTOR_ACTIVITY
            - DIRECTOR_INFORMATION
            - INDUSTRY_PAYMENT_STANDARDS
            - TIMELINESS_OF_PAYMENTS
            - GAZETTE_NOTICES
            - REGISTERED_COUNTY_COURT_JUDGEMENT
            - ACTIVE_COMPANY_RECORD
            - BORROWING_AGAINST_THE_COMPANY
            - DIRECTOR_CREDIT_SCORE
            - REJECTED_PAYMENTS
            - TIME_SPENT_IN_OVERDRAFT
            - CURRENT_ACCOUNT_TURNOVER
            - CASH_IN_HAND_AVAILABLE
            - CREDIT_ACCOUNTS_IN_DEFAULT
            - REPAYING_COMPANY_DEBT
        description:
          type: string
        impact:
          $ref: "#/components/schemas/CreditRiskImpact"
      additionalProperties: false
      x-typescript-type: CreditRiskSubCategorySummary
    CreditRiskCategorySummary:
      title: CreditRiskCategorySummary
      type: object
      description: "(tsType: CreditRiskCategorySummary, schemaOptions: { exclude: undefined })"
      properties:
        name:
          type: string
          enum:
            - ANNUAL_ACCOUNTS
            - BUSINESS_SUMMARY
            - DIRECTORS_COMMERCIAL_EXPERIENCE
            - PAYMENT_PERFORMANCE
            - PUBLIC_RECORDS
            - COMMERCIAL_CAIS
            - COMMERCIAL_CATO
            - DIRECTOR_PERSONAL_CONSUMER_RATING
            - CASH_AND_CAPITAL
            - DIRECTORS_PERSONAL_CREDIT
            - CREDIT_AND_BUSINESS_BORROWING
        description:
          type: string
        subCategories:
          type: array
          items:
            $ref: "#/components/schemas/CreditRiskSubCategorySummary"
        impact:
          $ref: "#/components/schemas/CreditRiskImpact"
        links:
          type: array
          items:
            type: string
        verified:
          type: boolean
      additionalProperties: false
      x-typescript-type: CreditRiskCategorySummary
    CreditRiskFactorsSummary:
      title: CreditRiskFactorsSummary
      type: object
      description: "(tsType: CreditRiskFactorsSummary, schemaOptions: { exclude: undefined })"
      properties:
        categories:
          type: array
          items:
            $ref: "#/components/schemas/CreditRiskCategorySummary"
      additionalProperties: false
      x-typescript-type: CreditRiskFactorsSummary
    CreditReportDto:
      title: CreditReportDto
      type: object
      description: "(tsType: CreditReportDto, schemaOptions: { exclude: undefined })"
      properties:
        searchNumber:
          type: string
          description: Search Number
        provider:
          type: string
          description: Provider
        creditLimit:
          type: string
          description: Credit limit
        creditScore:
          type: string
          description: Credit score
        creditScoreGrade:
          type: string
          description: Credit score grade
        creditScoreBand:
          type: string
          description: Credit score band
        creditScoreText:
          type: string
          description: Credit score text
        probabilityOfDefault:
          type: number
          description: Probability of detault
        creditLimitOverride:
          type: boolean
          description: Credit limit override
        creditScoreOverride:
          type: boolean
          description: Credit score override
        companyDetails:
          $ref: "#/components/schemas/CreditReportCompanyDetailsDto"
        attachment:
          $ref: "#/components/schemas/AttachmentDto"
        existingDebt:
          $ref: "#/components/schemas/DebtDto"
        financialStatements:
          type: array
          items:
            type: object
            description: Financial statements
        incorporatedAt:
          type: string
          description: Incorporation date
        address:
          type: string
          description: Address
        contactAddress:
          $ref: "#/components/schemas/AddressDto"
        tradingAddress:
          $ref: "#/components/schemas/AddressDto"
        creditScorePrevious:
          type: string
          description: Previous credit score
        creditScoreGradePrevious:
          type: string
          description: Previous credit score grade
        creditRating:
          type: string
          description: Credit rating
        creditConclusionText:
          type: string
          description: Credit conclusion text
        latestRatingChangeDate:
          type: string
          format: date-time
          description: Latest rating change date
        ccjs:
          $ref: "#/components/schemas/CcjsDto"
        creditEnquiries:
          $ref: "#/components/schemas/CreditEnquiriesDto"
        landRegistry:
          $ref: "#/components/schemas/LandRegistryDto"
        employees:
          type: number
          description: Employees
        benchmark:
          $ref: "#/components/schemas/BenchmarkDto"
        windUp:
          $ref: "#/components/schemas/WindUpDto"
        paymentPerformance:
          $ref: "#/components/schemas/PaymentPerformanceDto"
        filingHistory:
          $ref: "#/components/schemas/FilingHistoryDto"
        riskFactorsSummary:
          $ref: "#/components/schemas/CreditRiskFactorsSummary"
      additionalProperties: false
      x-typescript-type: CreditReportDto
    SnapshotAvailableDto:
      title: SnapshotAvailableDto
      type: object
      description: "(tsType: SnapshotAvailableDto, schemaOptions: { exclude: undefined })"
      properties:
        debtorsOutstandingAmount:
          type: number
        revenue:
          type: number
        companyName:
          type: string
        integration:
          type: string
        netProfitPercentage:
          type: number
      additionalProperties: false
      x-typescript-type: SnapshotAvailableDto
    CompanyScoreDto:
      title: CompanyScoreDto
      type: object
      description: "(tsType: CompanyScoreDto, schemaOptions: { exclude: undefined })"
      properties:
        grade:
          type: string
          title: Grade
          oneOf:
            - type: string
              title: A
              const: A
            - type: string
              title: B
              const: B
            - type: string
              title: C
              const: C
            - type: string
              title: D
              const: D
            - type: string
              title: E
              const: E
            - type: string
              title: F
              const: F
            - type: string
              title: G
              const: G
            - type: string
              title: H
              const: H
        value:
          type: number
        text:
          type: string
        band:
          type: string
      additionalProperties: false
      x-typescript-type: CompanyScoreDto
    AnswerCurrencyDto:
      title: AnswerCurrencyDto
      type: object
      description: "(tsType: AnswerCurrencyDto, schemaOptions: { exclude: undefined })"
      properties:
        code:
          type: string
          enum:
            - GBP
            - EUR
            - ZAR
        value:
          type: number
      required:
        - code
        - value
      additionalProperties: false
      x-typescript-type: AnswerCurrencyDto
    PrimaryContactInformationDto:
      title: PrimaryContactInformationDto
      type: object
      description: "(tsType: PrimaryContactInformationDto, schemaOptions: { exclude: undefined })"
      properties:
        email:
          type: string
          title: Email address
        name:
          type: string
          title: Full name
        number:
          type: string
          title: Contact number
        inviteClient:
          type: boolean
        legalRequirements:
          type: boolean
        address:
          $ref: "#/components/schemas/AddressDto"
      additionalProperties: false
      x-typescript-type: PrimaryContactInformationDto
    UnencumberedAssetsDto:
      title: UnencumberedAssetsDto
      type: object
      description: "(tsType: UnencumberedAssetsDto, schemaOptions: { exclude: undefined })"
      properties:
        guarantees:
          type: array
          items:
            type: string
            enum:
              - BUSINESS
              - PERSONAL
        isHomeOwnership:
          type: boolean
        personalGuarantee:
          type: boolean
        businessOwnsAssets:
          type: boolean
      additionalProperties: false
      x-typescript-type: UnencumberedAssetsDto
    CompanyInformationDto:
      title: CompanyInformationDto
      type: object
      description: "(tsType: CompanyInformationDto, schemaOptions: { exclude: undefined })"
      properties:
        name:
          type: string
          title: Company name
        type:
          type: string
          title: Company type
          oneOf:
            - type: string
              title: Sole Trader
              const: SOLE_TRADER
            - type: string
              title: Limited Liability Partnership
              const: LIMITED_LIABILITY_PARTNERSHIP
            - type: string
              title: Limited Company
              const: LIMITED_COMPANY
            - type: string
              title: Startup
              const: STARTUP
        registrationNumber:
          type: string
          title: Company Number
        registrationDate:
          type: string
          format: date-time
          title: Registration Date
        summary:
          type: string
          title: Company summary
        incorporatedAt:
          type: string
          title: Incorporation date
        tradingFromDate:
          type: string
          title: Trading from date
        sector:
          type: string
          title: Sector
          oneOf:
            - type: string
              title: Agriculture
              const: AGRICULTURE
            - type: string
              title: Automotive
              const: AUTOMOTIVE
            - type: string
              title: Business Services
              const: BUSINESS_SERVICES
            - type: string
              title: Construction
              const: CONSTRUCTION
            - type: string
              title: Courier
              const: COURIER
            - type: string
              title: Distribution
              const: DISTRIBUTION
            - type: string
              title: Financial Services
              const: FINANCIAL_SERVICES
            - type: string
              title: Haulage
              const: HAULAGE
            - type: string
              title: Healthcare Care
              const: HEALTHCARE_CARE
            - type: string
              title: Hotels House
              const: HOTELS_HOUSE
            - type: string
              title: Import Export
              const: IMPORT_EXPORT
            - type: string
              title: IT Related
              const: IT_RELATED
            - type: string
              title: Manufacturing
              const: MANUFACTURING
            - type: string
              title: Print Publishing
              const: PRINT_PUBLISHING
            - type: string
              title: Professional Services
              const: PROFESSIONAL_SERVICES
            - type: string
              title: Property
              const: PROPERTY
            - type: string
              title: Recruitment
              const: RECRUITMENT
            - type: string
              title: Retail
              const: RETAIL
            - type: string
              title: Security Services
              const: SECURITY_SERVICES
            - type: string
              title: Trade
              const: TRADE
            - type: string
              title: Transportation
              const: TRANSPORTATION
            - type: string
              title: Wholesale
              const: WHOLESALE
            - type: string
              title: Other
              const: OTHER
            - type: string
              title: Education
              const: EDUCATION
            - type: string
              title: Charities
              const: CHARITIES
            - type: string
              title: Media and Entertainment
              const: MEDIA_AND_ENTERTAINMENT
        vatStatus:
          type: string
          title: VAT status
          oneOf:
            - type: string
              title: Registered
              const: REGISTERED
            - type: string
              title: Not registered
              const: NOT_REGISTERED
            - type: string
              title: Unknown
              const: UNKNOWN
        score:
          $ref: "#/components/schemas/CompanyScoreDto"
        creditLimit:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        tradingAddress:
          $ref: "#/components/schemas/AddressDto"
        primaryContactInformation:
          $ref: "#/components/schemas/PrimaryContactInformationDto"
        unencumberedAssets:
          $ref: "#/components/schemas/UnencumberedAssetsDto"
        isGovernmentBacked:
          type: boolean
        hasGovernmentBackedLoans:
          type: boolean
        employeesNumber:
          type: number
          title: No. of employees
        percentageSalesOnline:
          type: number
          title: "% of sales online"
        website:
          type: string
        activitySectorCode:
          type: string
        activitySectorDescription:
          type: string
      additionalProperties: false
      x-typescript-type: CompanyInformationDto
    TradingHistoryDto:
      title: TradingHistoryDto
      type: object
      description: "(tsType: TradingHistoryDto, schemaOptions: { exclude: undefined })"
      properties:
        debtorsInvoicesDue:
          type: number
        debtorsOutstanding:
          type: number
          title: Trade debtors
        fixedAssets:
          type: number
          title: Fixed assets
        netAssets:
          type: number
          title: Net assets
        profitNet:
          type: number
          title: Net profit/loss before tax
        dividends:
          type: number
        revenue:
          type: number
          title: Turnover
        year:
          type: number
        yearEnd:
          type: number
          title: End of trading year
      required:
        - profitNet
        - revenue
        - yearEnd
      additionalProperties: false
      x-typescript-type: TradingHistoryDto
    DebtorDto:
      title: DebtorDto
      type: object
      description: "(tsType: DebtorDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: string
        contactId:
          type: string
        name:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
          title: Debtor company name
        emailAddress:
          type: string
        outstandingAmount:
          type: number
        outstandingAmountMonthlyAverage:
          type: number
        outstandingInvoicesCount:
          type: number
        contactNumber:
          type: string
        debtorDays:
          type: number
        revenue:
          type: number
        averageMonthlyIncome:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        address:
          $ref: "#/components/schemas/AddressDto"
      required:
        - id
      additionalProperties: false
      x-typescript-type: DebtorDto
    FinancialsDto:
      title: FinancialsDto
      type: object
      description: "(tsType: FinancialsDto, schemaOptions: { exclude: undefined })"
      properties:
        bankInterest:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        depreciation:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        amortisation:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        tradingHistory:
          type: array
          items:
            $ref: "#/components/schemas/TradingHistoryDto"
        debtors:
          type: array
          items:
            $ref: "#/components/schemas/DebtorDto"
        primaryBank:
          type: number
        paymentTerms:
          type: number
          title: Payment terms (days)
        invoicesOutstanding:
          type: number
          title: Number of invoices outstanding
        numberOfCustomers:
          type: number
          title: Approx number of customers
        currentValueConfirmedOrders:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        grossProfitMargin:
          type: number
          title: Approx. gross profit margin %
      additionalProperties: false
      minProperties: 1
      x-typescript-type: FinancialsDto
    PersonDto:
      title: PersonDto
      type: object
      description: "(tsType: PersonDto, schemaOptions: { exclude: undefined })"
      properties:
        type:
          type: string
        title:
          type: string
        name:
          type: string
        address:
          $ref: "#/components/schemas/AddressDto"
        dateOfBirth:
          type: string
        ownership:
          type: number
        email:
          type: string
        contactNumber:
          type: string
      additionalProperties: false
      x-typescript-type: PersonDto
    PropertyDataDto:
      title: PropertyDataDto
      type: object
      description: "(tsType: PropertyDataDto, schemaOptions: { exclude: undefined })"
      properties:
        type:
          type: string
          oneOf:
            - type: string
              title: Hotel
              const: HOTEL
            - type: string
              title: Offices
              const: OFFICES
            - type: string
              title: Leisure Facility
              const: LEISURE_FACILITY
            - type: string
              title: Retail
              const: RETAIL
            - type: string
              title: Flats
              const: FLATS
            - type: string
              title: HMO
              const: HMO
            - type: string
              title: Other
              const: OTHER
            - type: string
              title: Residential Housing
              const: RESIDENTIAL_HOUSING
            - type: string
              title: Student Housing
              const: STUDENT_HOUSING
            - type: string
              title: Holiday Lets
              const: HOLIDAY_LETS
          title: Type
        location:
          type: string
          oneOf:
            - type: string
              title: UK Mainland
              const: UK_MAINLAND
            - type: string
              title: UK Isles
              const: UK_ISLES
            - type: string
              title: Scottish Mainland
              const: SCOTTISH_MAINLAND
            - type: string
              title: Scottish Isles
              const: SCOTTISH_ISLES
            - type: string
              title: Northern Ireland
              const: NORTHERN_IRELAND
            - type: string
              title: Europe
              const: EUROPE
            - type: string
              title: Other
              const: OTHER
          title: Location
        setting:
          type: string
          oneOf:
            - type: string
              title: Rural
              const: RURAL
            - type: string
              title: Industrial
              const: INDUSTRIAL
            - type: string
              title: Town
              const: TOWN
            - type: string
              title: City
              const: CITY
          title: Setting
        classification:
          type: string
          oneOf:
            - type: string
              title: Commercial
              const: COMMERCIAL
            - type: string
              title: Residential
              const: RESIDENTIAL
            - type: string
              title: Mixed use
              const: MIXED_USE
          title: Classification
        address:
          $ref: "#/components/schemas/AddressDto"
        value:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        outstandingDebt:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        depositAvailable:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        additionalDetails:
          type: string
          title: Additional Details
      additionalProperties: false
      x-typescript-type: PropertyDataDto
    AssetDataDto:
      title: AssetDataDto
      type: object
      description: "(tsType: AssetDataDto, schemaOptions: { exclude: undefined })"
      properties:
        name:
          type: string
          title: Make/model/URL
        offeredAsGuarantee:
          type: boolean
        type:
          type: string
          oneOf:
            - type: string
              title: Property
              const: PROPERTY
            - type: string
              title: Transportation
              const: TRANSPORTATION
            - type: string
              title: Office
              const: OFFICE
            - type: string
              title: Stock
              const: STOCK
            - type: string
              title: Manufacturing
              const: MANUFACTURING
            - type: string
              title: Business
              const: BUSINESS
          title: Asset type
        netCost:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        depositAvailable:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        existingAgreement:
          type: boolean
      additionalProperties: false
      x-typescript-type: AssetDataDto
    AssetSecurityDataDto:
      title: AssetSecurityDataDto
      type: object
      description: "(tsType: AssetSecurityDataDto, schemaOptions: { exclude: undefined })"
      properties:
        type:
          type: string
          oneOf:
            - type: string
              title: Main Property
              const: MAIN_PROPERTY
            - type: string
              title: Other Property
              const: OTHER_PROPERTY
            - type: string
              title: Other Fixed Assets
              const: OTHER_FIXED_ASSETS
          title: Asset type
        owner:
          type: string
          title: Asset owner
        address:
          $ref: "#/components/schemas/AddressDto"
        value:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        totalDebt:
          $ref: "#/components/schemas/AnswerCurrencyDto"
      additionalProperties: false
      x-typescript-type: AssetSecurityDataDto
    MerchantCashAdvanceDataDto:
      title: MerchantCashAdvanceDataDto
      type: object
      description: "(tsType: MerchantCashAdvanceDataDto, schemaOptions: { exclude: undefined })"
      properties:
        type:
          type: string
          oneOf:
            - type: string
              title: Ingenico
              const: Ingenico
            - type: string
              title: Izettle
              const: Izettle
            - type: string
              title: Paylevel
              const: Paylevel
            - type: string
              title: Paypal here
              const: Paypal here
            - type: string
              title: PB payment solutions
              const: PB payment solutions
            - type: string
              title: Shopify
              const: Shopify
            - type: string
              title: Smart trade
              const: SmartTrade
            - type: string
              title: Sumsup
              const: Sumsup
            - type: string
              title: Transax
              const: Transax
            - type: string
              title: Verifone
              const: Verifone
            - type: string
              title: Worldpay
              const: Worldpay
            - type: string
              title: Amazon
              const: Amazon
            - type: string
              title: Etsy
              const: Etsy
            - type: string
              title: Ebay
              const: Ebay
            - type: string
              title: Deliveroo
              const: Deliveroo
            - type: string
              title: Uber
              const: Uber
            - type: string
              title: Other
              const: Other
          title: Terminal provider
        averageMonthlyTransactions:
          type: number
          title: Last 6 months average transactions
        terminalId:
          type: string
          title: Terminal
        monthsOnBusinessLease:
          type: number
          title: Months Remaining on Business Lease
      additionalProperties: false
      x-typescript-type: MerchantCashAdvanceDataDto
    TradeReferenceDto:
      title: TradeReferenceDto
      type: object
      description: "(tsType: TradeReferenceDto, schemaOptions: { exclude: undefined })"
      properties:
        companyName:
          type: string
        contactName:
          type: string
        contactNumber:
          type: string
        contactEmail:
          type: string
      additionalProperties: false
      x-typescript-type: TradeReferenceDto
    AnonymousOwnerDto:
      title: AnonymousOwnerDto
      type: object
      description: "(tsType: AnonymousOwnerDto, schemaOptions: { exclude: undefined })"
      properties:
        countryCode:
          type: string
          enum:
            - ZA
            - GB
      additionalProperties: false
      x-typescript-type: AnonymousOwnerDto
    PartnerDto:
      title: PartnerDto
      type: object
      description: "(tsType: PartnerDto, schemaOptions: { exclude: undefined })"
      properties:
        apiKey:
          type: string
        entityId:
          type: number
      additionalProperties: false
      x-typescript-type: PartnerDto
    ProfileOwnerDto:
      title: ProfileOwnerDto
      type: object
      description: "(tsType: ProfileOwnerDto, schemaOptions: { exclude: undefined })"
      properties:
        apiKey:
          type: string
        partner:
          $ref: "#/components/schemas/PartnerDto"
        entityId:
          type: number
        userId:
          type: number
        type:
          type: string
      additionalProperties: false
      x-typescript-type: ProfileOwnerDto
    ProfileCoreApiLegacyDto:
      title: ProfileCoreApiLegacyDto
      type: object
      description: "(tsType: ProfileCoreApiLegacyDto, schemaOptions: { exclude: undefined })"
      properties:
        entityBusinessId:
          type: number
        fundingSearchId:
          type: number
      additionalProperties: false
      x-typescript-type: ProfileCoreApiLegacyDto
    EligibilityRequestSharedDataDto:
      title: EligibilityRequestSharedDataDto
      type: object
      description: "(tsType: EligibilityRequestSharedDataDto, schemaOptions: { exclude: undefined })"
      properties:
        fundingUrgency:
          type: string
        useOfFunds:
          type: string
        fundingAmount:
          $ref: "#/components/schemas/AnswerCurrencyDto"
        fundingPeriod:
          type: number
        previousLoanApplication:
          type: boolean
        previousLoanDeclined:
          type: boolean
        tradingImpacted:
          type: boolean
        declaredForBusinessPurposes:
          type: boolean
        backgroundPurpose:
          type: string
          title: Background and purpose
          description: What is the business background and the purpose of funds?
      additionalProperties: false
      x-typescript-type: EligibilityRequestSharedDataDto
    RecoveryDto:
      title: RecoveryDto
      type: object
      description: "(tsType: RecoveryDto, schemaOptions: { exclude: undefined })"
      properties:
        defendant:
          $ref: "#/components/schemas/CompanyInformationDto"
        claimAmount:
          $ref: "#/components/schemas/AnswerCurrencyDto"
      additionalProperties: false
      minProperties: 1
      x-typescript-type: RecoveryDto
    GrantsDto:
      title: GrantsDto
      type: object
      description: "(tsType: GrantsDto, schemaOptions: { exclude: undefined })"
      properties:
        uniqueIp:
          type: boolean
        previousGrantApplication:
          type: boolean
      additionalProperties: false
      minProperties: 1
      x-typescript-type: GrantsDto
    RdTaxClaimDto:
      title: RdTaxClaimDto
      type: object
      description: "(tsType: RdTaxClaimDto, schemaOptions: { exclude: undefined })"
      properties:
        isInnovating:
          type: boolean
        hasTaxRelief:
          type: boolean
      additionalProperties: false
      minProperties: 1
      x-typescript-type: RdTaxClaimDto
    InnovationRequirementsDto:
      title: InnovationRequirementsDto
      type: object
      description: "(tsType: InnovationRequirementsDto, schemaOptions: { exclude: undefined })"
      properties:
        tradingDifficulty:
          type: boolean
        grants:
          $ref: "#/components/schemas/GrantsDto"
        rdTaxClaim:
          $ref: "#/components/schemas/RdTaxClaimDto"
      additionalProperties: false
      minProperties: 1
      x-typescript-type: InnovationRequirementsDto
    MerchantCashDto:
      title: MerchantCashDto
      type: object
      description: "(tsType: MerchantCashDto, schemaOptions: { exclude: undefined })"
      properties:
        acceptsCommercePayments:
          type: boolean
      additionalProperties: false
      x-typescript-type: MerchantCashDto
    FundingAffordabilityFinancialDataDto:
      title: FundingAffordabilityFinancialDataDto
      type: object
      description: "(tsType: FundingAffordabilityFinancialDataDto, schemaOptions: { exclude: undefined })"
      properties:
        netProfit:
          type: number
        depreciation:
          type: number
        ebitida:
          type: number
        interest:
          type: number
        dividends:
          type: number
        monthlyNetCashFlow:
          type: number
        annualNetCashFlow:
          type: number
      additionalProperties: false
      x-typescript-type: FundingAffordabilityFinancialDataDto
    LoanDetailsDto:
      title: LoanDetailsDto
      type: object
      description: "(tsType: LoanDetailsDto, schemaOptions: { exclude: undefined })"
      properties:
        loanAmount:
          type: number
        loanRate:
          type: number
        loanTerm:
          type: number
        repaymentBudget:
          type: number
        repayment:
          type: number
        maxBorrowAmount:
          type: number
        averageInterest:
          type: number
        totalRepayable:
          type: number
        totalInterest:
          type: number
        lastCalculatedAt:
          type: string
      additionalProperties: false
      x-typescript-type: LoanDetailsDto
    ProviderFundingAffordabilityDetailsDto:
      title: ProviderFundingAffordabilityDetailsDto
      type: object
      description: "(tsType: ProviderFundingAffordabilityDetailsDto, schemaOptions: { exclude: undefined })"
      properties:
        creditTurnover:
          type: number
        debitTurnover:
          type: number
        debtRepayments:
          type: number
        netTurnover:
          type: number
        monthlyCashFlow:
          type: number
      additionalProperties: false
      x-typescript-type: ProviderFundingAffordabilityDetailsDto
    ProviderFundingAffordabilityDto:
      title: ProviderFundingAffordabilityDto
      type: object
      description: "(tsType: ProviderFundingAffordabilityDto, schemaOptions: { exclude: undefined })"
      properties:
        lastStatementUpdateDate:
          type: string
        last3Months:
          $ref: "#/components/schemas/ProviderFundingAffordabilityDetailsDto"
        last12Months:
          $ref: "#/components/schemas/ProviderFundingAffordabilityDetailsDto"
      additionalProperties: false
      x-typescript-type: ProviderFundingAffordabilityDto
    FundingAffordabilityDto:
      title: FundingAffordabilityDto
      type: object
      description: "(tsType: FundingAffordabilityDto, schemaOptions: { exclude: undefined })"
      properties:
        source:
          type: string
        provider:
          type: string
        repaymentBudget:
          type: number
        fundingAffordabilityFinancialData:
          $ref: "#/components/schemas/FundingAffordabilityFinancialDataDto"
        loanDetails:
          $ref: "#/components/schemas/LoanDetailsDto"
        providerFundingAffordability:
          $ref: "#/components/schemas/ProviderFundingAffordabilityDto"
      additionalProperties: false
      x-typescript-type: FundingAffordabilityDto
    EligibilityRequestResponseDto:
      title: EligibilityRequestResponseDto
      type: object
      description: "(tsType: EligibilityRequestResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        requestedProducts:
          type: array
          items:
            type: string
            enum:
              - TERM_LOAN
              - FIXED_LOAN_TERMS
              - ASSET_BACKED_FINANCE
              - MERCHANT_CASH_ADVANCE
              - INVOICE_FINANCE
              - E_COMMERCE_FUNDING
              - TRADE_FINANCE
              - COMMERCIAL_PROPERTY
        sourceQuestionnaireId:
          type: string
        shared:
          $ref: "#/components/schemas/EligibilityRequestSharedDataDto"
        recovery:
          $ref: "#/components/schemas/RecoveryDto"
        innovationRequirements:
          $ref: "#/components/schemas/InnovationRequirementsDto"
        commercialProperty:
          $ref: "#/components/schemas/CommercialPropertyDto"
        termLoan:
          $ref: "#/components/schemas/TermLoanDto"
        invoiceFinance:
          $ref: "#/components/schemas/InvoiceFinanceDto"
        merchantCash:
          $ref: "#/components/schemas/MerchantCashDto"
        assetFinance:
          $ref: "#/components/schemas/AssetFinanceDto"
        tradeFinance:
          $ref: "#/components/schemas/TradeFinanceDto"
        fundingAffordability:
          $ref: "#/components/schemas/FundingAffordabilityDto"
        appliedProducts:
          type: array
          items:
            type: string
      additionalProperties: false
      x-typescript-type: EligibilityRequestResponseDto
    PrivateProfileResponseDto:
      title: PrivateProfileResponseDto
      type: object
      description: "(tsType: PrivateProfileResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        companyInformation:
          $ref: "#/components/schemas/CompanyInformationDto"
        isAnonymous:
          type: boolean
        countryCode:
          type: string
          enum:
            - ZA
            - GB
        financials:
          $ref: "#/components/schemas/FinancialsDto"
        persons:
          type: array
          items:
            $ref: "#/components/schemas/PersonDto"
        properties:
          type: array
          items:
            $ref: "#/components/schemas/PropertyDataDto"
        assets:
          type: array
          items:
            $ref: "#/components/schemas/AssetDataDto"
        assetsForSecurity:
          type: array
          items:
            $ref: "#/components/schemas/AssetSecurityDataDto"
        merchantCashAdvance:
          type: array
          items:
            $ref: "#/components/schemas/MerchantCashAdvanceDataDto"
        tradeReferences:
          type: array
          items:
            $ref: "#/components/schemas/TradeReferenceDto"
        uuid:
          type: string
        anonymousOwner:
          $ref: "#/components/schemas/AnonymousOwnerDto"
        owner:
          $ref: "#/components/schemas/ProfileOwnerDto"
        legacy:
          $ref: "#/components/schemas/ProfileCoreApiLegacyDto"
        createdAt:
          type: string
        updatedAt:
          type: string
        eligibilityRequest:
          $ref: "#/components/schemas/EligibilityRequestResponseDto"
      additionalProperties: false
      x-typescript-type: PrivateProfileResponseDto
    EligibilityRequestDto:
      title: EligibilityRequestDto
      type: object
      description: "(tsType: EligibilityRequestDto, schemaOptions: { exclude: undefined })"
      properties:
        requestedProducts:
          type: array
          items:
            type: string
            enum:
              - TERM_LOAN
              - FIXED_LOAN_TERMS
              - ASSET_BACKED_FINANCE
              - MERCHANT_CASH_ADVANCE
              - INVOICE_FINANCE
              - E_COMMERCE_FUNDING
              - TRADE_FINANCE
              - COMMERCIAL_PROPERTY
        sourceQuestionnaireId:
          type: string
        shared:
          $ref: "#/components/schemas/EligibilityRequestSharedDataDto"
        recovery:
          $ref: "#/components/schemas/RecoveryDto"
        innovationRequirements:
          $ref: "#/components/schemas/InnovationRequirementsDto"
        commercialProperty:
          $ref: "#/components/schemas/CommercialPropertyDto"
        termLoan:
          $ref: "#/components/schemas/TermLoanDto"
        invoiceFinance:
          $ref: "#/components/schemas/InvoiceFinanceDto"
        merchantCash:
          $ref: "#/components/schemas/MerchantCashDto"
        assetFinance:
          $ref: "#/components/schemas/AssetFinanceDto"
        tradeFinance:
          $ref: "#/components/schemas/TradeFinanceDto"
        fundingAffordability:
          $ref: "#/components/schemas/FundingAffordabilityDto"
      additionalProperties: false
      x-typescript-type: EligibilityRequestDto
    PublicProfileRequestDto:
      title: PublicProfileRequestDto
      type: object
      description: "(tsType: PublicProfileRequestDto, schemaOptions: { exclude: undefined })"
      properties:
        companyInformation:
          $ref: "#/components/schemas/CompanyInformationDto"
        isAnonymous:
          type: boolean
        countryCode:
          type: string
          enum:
            - ZA
            - GB
        financials:
          $ref: "#/components/schemas/FinancialsDto"
        persons:
          type: array
          items:
            $ref: "#/components/schemas/PersonDto"
        properties:
          type: array
          items:
            $ref: "#/components/schemas/PropertyDataDto"
        assets:
          type: array
          items:
            $ref: "#/components/schemas/AssetDataDto"
        assetsForSecurity:
          type: array
          items:
            $ref: "#/components/schemas/AssetSecurityDataDto"
        merchantCashAdvance:
          type: array
          items:
            $ref: "#/components/schemas/MerchantCashAdvanceDataDto"
        tradeReferences:
          type: array
          items:
            $ref: "#/components/schemas/TradeReferenceDto"
        eligibilityRequest:
          $ref: "#/components/schemas/EligibilityRequestDto"
      additionalProperties: false
      x-typescript-type: PublicProfileRequestDto
    PublicProfileResponseDto:
      title: PublicProfileResponseDto
      type: object
      description: "(tsType: PublicProfileResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        companyInformation:
          $ref: "#/components/schemas/CompanyInformationDto"
        isAnonymous:
          type: boolean
        countryCode:
          type: string
          enum:
            - ZA
            - GB
        financials:
          $ref: "#/components/schemas/FinancialsDto"
        persons:
          type: array
          items:
            $ref: "#/components/schemas/PersonDto"
        properties:
          type: array
          items:
            $ref: "#/components/schemas/PropertyDataDto"
        assets:
          type: array
          items:
            $ref: "#/components/schemas/AssetDataDto"
        assetsForSecurity:
          type: array
          items:
            $ref: "#/components/schemas/AssetSecurityDataDto"
        merchantCashAdvance:
          type: array
          items:
            $ref: "#/components/schemas/MerchantCashAdvanceDataDto"
        tradeReferences:
          type: array
          items:
            $ref: "#/components/schemas/TradeReferenceDto"
        uuid:
          type: string
        eligibilityRequest:
          $ref: "#/components/schemas/EligibilityRequestResponseDto"
        legacy:
          $ref: "#/components/schemas/ProfileCoreApiLegacyDto"
        createdAt:
          type: string
        updatedAt:
          type: string
      additionalProperties: false
      x-typescript-type: PublicProfileResponseDto
    ProfileFundingAffordabilityPatchDto:
      title: ProfileFundingAffordabilityPatchDto
      type: object
      properties:
        source:
          type: string
        provider:
          type: string
        repaymentBudget:
          type: number
        fundingAffordabilityFinancialData:
          $ref: "#/components/schemas/FundingAffordabilityFinancialDataDto"
        loanDetails:
          $ref: "#/components/schemas/LoanDetailsDto"
        providerFundingAffordability:
          $ref: "#/components/schemas/ProviderFundingAffordabilityDto"
        fundingNeed:
          type: string
          enum:
            - COVER_COSTS
            - ASSET_FINANCE
            - PROPERTY
        assets:
          type: array
          items:
            $ref: "#/components/schemas/AssetDataDto"
      additionalProperties: false
    ProfileBackgroundPurposeDto:
      title: ProfileBackgroundPurposeDto
      type: object
      description: "(tsType: ProfileBackgroundPurposeDto, schemaOptions: { exclude: undefined })"
      properties:
        backgroundPurpose:
          type: string
          minLength: 1
      required:
        - backgroundPurpose
      additionalProperties: false
      x-typescript-type: ProfileBackgroundPurposeDto
    ProfileAddressDto:
      title: ProfileAddressDto
      type: object
      description: "(tsType: ProfileAddressDto, schemaOptions: { exclude: undefined })"
      properties:
        simpleValue:
          type: string
          minLength: 1
        street:
          type: string
          minLength: 1
        houseNumber:
          type: string
          minLength: 1
        city:
          type: string
          minLength: 1
        province:
          type: string
          minLength: 1
        postalCode:
          type: string
          minLength: 1
      required:
        - houseNumber
        - city
        - postalCode
      additionalProperties: false
      x-typescript-type: ProfileAddressDto
    ProfileCompanyDetailsDto:
      title: ProfileCompanyDetailsDto
      type: object
      description: "(tsType: ProfileCompanyDetailsDto, schemaOptions: { exclude: undefined })"
      properties:
        name:
          type: string
          minLength: 1
          pattern: ^[^\s]+(\s+[^\s]+)*$
        registrationNumber:
          type: string
          minLength: 8
          maxLength: 8
          pattern: ^[a-zA-Z0-9]*$
        type:
          type: string
          oneOf:
            - type: string
              title: Sole Trader
              const: SOLE_TRADER
            - type: string
              title: Limited Liability Partnership
              const: LIMITED_LIABILITY_PARTNERSHIP
            - type: string
              title: Limited Company
              const: LIMITED_COMPANY
            - type: string
              title: Startup
              const: STARTUP
        sector:
          type: string
          oneOf:
            - type: string
              title: Agriculture
              const: AGRICULTURE
            - type: string
              title: Automotive
              const: AUTOMOTIVE
            - type: string
              title: Business Services
              const: BUSINESS_SERVICES
            - type: string
              title: Construction
              const: CONSTRUCTION
            - type: string
              title: Courier
              const: COURIER
            - type: string
              title: Distribution
              const: DISTRIBUTION
            - type: string
              title: Financial Services
              const: FINANCIAL_SERVICES
            - type: string
              title: Haulage
              const: HAULAGE
            - type: string
              title: Healthcare Care
              const: HEALTHCARE_CARE
            - type: string
              title: Hotels House
              const: HOTELS_HOUSE
            - type: string
              title: Import Export
              const: IMPORT_EXPORT
            - type: string
              title: IT Related
              const: IT_RELATED
            - type: string
              title: Manufacturing
              const: MANUFACTURING
            - type: string
              title: Print Publishing
              const: PRINT_PUBLISHING
            - type: string
              title: Professional Services
              const: PROFESSIONAL_SERVICES
            - type: string
              title: Property
              const: PROPERTY
            - type: string
              title: Recruitment
              const: RECRUITMENT
            - type: string
              title: Retail
              const: RETAIL
            - type: string
              title: Security Services
              const: SECURITY_SERVICES
            - type: string
              title: Trade
              const: TRADE
            - type: string
              title: Transportation
              const: TRANSPORTATION
            - type: string
              title: Wholesale
              const: WHOLESALE
            - type: string
              title: Other
              const: OTHER
            - type: string
              title: Education
              const: EDUCATION
            - type: string
              title: Charities
              const: CHARITIES
            - type: string
              title: Media and Entertainment
              const: MEDIA_AND_ENTERTAINMENT
        vatStatus:
          type: string
          oneOf:
            - type: string
              title: Registered
              const: REGISTERED
            - type: string
              title: Not registered
              const: NOT_REGISTERED
            - type: string
              title: Unknown
              const: UNKNOWN
        tradingFromDate:
          type: string
          description: This field must be a date in the format YYYY-MM-DD
          format: date
        employeesNumber:
          type: integer
        percentageSalesOnline:
          type: integer
          minimum: 0
          maximum: 100
        score:
          oneOf:
            - type: string
              title: A
              const: A
            - type: string
              title: B
              const: B
            - type: string
              title: C
              const: C
            - type: string
              title: D
              const: D
            - type: string
              title: E
              const: E
            - type: string
              title: F
              const: F
            - type: string
              title: G
              const: G
            - type: string
              title: H
              const: H
        tradingAddress:
          $ref: "#/components/schemas/ProfileAddressDto"
        contactName:
          type: string
          minLength: 1
          pattern: ^[A-Za-zÀ-ÖØ-öø-ÿ]+( [A-Za-zÀ-ÖØ-öø-ÿ]+)+$
        contactEmail:
          type: string
          minLength: 1
          format: email
        contactNumber:
          type: string
          minLength: 11
          maxLength: 30
      required:
        - name
        - type
        - sector
        - vatStatus
        - tradingFromDate
        - tradingAddress
        - contactName
        - contactEmail
        - contactNumber
      additionalProperties: false
      x-typescript-type: ProfileCompanyDetailsDto
    ProfileTradingHistoryDto:
      title: ProfileTradingHistoryDto
      type: object
      properties:
        endOfTradingYear:
          type: string
          format: date
        fixedAssets:
          type: number
        tradeDebtors:
          type: number
        netAssets:
          type: number
        turnover:
          type: number
        netProfit:
          type: number
      required:
        - endOfTradingYear
        - turnover
        - netProfit
      additionalProperties: false
    ProfileTradeFinanceDto:
      title: ProfileTradeFinanceDto
      type: object
      description: "(tsType: ProfileTradeFinanceDto, schemaOptions: { exclude: undefined })"
      properties:
        currentValueOfDebtors:
          type: number
          minimum: 1
        numberOfCustomers:
          type: integer
          minimum: 1
        currentValueConfirmedOrder:
          type: number
          minimum: 1
        grossProfitMargin:
          type: integer
          minimum: 1
          maximum: 100
        onlineMerchant:
          type: boolean
      additionalProperties: false
      x-typescript-type: ProfileTradeFinanceDto
    ProfileCreditCardInformationDto:
      title: ProfileCreditCardInformationDto
      type: object
      description: "(tsType: ProfileCreditCardInformationDto, schemaOptions: { exclude: undefined })"
      properties:
        averageMonthlyTransactions:
          type: number
          minimum: 1
        provider:
          oneOf:
            - type: string
              title: Ingenico
              const: Ingenico
            - type: string
              title: Izettle
              const: Izettle
            - type: string
              title: Paylevel
              const: Paylevel
            - type: string
              title: Paypal here
              const: Paypal here
            - type: string
              title: PB payment solutions
              const: PB payment solutions
            - type: string
              title: Shopify
              const: Shopify
            - type: string
              title: Smart trade
              const: SmartTrade
            - type: string
              title: Sumsup
              const: Sumsup
            - type: string
              title: Transax
              const: Transax
            - type: string
              title: Verifone
              const: Verifone
            - type: string
              title: Worldpay
              const: Worldpay
            - type: string
              title: Amazon
              const: Amazon
            - type: string
              title: Etsy
              const: Etsy
            - type: string
              title: Ebay
              const: Ebay
            - type: string
              title: Deliveroo
              const: Deliveroo
            - type: string
              title: Uber
              const: Uber
            - type: string
              title: Other
              const: Other
        terminalId:
          type: string
          minLength: 1
        monthsOnBusinessLease:
          type: integer
          minimum: 1
      additionalProperties: false
      x-typescript-type: ProfileCreditCardInformationDto
    ProfilePropertyFinanceDto:
      title: ProfilePropertyFinanceDto
      type: object
      properties:
        type:
          oneOf:
            - type: string
              title: Hotel
              const: HOTEL
            - type: string
              title: Offices
              const: OFFICES
            - type: string
              title: Leisure Facility
              const: LEISURE_FACILITY
            - type: string
              title: Retail
              const: RETAIL
            - type: string
              title: Flats
              const: FLATS
            - type: string
              title: HMO
              const: HMO
            - type: string
              title: Other
              const: OTHER
            - type: string
              title: Residential Housing
              const: RESIDENTIAL_HOUSING
            - type: string
              title: Student Housing
              const: STUDENT_HOUSING
            - type: string
              title: Holiday Lets
              const: HOLIDAY_LETS
        usage:
          oneOf:
            - type: string
              title: Commercial
              const: COMMERCIAL
            - type: string
              title: Residential
              const: RESIDENTIAL
            - type: string
              title: Mixed use
              const: MIXED_USE
        address:
          $ref: "#/components/schemas/ProfileAddressDto"
        value:
          type: number
          minimum: 1
        debtOutstanding:
          type: number
          minimum: 0
        equityValue:
          type: number
          minimum: 1
        notes:
          type: string
          minLength: 1
      required:
        - address
        - value
        - debtOutstanding
        - equityValue
      additionalProperties: false
    ProfileDirectorAddressDto:
      title: ProfileDirectorAddressDto
      type: object
      description: "(tsType: ProfileDirectorAddressDto, schemaOptions: { exclude: undefined })"
      properties:
        simpleValue:
          type: string
          minLength: 1
        street:
          type: string
          minLength: 1
        houseNumber:
          type: string
          minLength: 1
        city:
          type: string
          minLength: 1
        province:
          type: string
          minLength: 1
        postalCode:
          type: string
          minLength: 1
        residentialStatus:
          type: string
          oneOf:
            - type: string
              title: Home owner
              const: HOME_OWNER
            - type: string
              title: Private Tenant
              const: PRIVATE_TENANT
            - type: string
              title: Council Tenant
              const: COUNCIL_TENANT
            - type: string
              title: Living With Parents
              const: LIVING_WITH_PARENTS
            - type: string
              title: Don't know
              const: DO_NOT_KNOW
        monthlyMortgage:
          type: number
        totalValueOfMortgage:
          type: number
      required:
        - houseNumber
        - city
        - postalCode
        - residentialStatus
      additionalProperties: false
      x-typescript-type: ProfileDirectorAddressDto
    ProfileDirectorDetailsResponseDto:
      title: ProfileDirectorDetailsResponseDto
      type: object
      properties:
        title:
          type: string
          oneOf:
            - type: string
              title: Mr
              const: MR
            - type: string
              title: Mrs
              const: MRS
            - type: string
              title: Miss
              const: MISS
            - type: string
              title: Ms
              const: MS
            - type: string
              title: Doctor
              const: DOCTOR
            - type: string
              title: Other
              const: OTHER
        fullName:
          type: string
          minLength: 1
        dateOfBirth:
          type: string
          format: date
        email:
          type: string
          format: email
          minLength: 1
        contactNumber:
          type: string
          minLength: 1
        position:
          type: string
          oneOf:
            - type: string
              title: Director
              const: DIRECTOR
            - type: string
              title: Secretary
              const: SECRETARY
            - type: string
              title: Owner
              const: OWNER
            - type: string
              title: Shareholder
              const: SHAREHOLDER
            - type: string
              title: Director and shareholder
              const: DIRECTOR_AND_SHAREHOLDER
            - type: string
              title: None of above
              const: NONE
        ownership:
          type: integer
          minimum: 0
          maximum: 100
        personalGuarantee:
          type: boolean
        address:
          $ref: "#/components/schemas/ProfileDirectorAddressDto"
        status:
          type: string
        id:
          type: string
      required:
        - title
        - fullName
        - dateOfBirth
        - email
        - contactNumber
        - position
        - ownership
        - personalGuarantee
        - address
      additionalProperties: false
    ProfileDirectorDetailsRequestDto:
      title: ProfileDirectorDetailsRequestDto
      type: object
      properties:
        title:
          type: string
          oneOf:
            - type: string
              title: Mr
              const: MR
            - type: string
              title: Mrs
              const: MRS
            - type: string
              title: Miss
              const: MISS
            - type: string
              title: Ms
              const: MS
            - type: string
              title: Doctor
              const: DOCTOR
            - type: string
              title: Other
              const: OTHER
        fullName:
          type: string
          minLength: 1
        dateOfBirth:
          type: string
          format: date
        email:
          type: string
          format: email
          minLength: 1
        contactNumber:
          type: string
          minLength: 1
        position:
          type: string
          oneOf:
            - type: string
              title: Director
              const: DIRECTOR
            - type: string
              title: Secretary
              const: SECRETARY
            - type: string
              title: Owner
              const: OWNER
            - type: string
              title: Shareholder
              const: SHAREHOLDER
            - type: string
              title: Director and shareholder
              const: DIRECTOR_AND_SHAREHOLDER
            - type: string
              title: None of above
              const: NONE
        ownership:
          type: integer
          minimum: 0
          maximum: 100
        personalGuarantee:
          type: boolean
        address:
          $ref: "#/components/schemas/ProfileDirectorAddressDto"
        status:
          type: string
      required:
        - title
        - fullName
        - dateOfBirth
        - email
        - contactNumber
        - position
        - ownership
        - personalGuarantee
        - address
      additionalProperties: false
    ProfileAssetToFinanceDto:
      title: ProfileAssetToFinanceDto
      type: object
      description: "(tsType: ProfileAssetToFinanceDto, schemaOptions: { exclude: undefined })"
      properties:
        type:
          type: string
          oneOf:
            - type: string
              title: Property
              const: PROPERTY
            - type: string
              title: Transportation
              const: TRANSPORTATION
            - type: string
              title: Office
              const: OFFICE
            - type: string
              title: Stock
              const: STOCK
            - type: string
              title: Manufacturing
              const: MANUFACTURING
            - type: string
              title: Business
              const: BUSINESS
        makeModelUrl:
          type: string
          minLength: 1
        cost:
          type: number
          minimum: 1
        depositAvailable:
          type: number
          minimum: 1
      required:
        - type
        - cost
      additionalProperties: false
      x-typescript-type: ProfileAssetToFinanceDto
    ProfileInvoiceFinanceDto:
      title: ProfileInvoiceFinanceDto
      type: object
      description: "(tsType: ProfileInvoiceFinanceDto, schemaOptions: { exclude: undefined })"
      properties:
        currentValueOfDebtors:
          type: number
          minimum: 1
        typicalPaymentTermsDays:
          type: integer
          minimum: 1
        numberOfInvoicesOutstanding:
          type: number
          minimum: 1
        numberOfCustomers:
          type: integer
          minimum: 0
      additionalProperties: false
      x-typescript-type: ProfileInvoiceFinanceDto
    ProfileAssetForSecurityDto:
      title: ProfileAssetForSecurityDto
      type: object
      properties:
        type:
          type: string
          oneOf:
            - type: string
              title: Main Property
              const: MAIN_PROPERTY
            - type: string
              title: Other Property
              const: OTHER_PROPERTY
            - type: string
              title: Other Fixed Assets
              const: OTHER_FIXED_ASSETS
        owner:
          type: string
          minLength: 1
        address:
          $ref: "#/components/schemas/ProfileAddressDto"
        value:
          type: number
          minimum: 1
        totalDebt:
          type: number
          minimum: 0
      required:
        - type
        - owner
        - address
      additionalProperties: false
    ProfileAccountantDetailsDto:
      title: ProfileAccountantDetailsDto
      type: object
      description: "(tsType: ProfileAccountantDetailsDto, schemaOptions: { exclude: undefined })"
      properties:
        accountingFirm:
          type: string
          pattern: ^[^\s]+(\s+[^\s]+)*$
          minLength: 1
        contactName:
          type: string
          minLength: 1
          pattern: ^[A-Za-zÀ-ÖØ-öø-ÿ]+( [A-Za-zÀ-ÖØ-öø-ÿ]+)+$
        contactNumber:
          type: string
          minLength: 11
          maxLength: 30
        contactEmail:
          type: string
          minLength: 1
          format: email
      required:
        - accountingFirm
        - contactName
        - contactNumber
        - contactEmail
      additionalProperties: false
      x-typescript-type: ProfileAccountantDetailsDto
    ProfileDocumentToUploadDto:
      title: ProfileDocumentToUploadDto
      type: object
      properties:
        group:
          type: string
        name:
          type: string
        required:
          type: boolean
        mimes:
          type: array
          items:
            type: string
        maxFileSize:
          type: number
      additionalProperties: false
    ProfileDocumentDto:
      title: ProfileDocumentDto
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        group:
          type: string
        fileName:
          type: string
        url:
          type: string
        draft:
          type: boolean
      additionalProperties: false
    ProfileOverDraftUsageDto:
      title: ProfileOverDraftUsageDto
      type: object
      description: "(tsType: ProfileOverDraftUsageDto, schemaOptions: { exclude: undefined })"
      properties:
        hasFacility:
          type: string
          oneOf:
            - type: string
              title: "Yes"
              const: "YES"
            - type: string
              title: "No"
              const: "NO"
            - type: string
              title: Don't know
              const: DONT_KNOW
        overdraftLimit:
          type: number
          minimum: 0
        exceededLimitLast12Months:
          type: string
          oneOf:
            - type: string
              title: "Yes"
              const: "YES"
            - type: string
              title: "No"
              const: "NO"
            - type: string
              title: Don't know
              const: DONT_KNOW
      required:
        - hasFacility
      additionalProperties: false
      x-typescript-type: ProfileOverDraftUsageDto
    MatchesResultsAverageDto:
      title: MatchesResultsAverageDto
      type: object
      properties:
        product:
          type: string
          enum:
            - TERM_LOAN
            - FIXED_LOAN_TERMS
            - ASSET_BACKED_FINANCE
            - MERCHANT_CASH_ADVANCE
            - INVOICE_FINANCE
            - E_COMMERCE_FUNDING
            - TRADE_FINANCE
            - COMMERCIAL_PROPERTY
        totalMatches:
          type: number
        responseTime:
          type: number
          description: Response time in hours
        likelihood:
          type: number
          description: Likelihood value between 1 and 5
        typicalRatesMin:
          type: number
        typicalRatesMax:
          type: number
      additionalProperties: false
    NetworkDto:
      title: NetworkDto
      type: object
      description: "(tsType: NetworkDto, schemaOptions: { exclude: undefined })"
      properties:
        name:
          type: string
        logoUrl:
          type: string
        defaultMembership:
          type: string
        signupEnabled:
          type: boolean
      additionalProperties: false
      x-typescript-type: NetworkDto
    LearnRegisterResponseDto:
      title: LearnRegisterResponseDto
      type: object
      description: "(tsType: LearnRegisterResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        userId:
          type: number
        redirect:
          type: string
        jwtToken:
          type: string
        refreshToken:
          type: string
      additionalProperties: false
      x-typescript-type: LearnRegisterResponseDto
    LearnRegisterDto:
      title: LearnRegisterDto
      type: object
      properties:
        name:
          type: string
        companyName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        introducerType:
          type: string
        terms:
          type: boolean
        newsletter:
          type: boolean
      additionalProperties: false
    DashboardActionDto:
      title: DashboardActionDto
      type: object
      properties:
        text:
          type: string
        count:
          type: number
        link:
          type: string
        priority:
          type: number
        severity:
          type: string
      additionalProperties: false
    CompanySearchDto:
      title: CompanySearchDto
      type: object
      description: "(tsType: CompanySearchDto, schemaOptions: { exclude: undefined })"
      properties:
        companyName:
          type: string
        registrationNumber:
          type: string
        address:
          type: string
        type:
          type: string
          enum:
            - Ltd
            - NonLtd
            - Unknown
      additionalProperties: false
      x-typescript-type: CompanySearchDto
    UserResponseDto:
      title: UserResponseDto
      type: object
      properties:
        id:
          type: number
        locale:
          $ref: "#/components/schemas/UserLocaleDto"
        entity:
          $ref: "#/components/schemas/EntityResponseDto"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        lastLoginAt:
          type: string
          format: date-time
        admin:
          type: boolean
      additionalProperties: false
    UserDetailsDto: {}
    CriteriaValueDto:
      title: CriteriaValueDto
      type: object
      description: "(tsType: CriteriaValueDto, schemaOptions: { exclude: undefined })"
      additionalProperties: true
      minProperties: 1
      x-typescript-type: CriteriaValueDto
    CriteriaDto:
      title: CriteriaDto
      type: object
      description: "(tsType: CriteriaDto, schemaOptions: { exclude: undefined })"
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - PRODUCT_TYPE
            - REQUIRED_DOCUMENTS
            - PROFILE_RULES
            - PRE_SELECTED
        productType:
          type: string
          enum:
            - TERM_LOAN
            - FIXED_LOAN_TERMS
            - ASSET_BACKED_FINANCE
            - MERCHANT_CASH_ADVANCE
            - INVOICE_FINANCE
            - E_COMMERCE_FUNDING
            - TRADE_FINANCE
            - COMMERCIAL_PROPERTY
        values:
          $ref: "#/components/schemas/CriteriaValueDto"
        id:
          type: string
        entityId:
          type: number
        active:
          type: boolean
      required:
        - name
        - type
        - productType
      additionalProperties: false
      minProperties: 1
      x-typescript-type: CriteriaDto
    CreateCriteriaDto:
      title: CreateCriteriaDto
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - PRODUCT_TYPE
            - REQUIRED_DOCUMENTS
            - PROFILE_RULES
            - PRE_SELECTED
        productType:
          type: string
          enum:
            - TERM_LOAN
            - FIXED_LOAN_TERMS
            - ASSET_BACKED_FINANCE
            - MERCHANT_CASH_ADVANCE
            - INVOICE_FINANCE
            - E_COMMERCE_FUNDING
            - TRADE_FINANCE
            - COMMERCIAL_PROPERTY
        values:
          $ref: "#/components/schemas/CriteriaValueDto"
      required:
        - name
        - type
        - productType
      additionalProperties: false
      minProperties: 1
    UpdateCriteriaDto:
      title: UpdateCriteriaDto
      type: object
      properties:
        name:
          type: string
        values:
          $ref: "#/components/schemas/CriteriaValueDto"
      required:
        - name
        - values
      additionalProperties: false
      minProperties: 1
    TodayPageOnboardingPreferencesDto:
      title: TodayPageOnboardingPreferencesDto
      type: object
      description: "(tsType: TodayPageOnboardingPreferencesDto, schemaOptions: { exclude: undefined })"
      properties:
        action1:
          type: boolean
        action2:
          type: boolean
        action3:
          type: boolean
        isComplete:
          type: boolean
      additionalProperties: false
      x-typescript-type: TodayPageOnboardingPreferencesDto
    UserPreferencesDto:
      title: UserPreferencesDto
      type: object
      description: "(tsType: UserPreferencesDto, schemaOptions: { exclude: undefined })"
      properties:
        onBoardingTodayPage:
          $ref: "#/components/schemas/TodayPageOnboardingPreferencesDto"
        lastTodayPageDigest:
          type: string
          format: date-time
          title: The last Today Page Digest date.
        monthlyEmailDigest:
          type: boolean
          title: Indicates disabled or enabled an Introducer monthly summary alert.
        todayPageDigest:
          type: boolean
          title: Indicates disabled or enabled a Today Page weekly summary alert.
        creditProfileAlerts:
          type: boolean
          title: Indicates disabled or enabled alerts when the credit profile has been refreshed or when a legal notice has been detected.
        creditRiskManagerAlerts:
          type: boolean
          title: Indicates disabled or enabled alerts when the credit profiles of the monitored companies have been refreshed, or a legal notice has been detected.
        fundingEligibilityAlerts:
          type: boolean
          title: Indicates disabled or enabled alerts when the eligibility for funding has been improved.
        identityFraudAlerts:
          type: boolean
          title: Indicates disabled or enabled alerts when the new bank accounts have been opened.
        companyFilingAlerts:
          type: boolean
          title: Indicates disabled or enabled alerts when the company should file their data.
      additionalProperties: true
      x-typescript-type: UserPreferencesDto
    UserProfileDto:
      title: UserProfileDto
      type: object
      description: "(tsType: UserProfileDto, schemaOptions: { exclude: undefined })"
      properties:
        id:
          type: number
        userId:
          type: number
        profilePicture:
          type: string
        role:
          type: string
        preferences:
          $ref: "#/components/schemas/UserPreferencesDto"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      additionalProperties: false
      x-typescript-type: UserProfileDto
    UserPreferencesUpdateRequestDto:
      title: UserPreferencesUpdateRequestDto
      type: object
      properties:
        monthlyEmailDigest:
          type: boolean
          title: Disable or enable an Introducer monthly summary alert.
        todayPageDigest:
          type: boolean
          title: Disable or enable a Today Page weekly summary alert.
        creditProfileAlerts:
          type: boolean
          title: Disable or enable alerts when the credit profile has been refreshed or when a legal notice has been detected.
        creditRiskManagerAlerts:
          type: boolean
          title: Disable or enable alerts when the credit profiles of the monitored companies have been refreshed, or a legal notice has been detected.
        fundingEligibilityAlerts:
          type: boolean
          title: Disable or enable alerts when the eligibility for funding has been improved.
        identityFraudAlerts:
          type: boolean
          title: Disable or enable alerts when the new bank accounts have been opened.
        companyFilingAlerts:
          type: boolean
          title: Indicates disabled or enabled alerts when the company should file their data.
      additionalProperties: false
    RepaymentCalculationResponseDto:
      title: RepaymentCalculationResponseDto
      type: object
      description: "(tsType: RepaymentCalculationResponseDto, schemaOptions: { exclude: undefined })"
      properties:
        repayment:
          type: number
        totalRepayable:
          type: number
        averageInterest:
          type: number
        totalInterest:
          type: number
      additionalProperties: false
      x-typescript-type: RepaymentCalculationResponseDto
    RepaymentCalculationRequestDto:
      title: RepaymentCalculationRequestDto
      type: object
      properties:
        amount:
          type: number
          description: Amount to lend
          minimum: 0
        rate:
          type: number
          description: Loan rate percentage
          minimum: 0
        term:
          type: number
          description: Loan term (in months)
          minimum: 1
      required:
        - amount
        - rate
        - term
      additionalProperties: false
    MaxBorrowAmountCalculationResponseDto:
      title: MaxBorrowAmountCalculationResponseDto
      type: object
      properties:
        amount:
          type: number
      additionalProperties: false
    MaxBorrowAmountCalculationRequestDto:
      title: MaxBorrowAmountCalculationRequestDto
      type: object
      properties:
        repaymentBudget:
          type: number
          description: Monthly budget
          minimum: 0
        rate:
          type: number
          description: Loan rate percentage
          minimum: 0
        term:
          type: number
          description: Loan term (in months)
          minimum: 1
      required:
        - repaymentBudget
        - rate
        - term
      additionalProperties: false
    VehicleSearchResultDto:
      title: VehicleSearchResultDto
      type: object
      description: "(tsType: VehicleSearchResultDto, schemaOptions: { exclude: undefined })"
      properties:
        registrationNumber:
          type: string
        make:
          type: string
        model:
          type: string
        colour:
          type: string
        fuelType:
          type: string
        yearOfManufacture:
          type: number
        mileage:
          type: string
        tradeValuation:
          type: string
        dealerValuation:
          type: string
        auctionValuation:
          type: string
        valuationDate:
          type: string
        imageUrls:
          type: array
          items:
            type: string
      additionalProperties: false
      x-typescript-type: VehicleSearchResultDto
    PartialTeamResponseDto: {}
    TeamRequestDto: {}
    UserInTeamResponseDto:
      title: UserInTeamResponseDto
      type: object
      properties:
        id:
          type: number
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        isChampion:
          type: boolean
        roles:
          type: array
          items:
            type: string
        lastLogin:
          type: string
          format: date-time
        enabled:
          type: boolean
      additionalProperties: false
    EntityTeamResponseDto:
      title: EntityTeamResponseDto
      type: object
      properties:
        id:
          type: number
        companyNumber:
          type: string
        companyName:
          type: string
        type:
          type: string
          enum:
            - BUSINESS
            - INTRODUCER
            - LENDER
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - DRAFT
      additionalProperties: false
    FullTeamResponseDto:
      title: FullTeamResponseDto
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        championUser:
          type: number
        defaultTeam:
          type: boolean
        createdAt:
          type: string
          format: date-time
        champion:
          $ref: "#/components/schemas/UserInTeamResponseDto"
        entity:
          $ref: "#/components/schemas/EntityTeamResponseDto"
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
        users:
          type: array
          items:
            $ref: "#/components/schemas/UserInTeamResponseDto"
      additionalProperties: false
    EditTeamRequestDto: {}
